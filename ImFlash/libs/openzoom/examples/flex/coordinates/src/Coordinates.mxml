<?xml version="1.0" encoding="utf-8"?>
<!--////////////////////////////////////////////////////////////////////////////

    OpenZoom SDK Example
    Copyright (c) 2007-2009, Daniel Gasienica <daniel@gasienica.ch>

    License: MPL 1.1/GPL 3/LGPL 3

/////////////////////////////////////////////////////////////////////////////-->
<mx:Application
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:openzoom="org.openzoom.flex.components.*"
    xmlns:constraints="org.openzoom.flash.viewport.constraints.*"
    xmlns:controllers="org.openzoom.flash.viewport.controllers.*"
    xmlns:transformers="org.openzoom.flash.viewport.transformers.*"
    backgroundGradientColors="[0, 0]"
    layout="absolute"
    applicationComplete="applicationCompleteHandler(event)"
    >
    <mx:Script>
        <![CDATA[

            import mx.events.FlexEvent;
        
            import org.openzoom.flash.descriptors.IMultiScaleImageDescriptor;

            private function applicationCompleteHandler(event:FlexEvent):void
            {
                image.addEventListener(MouseEvent.CLICK,
                                       image_clickHandler,
                                       false, 0, true)
            }

            private function image_clickHandler(event:MouseEvent):void
            {
                var componentPoint:Point = image.globalToLocal(new Point(event.stageX, event.stageY))
                trace("Click coordinates in component coordinates:", componentPoint)
                var scenePoint:Point = image.localToScene(componentPoint)

                // Remember: Scene dimensions != image dimensions (scene currently
                // has largest dimension == 16384 (2^14) for best rendering in Flash
                // Player, might change in the future, though).
                // Always normalize (map to [0, 1]) to scene through division by
                // scene dimensions (scene.sceneWidth & scene.sceneHeight) and
                // then map to image coordinates through multiplication with
                // descriptor dimensions (image.source.width & image.source.height)

                var descriptor:IMultiScaleImageDescriptor = image.source as IMultiScaleImageDescriptor
                if (descriptor)
                {
                    var imagePoint:Point = scenePoint.clone()
                    imagePoint.x /= image.sceneWidth
                    imagePoint.y /= image.sceneHeight
                    imagePoint.x *= descriptor.width
                    imagePoint.y *= descriptor.height

                    if (0 <= imagePoint.x && imagePoint.x <= descriptor.width &&
                        0 <= imagePoint.y && imagePoint.y <= descriptor.height)
                    {
                        trace("Yay, you've clicked inside the image!")
                        trace("Click coordinates in scene coordinates:", scenePoint)
                        trace("Click coordinates in image coordinates:", imagePoint)
                    }
                }
            }

        ]]>
    </mx:Script>
    <openzoom:MultiScaleImage
        id="image"
        source="../../../../resources/images/deepzoom/billions.xml"
        top="0"
        right="0"
        bottom="0"
        left="0"
        >
        <openzoom:transformer>
            <transformers:TweenerTransformer/>
        </openzoom:transformer>
        <openzoom:controllers>
            <controllers:ContextMenuController/>
            <controllers:MouseController/>
            <controllers:KeyboardController/>
        </openzoom:controllers>
        <openzoom:constraint>
            <constraints:CenterConstraint/>
        </openzoom:constraint>
    </openzoom:MultiScaleImage>
</mx:Application>
