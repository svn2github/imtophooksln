<?xml version="1.0" encoding="utf-8"?>
<!--////////////////////////////////////////////////////////////////////////////

    OpenZoom SDK Example
    Copyright (c) 2007-2009, Daniel Gasienica <daniel@gasienica.ch>

    License: MPL 1.1/GPL 3/LGPL 3

/////////////////////////////////////////////////////////////////////////////-->
<mx:Application
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:components="org.openzoom.flex.components.*"
    xmlns:constraints="org.openzoom.flash.viewport.constraints.*"
    xmlns:controllers="org.openzoom.flash.viewport.controllers.*"
    xmlns:transformers="org.openzoom.flash.viewport.transformers.*"
    backgroundGradientColors="[#FFFFFF, #FFFFFF]"
    layout="absolute"
    applicationComplete="applicationCompleteHandler(event)"
    >

    <!--

        OpenZoom Showcase
        IsThisYourLuggage.com

        All Artwork & Content Copyright 2009, IsThisYourLuggage.com

    -->

    <mx:Script>
        <![CDATA[

            import org.openzoom.examples.ityl.Suitcase;
            import org.openzoom.examples.ityl.renderers.SuitcaseRenderer;
            import org.openzoom.examples.ityl.pages.Page;
            import org.openzoom.examples.ityl.pages.AboutPageAsset;
            import org.openzoom.examples.ityl.pages.ContactPageAsset;
            import org.openzoom.examples.ityl.pages.OtherStuffPageAsset;

            import org.openzoom.flash.events.NetworkRequestEvent;
            import org.openzoom.flash.net.INetworkRequest;
            import org.openzoom.flash.net.NetworkQueue;
            import org.openzoom.flash.utils.ExternalMouseWheel;
            import org.openzoom.flash.viewport.SceneViewport;

            import mx.events.FlexEvent;

            private const HOME_BOUNDS:Rectangle = new Rectangle(0.36, 0.07, 0.31, 0.19)

            private var suitcases:Array = []
            private var loader:NetworkQueue

            private var contactPage:Page
            private var aboutPage:Page
            private var otherStuffPage:Page

            private function applicationCompleteHandler(event:FlexEvent):void
            {
                ExternalMouseWheel.initialize(stage)

                container.viewport.fitToBounds(HOME_BOUNDS, 0.8, true)
                loader = new NetworkQueue()

                suitcases.push(new Suitcase("red-case", 0))
                suitcases.push(new Suitcase("blue-case-small", 146))
                suitcases.push(new Suitcase("blue-case-big", 260))
                suitcases.push(new Suitcase("black-case-big", 464))
                suitcases.push(new Suitcase("black-case-small", 591))

                for each (var suitcase:Suitcase in suitcases)
                {
                    var url:String = "images/suitcases/" + suitcase.name + ".png"
                    var request:INetworkRequest = loader.addRequest(url, Bitmap, suitcase)
                    request.addEventListener(NetworkRequestEvent.COMPLETE,
                                             request_completeHandler)
                }

                contactPage = new ContactPageAsset()
                contactPage.x = 1400
                contactPage.y = 990
                container.addChild(contactPage)

                aboutPage = new AboutPageAsset()
                aboutPage.x = 200
                aboutPage.y = 1050
                container.addChild(aboutPage)

                otherStuffPage = new OtherStuffPageAsset()
                otherStuffPage.x = 1245
                otherStuffPage.y = 1800
                container.addChild(otherStuffPage)
            }

            private function request_completeHandler(event:NetworkRequestEvent):void
            {
                event.request.removeEventListener(NetworkRequestEvent.COMPLETE,
                                                  request_completeHandler)

                var data:Suitcase = event.context as Suitcase
                data.image = event.data as Bitmap

                var renderer:SuitcaseRenderer = new SuitcaseRenderer(data)
                renderer.x = (container.sceneWidth - 600) / 2 + data.offset
                renderer.y = 300 + (200 - renderer.height)
                container.addChild(renderer)
            }

        ]]>
    </mx:Script>

    <components:MultiScaleContainer
        id="container"
        top="0"
        right="0"
        bottom="0"
        left="0"
        sceneWidth="2400"
        sceneHeight="2400"
        >
        <components:controllers>
            <controllers:KeyboardController/>
            <controllers:MouseController clickEnabled="false"/>
            <controllers:ContextMenuController/>
        </components:controllers>
        <components:transformer>
            <transformers:TweenerTransformer/>
        </components:transformer>
        <components:constraint>
            <constraints:CompositeConstraint>
               <constraints:ScaleConstraint maxScale="20"/>
               <constraints:CenterConstraint/>
               <constraints:ZoomConstraint minZoom="1"/>
            </constraints:CompositeConstraint>
        </components:constraint>
    </components:MultiScaleContainer>

    <mx:Image
        source="@Embed('../assets/buttons/home-button.png')"
        top="-2"
        left="10"
        buttonMode="true"
        click="container.showAll()"
        />

    <mx:Image
        source="@Embed('../assets/buttons/about-button.png')"
        top="-14"
        right="244"
        buttonMode="true"
        click="aboutPage.focus()"
        />

    <mx:Image
        source="@Embed('../assets/buttons/contact-button.png')"
        top="-14"
        right="128"
        buttonMode="true"
        click="contactPage.focus()"
        />

    <mx:Image
        source="@Embed('../assets/buttons/other-stuff-button.png')"
        top="-14"
        right="8"
        buttonMode="true"
        click="otherStuffPage.focus()"
        />

</mx:Application>
