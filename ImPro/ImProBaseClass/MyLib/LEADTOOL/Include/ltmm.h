

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0500 */
/* at Wed Dec 02 13:02:44 2009
 */
/* Compiler settings for .\ltmm.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __ltmm_h__
#define __ltmm_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IltmmDVDSubpictureStream_FWD_DEFINED__
#define __IltmmDVDSubpictureStream_FWD_DEFINED__
typedef interface IltmmDVDSubpictureStream IltmmDVDSubpictureStream;
#endif 	/* __IltmmDVDSubpictureStream_FWD_DEFINED__ */


#ifndef __IltmmDVDAudioStream_FWD_DEFINED__
#define __IltmmDVDAudioStream_FWD_DEFINED__
typedef interface IltmmDVDAudioStream IltmmDVDAudioStream;
#endif 	/* __IltmmDVDAudioStream_FWD_DEFINED__ */


#ifndef __IltmmDVDChapter_FWD_DEFINED__
#define __IltmmDVDChapter_FWD_DEFINED__
typedef interface IltmmDVDChapter IltmmDVDChapter;
#endif 	/* __IltmmDVDChapter_FWD_DEFINED__ */


#ifndef __IltmmDVDTitle_FWD_DEFINED__
#define __IltmmDVDTitle_FWD_DEFINED__
typedef interface IltmmDVDTitle IltmmDVDTitle;
#endif 	/* __IltmmDVDTitle_FWD_DEFINED__ */


#ifndef __IltmmDVDSource_FWD_DEFINED__
#define __IltmmDVDSource_FWD_DEFINED__
typedef interface IltmmDVDSource IltmmDVDSource;
#endif 	/* __IltmmDVDSource_FWD_DEFINED__ */


#ifndef __IltmmDVDPlaylistParser_FWD_DEFINED__
#define __IltmmDVDPlaylistParser_FWD_DEFINED__
typedef interface IltmmDVDPlaylistParser IltmmDVDPlaylistParser;
#endif 	/* __IltmmDVDPlaylistParser_FWD_DEFINED__ */


#ifndef __IltmmTVTuner_FWD_DEFINED__
#define __IltmmTVTuner_FWD_DEFINED__
typedef interface IltmmTVTuner IltmmTVTuner;
#endif 	/* __IltmmTVTuner_FWD_DEFINED__ */


#ifndef __IltmmAnalogVideoDecoder_FWD_DEFINED__
#define __IltmmAnalogVideoDecoder_FWD_DEFINED__
typedef interface IltmmAnalogVideoDecoder IltmmAnalogVideoDecoder;
#endif 	/* __IltmmAnalogVideoDecoder_FWD_DEFINED__ */


#ifndef __IltmmAudioInput_FWD_DEFINED__
#define __IltmmAudioInput_FWD_DEFINED__
typedef interface IltmmAudioInput IltmmAudioInput;
#endif 	/* __IltmmAudioInput_FWD_DEFINED__ */


#ifndef __IltmmAudioInputs_FWD_DEFINED__
#define __IltmmAudioInputs_FWD_DEFINED__
typedef interface IltmmAudioInputs IltmmAudioInputs;
#endif 	/* __IltmmAudioInputs_FWD_DEFINED__ */


#ifndef __IltmmCaptureInput_FWD_DEFINED__
#define __IltmmCaptureInput_FWD_DEFINED__
typedef interface IltmmCaptureInput IltmmCaptureInput;
#endif 	/* __IltmmCaptureInput_FWD_DEFINED__ */


#ifndef __IltmmCaptureInputs1_FWD_DEFINED__
#define __IltmmCaptureInputs1_FWD_DEFINED__
typedef interface IltmmCaptureInputs1 IltmmCaptureInputs1;
#endif 	/* __IltmmCaptureInputs1_FWD_DEFINED__ */


#ifndef __IltmmCaptureInputs_FWD_DEFINED__
#define __IltmmCaptureInputs_FWD_DEFINED__
typedef interface IltmmCaptureInputs IltmmCaptureInputs;
#endif 	/* __IltmmCaptureInputs_FWD_DEFINED__ */


#ifndef __IltmmCaptureSize_FWD_DEFINED__
#define __IltmmCaptureSize_FWD_DEFINED__
typedef interface IltmmCaptureSize IltmmCaptureSize;
#endif 	/* __IltmmCaptureSize_FWD_DEFINED__ */


#ifndef __IltmmCaptureSizes_FWD_DEFINED__
#define __IltmmCaptureSizes_FWD_DEFINED__
typedef interface IltmmCaptureSizes IltmmCaptureSizes;
#endif 	/* __IltmmCaptureSizes_FWD_DEFINED__ */


#ifndef __IltmmVideoFormat_FWD_DEFINED__
#define __IltmmVideoFormat_FWD_DEFINED__
typedef interface IltmmVideoFormat IltmmVideoFormat;
#endif 	/* __IltmmVideoFormat_FWD_DEFINED__ */


#ifndef __IltmmVideoFormats_FWD_DEFINED__
#define __IltmmVideoFormats_FWD_DEFINED__
typedef interface IltmmVideoFormats IltmmVideoFormats;
#endif 	/* __IltmmVideoFormats_FWD_DEFINED__ */


#ifndef __IltmmAudioFormat_FWD_DEFINED__
#define __IltmmAudioFormat_FWD_DEFINED__
typedef interface IltmmAudioFormat IltmmAudioFormat;
#endif 	/* __IltmmAudioFormat_FWD_DEFINED__ */


#ifndef __IltmmAudioFormats_FWD_DEFINED__
#define __IltmmAudioFormats_FWD_DEFINED__
typedef interface IltmmAudioFormats IltmmAudioFormats;
#endif 	/* __IltmmAudioFormats_FWD_DEFINED__ */


#ifndef __IltmmCaptureSubType_FWD_DEFINED__
#define __IltmmCaptureSubType_FWD_DEFINED__
typedef interface IltmmCaptureSubType IltmmCaptureSubType;
#endif 	/* __IltmmCaptureSubType_FWD_DEFINED__ */


#ifndef __IltmmCaptureSubTypes_FWD_DEFINED__
#define __IltmmCaptureSubTypes_FWD_DEFINED__
typedef interface IltmmCaptureSubTypes IltmmCaptureSubTypes;
#endif 	/* __IltmmCaptureSubTypes_FWD_DEFINED__ */


#ifndef __IltmmTargetFormat1_FWD_DEFINED__
#define __IltmmTargetFormat1_FWD_DEFINED__
typedef interface IltmmTargetFormat1 IltmmTargetFormat1;
#endif 	/* __IltmmTargetFormat1_FWD_DEFINED__ */


#ifndef __IltmmTargetFormat2_FWD_DEFINED__
#define __IltmmTargetFormat2_FWD_DEFINED__
typedef interface IltmmTargetFormat2 IltmmTargetFormat2;
#endif 	/* __IltmmTargetFormat2_FWD_DEFINED__ */


#ifndef __IltmmTargetFormat_FWD_DEFINED__
#define __IltmmTargetFormat_FWD_DEFINED__
typedef interface IltmmTargetFormat IltmmTargetFormat;
#endif 	/* __IltmmTargetFormat_FWD_DEFINED__ */


#ifndef __IltmmTargetFormats1_FWD_DEFINED__
#define __IltmmTargetFormats1_FWD_DEFINED__
typedef interface IltmmTargetFormats1 IltmmTargetFormats1;
#endif 	/* __IltmmTargetFormats1_FWD_DEFINED__ */


#ifndef __IltmmTargetFormats2_FWD_DEFINED__
#define __IltmmTargetFormats2_FWD_DEFINED__
typedef interface IltmmTargetFormats2 IltmmTargetFormats2;
#endif 	/* __IltmmTargetFormats2_FWD_DEFINED__ */


#ifndef __IltmmTargetFormats_FWD_DEFINED__
#define __IltmmTargetFormats_FWD_DEFINED__
typedef interface IltmmTargetFormats IltmmTargetFormats;
#endif 	/* __IltmmTargetFormats_FWD_DEFINED__ */


#ifndef __IltmmCompressor1_FWD_DEFINED__
#define __IltmmCompressor1_FWD_DEFINED__
typedef interface IltmmCompressor1 IltmmCompressor1;
#endif 	/* __IltmmCompressor1_FWD_DEFINED__ */


#ifndef __IltmmCompressor_FWD_DEFINED__
#define __IltmmCompressor_FWD_DEFINED__
typedef interface IltmmCompressor IltmmCompressor;
#endif 	/* __IltmmCompressor_FWD_DEFINED__ */


#ifndef __IltmmCompressors1_FWD_DEFINED__
#define __IltmmCompressors1_FWD_DEFINED__
typedef interface IltmmCompressors1 IltmmCompressors1;
#endif 	/* __IltmmCompressors1_FWD_DEFINED__ */


#ifndef __IltmmCompressors_FWD_DEFINED__
#define __IltmmCompressors_FWD_DEFINED__
typedef interface IltmmCompressors IltmmCompressors;
#endif 	/* __IltmmCompressors_FWD_DEFINED__ */


#ifndef __IltmmDevice_FWD_DEFINED__
#define __IltmmDevice_FWD_DEFINED__
typedef interface IltmmDevice IltmmDevice;
#endif 	/* __IltmmDevice_FWD_DEFINED__ */


#ifndef __IltmmDevices_FWD_DEFINED__
#define __IltmmDevices_FWD_DEFINED__
typedef interface IltmmDevices IltmmDevices;
#endif 	/* __IltmmDevices_FWD_DEFINED__ */


#ifndef __IltmmRenderer_FWD_DEFINED__
#define __IltmmRenderer_FWD_DEFINED__
typedef interface IltmmRenderer IltmmRenderer;
#endif 	/* __IltmmRenderer_FWD_DEFINED__ */


#ifndef __IltmmRenderers_FWD_DEFINED__
#define __IltmmRenderers_FWD_DEFINED__
typedef interface IltmmRenderers IltmmRenderers;
#endif 	/* __IltmmRenderers_FWD_DEFINED__ */


#ifndef __IltmmTargetDevice_FWD_DEFINED__
#define __IltmmTargetDevice_FWD_DEFINED__
typedef interface IltmmTargetDevice IltmmTargetDevice;
#endif 	/* __IltmmTargetDevice_FWD_DEFINED__ */


#ifndef __IltmmTargetDevices_FWD_DEFINED__
#define __IltmmTargetDevices_FWD_DEFINED__
typedef interface IltmmTargetDevices IltmmTargetDevices;
#endif 	/* __IltmmTargetDevices_FWD_DEFINED__ */


#ifndef __IltmmProcessor1_FWD_DEFINED__
#define __IltmmProcessor1_FWD_DEFINED__
typedef interface IltmmProcessor1 IltmmProcessor1;
#endif 	/* __IltmmProcessor1_FWD_DEFINED__ */


#ifndef __IltmmProcessor_FWD_DEFINED__
#define __IltmmProcessor_FWD_DEFINED__
typedef interface IltmmProcessor IltmmProcessor;
#endif 	/* __IltmmProcessor_FWD_DEFINED__ */


#ifndef __IltmmProcessors1_FWD_DEFINED__
#define __IltmmProcessors1_FWD_DEFINED__
typedef interface IltmmProcessors1 IltmmProcessors1;
#endif 	/* __IltmmProcessors1_FWD_DEFINED__ */


#ifndef __IltmmProcessors_FWD_DEFINED__
#define __IltmmProcessors_FWD_DEFINED__
typedef interface IltmmProcessors IltmmProcessors;
#endif 	/* __IltmmProcessors_FWD_DEFINED__ */


#ifndef __IltmmMediaType_FWD_DEFINED__
#define __IltmmMediaType_FWD_DEFINED__
typedef interface IltmmMediaType IltmmMediaType;
#endif 	/* __IltmmMediaType_FWD_DEFINED__ */


#ifndef __IltmmMediaTypeDisp_FWD_DEFINED__
#define __IltmmMediaTypeDisp_FWD_DEFINED__
typedef interface IltmmMediaTypeDisp IltmmMediaTypeDisp;
#endif 	/* __IltmmMediaTypeDisp_FWD_DEFINED__ */


#ifndef __IltmmWMMutualExclusion_FWD_DEFINED__
#define __IltmmWMMutualExclusion_FWD_DEFINED__
typedef interface IltmmWMMutualExclusion IltmmWMMutualExclusion;
#endif 	/* __IltmmWMMutualExclusion_FWD_DEFINED__ */


#ifndef __IltmmWMStreamConfig_FWD_DEFINED__
#define __IltmmWMStreamConfig_FWD_DEFINED__
typedef interface IltmmWMStreamConfig IltmmWMStreamConfig;
#endif 	/* __IltmmWMStreamConfig_FWD_DEFINED__ */


#ifndef __IltmmWMProfile_FWD_DEFINED__
#define __IltmmWMProfile_FWD_DEFINED__
typedef interface IltmmWMProfile IltmmWMProfile;
#endif 	/* __IltmmWMProfile_FWD_DEFINED__ */


#ifndef __IltmmWMProfileManager1_FWD_DEFINED__
#define __IltmmWMProfileManager1_FWD_DEFINED__
typedef interface IltmmWMProfileManager1 IltmmWMProfileManager1;
#endif 	/* __IltmmWMProfileManager1_FWD_DEFINED__ */


#ifndef __IltmmWMProfileManager_FWD_DEFINED__
#define __IltmmWMProfileManager_FWD_DEFINED__
typedef interface IltmmWMProfileManager IltmmWMProfileManager;
#endif 	/* __IltmmWMProfileManager_FWD_DEFINED__ */


#ifndef __IltmmObjectWrapper_FWD_DEFINED__
#define __IltmmObjectWrapper_FWD_DEFINED__
typedef interface IltmmObjectWrapper IltmmObjectWrapper;
#endif 	/* __IltmmObjectWrapper_FWD_DEFINED__ */


#ifndef __IltmmMediaSampleDisp_FWD_DEFINED__
#define __IltmmMediaSampleDisp_FWD_DEFINED__
typedef interface IltmmMediaSampleDisp IltmmMediaSampleDisp;
#endif 	/* __IltmmMediaSampleDisp_FWD_DEFINED__ */


#ifndef __IltmmSampleSource_FWD_DEFINED__
#define __IltmmSampleSource_FWD_DEFINED__
typedef interface IltmmSampleSource IltmmSampleSource;
#endif 	/* __IltmmSampleSource_FWD_DEFINED__ */


#ifndef __IltmmMultiStreamSource_FWD_DEFINED__
#define __IltmmMultiStreamSource_FWD_DEFINED__
typedef interface IltmmMultiStreamSource IltmmMultiStreamSource;
#endif 	/* __IltmmMultiStreamSource_FWD_DEFINED__ */


#ifndef __IltmmSampleTarget_FWD_DEFINED__
#define __IltmmSampleTarget_FWD_DEFINED__
typedef interface IltmmSampleTarget IltmmSampleTarget;
#endif 	/* __IltmmSampleTarget_FWD_DEFINED__ */


#ifndef __IltmmMultiStreamTarget_FWD_DEFINED__
#define __IltmmMultiStreamTarget_FWD_DEFINED__
typedef interface IltmmMultiStreamTarget IltmmMultiStreamTarget;
#endif 	/* __IltmmMultiStreamTarget_FWD_DEFINED__ */


#ifndef __IltmmVCRControl_FWD_DEFINED__
#define __IltmmVCRControl_FWD_DEFINED__
typedef interface IltmmVCRControl IltmmVCRControl;
#endif 	/* __IltmmVCRControl_FWD_DEFINED__ */


#ifndef __IltmmDVDControl_FWD_DEFINED__
#define __IltmmDVDControl_FWD_DEFINED__
typedef interface IltmmDVDControl IltmmDVDControl;
#endif 	/* __IltmmDVDControl_FWD_DEFINED__ */


#ifndef __IltmmCameraControl_FWD_DEFINED__
#define __IltmmCameraControl_FWD_DEFINED__
typedef interface IltmmCameraControl IltmmCameraControl;
#endif 	/* __IltmmCameraControl_FWD_DEFINED__ */


#ifndef __IltmmVideoProcAmp_FWD_DEFINED__
#define __IltmmVideoProcAmp_FWD_DEFINED__
typedef interface IltmmVideoProcAmp IltmmVideoProcAmp;
#endif 	/* __IltmmVideoProcAmp_FWD_DEFINED__ */


#ifndef __IltmmCapture1_FWD_DEFINED__
#define __IltmmCapture1_FWD_DEFINED__
typedef interface IltmmCapture1 IltmmCapture1;
#endif 	/* __IltmmCapture1_FWD_DEFINED__ */


#ifndef __IltmmCapture2_FWD_DEFINED__
#define __IltmmCapture2_FWD_DEFINED__
typedef interface IltmmCapture2 IltmmCapture2;
#endif 	/* __IltmmCapture2_FWD_DEFINED__ */


#ifndef __IltmmCapture3_FWD_DEFINED__
#define __IltmmCapture3_FWD_DEFINED__
typedef interface IltmmCapture3 IltmmCapture3;
#endif 	/* __IltmmCapture3_FWD_DEFINED__ */


#ifndef __IltmmCapture4_FWD_DEFINED__
#define __IltmmCapture4_FWD_DEFINED__
typedef interface IltmmCapture4 IltmmCapture4;
#endif 	/* __IltmmCapture4_FWD_DEFINED__ */


#ifndef __IltmmCapture5_FWD_DEFINED__
#define __IltmmCapture5_FWD_DEFINED__
typedef interface IltmmCapture5 IltmmCapture5;
#endif 	/* __IltmmCapture5_FWD_DEFINED__ */


#ifndef __IltmmCapture6_FWD_DEFINED__
#define __IltmmCapture6_FWD_DEFINED__
typedef interface IltmmCapture6 IltmmCapture6;
#endif 	/* __IltmmCapture6_FWD_DEFINED__ */


#ifndef __IltmmCapture7_FWD_DEFINED__
#define __IltmmCapture7_FWD_DEFINED__
typedef interface IltmmCapture7 IltmmCapture7;
#endif 	/* __IltmmCapture7_FWD_DEFINED__ */


#ifndef __IltmmCapture8_FWD_DEFINED__
#define __IltmmCapture8_FWD_DEFINED__
typedef interface IltmmCapture8 IltmmCapture8;
#endif 	/* __IltmmCapture8_FWD_DEFINED__ */


#ifndef __IltmmCapture9_FWD_DEFINED__
#define __IltmmCapture9_FWD_DEFINED__
typedef interface IltmmCapture9 IltmmCapture9;
#endif 	/* __IltmmCapture9_FWD_DEFINED__ */


#ifndef __IltmmCapture_FWD_DEFINED__
#define __IltmmCapture_FWD_DEFINED__
typedef interface IltmmCapture IltmmCapture;
#endif 	/* __IltmmCapture_FWD_DEFINED__ */


#ifndef __IltmmConvert1_FWD_DEFINED__
#define __IltmmConvert1_FWD_DEFINED__
typedef interface IltmmConvert1 IltmmConvert1;
#endif 	/* __IltmmConvert1_FWD_DEFINED__ */


#ifndef __IltmmConvert2_FWD_DEFINED__
#define __IltmmConvert2_FWD_DEFINED__
typedef interface IltmmConvert2 IltmmConvert2;
#endif 	/* __IltmmConvert2_FWD_DEFINED__ */


#ifndef __IltmmConvert3_FWD_DEFINED__
#define __IltmmConvert3_FWD_DEFINED__
typedef interface IltmmConvert3 IltmmConvert3;
#endif 	/* __IltmmConvert3_FWD_DEFINED__ */


#ifndef __IltmmConvert4_FWD_DEFINED__
#define __IltmmConvert4_FWD_DEFINED__
typedef interface IltmmConvert4 IltmmConvert4;
#endif 	/* __IltmmConvert4_FWD_DEFINED__ */


#ifndef __IltmmConvert5_FWD_DEFINED__
#define __IltmmConvert5_FWD_DEFINED__
typedef interface IltmmConvert5 IltmmConvert5;
#endif 	/* __IltmmConvert5_FWD_DEFINED__ */


#ifndef __IltmmConvert6_FWD_DEFINED__
#define __IltmmConvert6_FWD_DEFINED__
typedef interface IltmmConvert6 IltmmConvert6;
#endif 	/* __IltmmConvert6_FWD_DEFINED__ */


#ifndef __IltmmConvert7_FWD_DEFINED__
#define __IltmmConvert7_FWD_DEFINED__
typedef interface IltmmConvert7 IltmmConvert7;
#endif 	/* __IltmmConvert7_FWD_DEFINED__ */


#ifndef __IltmmConvert8_FWD_DEFINED__
#define __IltmmConvert8_FWD_DEFINED__
typedef interface IltmmConvert8 IltmmConvert8;
#endif 	/* __IltmmConvert8_FWD_DEFINED__ */


#ifndef __IltmmConvert9_FWD_DEFINED__
#define __IltmmConvert9_FWD_DEFINED__
typedef interface IltmmConvert9 IltmmConvert9;
#endif 	/* __IltmmConvert9_FWD_DEFINED__ */


#ifndef __IltmmConvert10_FWD_DEFINED__
#define __IltmmConvert10_FWD_DEFINED__
typedef interface IltmmConvert10 IltmmConvert10;
#endif 	/* __IltmmConvert10_FWD_DEFINED__ */


#ifndef __IltmmConvert11_FWD_DEFINED__
#define __IltmmConvert11_FWD_DEFINED__
typedef interface IltmmConvert11 IltmmConvert11;
#endif 	/* __IltmmConvert11_FWD_DEFINED__ */


#ifndef __IltmmConvert12_FWD_DEFINED__
#define __IltmmConvert12_FWD_DEFINED__
typedef interface IltmmConvert12 IltmmConvert12;
#endif 	/* __IltmmConvert12_FWD_DEFINED__ */


#ifndef __IltmmConvert_FWD_DEFINED__
#define __IltmmConvert_FWD_DEFINED__
typedef interface IltmmConvert IltmmConvert;
#endif 	/* __IltmmConvert_FWD_DEFINED__ */


#ifndef __IltmmPlay1_FWD_DEFINED__
#define __IltmmPlay1_FWD_DEFINED__
typedef interface IltmmPlay1 IltmmPlay1;
#endif 	/* __IltmmPlay1_FWD_DEFINED__ */


#ifndef __IltmmPlay2_FWD_DEFINED__
#define __IltmmPlay2_FWD_DEFINED__
typedef interface IltmmPlay2 IltmmPlay2;
#endif 	/* __IltmmPlay2_FWD_DEFINED__ */


#ifndef __IltmmPlay3_FWD_DEFINED__
#define __IltmmPlay3_FWD_DEFINED__
typedef interface IltmmPlay3 IltmmPlay3;
#endif 	/* __IltmmPlay3_FWD_DEFINED__ */


#ifndef __IltmmPlay4_FWD_DEFINED__
#define __IltmmPlay4_FWD_DEFINED__
typedef interface IltmmPlay4 IltmmPlay4;
#endif 	/* __IltmmPlay4_FWD_DEFINED__ */


#ifndef __IltmmPlay5_FWD_DEFINED__
#define __IltmmPlay5_FWD_DEFINED__
typedef interface IltmmPlay5 IltmmPlay5;
#endif 	/* __IltmmPlay5_FWD_DEFINED__ */


#ifndef __IltmmPlay6_FWD_DEFINED__
#define __IltmmPlay6_FWD_DEFINED__
typedef interface IltmmPlay6 IltmmPlay6;
#endif 	/* __IltmmPlay6_FWD_DEFINED__ */


#ifndef __IltmmPlay7_FWD_DEFINED__
#define __IltmmPlay7_FWD_DEFINED__
typedef interface IltmmPlay7 IltmmPlay7;
#endif 	/* __IltmmPlay7_FWD_DEFINED__ */


#ifndef __IltmmPlay_FWD_DEFINED__
#define __IltmmPlay_FWD_DEFINED__
typedef interface IltmmPlay IltmmPlay;
#endif 	/* __IltmmPlay_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl1_FWD_DEFINED__
#define __IltmmCaptureCtrl1_FWD_DEFINED__
typedef interface IltmmCaptureCtrl1 IltmmCaptureCtrl1;
#endif 	/* __IltmmCaptureCtrl1_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl2_FWD_DEFINED__
#define __IltmmCaptureCtrl2_FWD_DEFINED__
typedef interface IltmmCaptureCtrl2 IltmmCaptureCtrl2;
#endif 	/* __IltmmCaptureCtrl2_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl3_FWD_DEFINED__
#define __IltmmCaptureCtrl3_FWD_DEFINED__
typedef interface IltmmCaptureCtrl3 IltmmCaptureCtrl3;
#endif 	/* __IltmmCaptureCtrl3_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl4_FWD_DEFINED__
#define __IltmmCaptureCtrl4_FWD_DEFINED__
typedef interface IltmmCaptureCtrl4 IltmmCaptureCtrl4;
#endif 	/* __IltmmCaptureCtrl4_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl5_FWD_DEFINED__
#define __IltmmCaptureCtrl5_FWD_DEFINED__
typedef interface IltmmCaptureCtrl5 IltmmCaptureCtrl5;
#endif 	/* __IltmmCaptureCtrl5_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl6_FWD_DEFINED__
#define __IltmmCaptureCtrl6_FWD_DEFINED__
typedef interface IltmmCaptureCtrl6 IltmmCaptureCtrl6;
#endif 	/* __IltmmCaptureCtrl6_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl7_FWD_DEFINED__
#define __IltmmCaptureCtrl7_FWD_DEFINED__
typedef interface IltmmCaptureCtrl7 IltmmCaptureCtrl7;
#endif 	/* __IltmmCaptureCtrl7_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl8_FWD_DEFINED__
#define __IltmmCaptureCtrl8_FWD_DEFINED__
typedef interface IltmmCaptureCtrl8 IltmmCaptureCtrl8;
#endif 	/* __IltmmCaptureCtrl8_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl9_FWD_DEFINED__
#define __IltmmCaptureCtrl9_FWD_DEFINED__
typedef interface IltmmCaptureCtrl9 IltmmCaptureCtrl9;
#endif 	/* __IltmmCaptureCtrl9_FWD_DEFINED__ */


#ifndef __IltmmCaptureCtrl_FWD_DEFINED__
#define __IltmmCaptureCtrl_FWD_DEFINED__
typedef interface IltmmCaptureCtrl IltmmCaptureCtrl;
#endif 	/* __IltmmCaptureCtrl_FWD_DEFINED__ */


#ifndef ___IltmmCaptureCtrlEvents_FWD_DEFINED__
#define ___IltmmCaptureCtrlEvents_FWD_DEFINED__
typedef interface _IltmmCaptureCtrlEvents _IltmmCaptureCtrlEvents;
#endif 	/* ___IltmmCaptureCtrlEvents_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl1_FWD_DEFINED__
#define __IltmmConvertCtrl1_FWD_DEFINED__
typedef interface IltmmConvertCtrl1 IltmmConvertCtrl1;
#endif 	/* __IltmmConvertCtrl1_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl2_FWD_DEFINED__
#define __IltmmConvertCtrl2_FWD_DEFINED__
typedef interface IltmmConvertCtrl2 IltmmConvertCtrl2;
#endif 	/* __IltmmConvertCtrl2_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl3_FWD_DEFINED__
#define __IltmmConvertCtrl3_FWD_DEFINED__
typedef interface IltmmConvertCtrl3 IltmmConvertCtrl3;
#endif 	/* __IltmmConvertCtrl3_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl4_FWD_DEFINED__
#define __IltmmConvertCtrl4_FWD_DEFINED__
typedef interface IltmmConvertCtrl4 IltmmConvertCtrl4;
#endif 	/* __IltmmConvertCtrl4_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl5_FWD_DEFINED__
#define __IltmmConvertCtrl5_FWD_DEFINED__
typedef interface IltmmConvertCtrl5 IltmmConvertCtrl5;
#endif 	/* __IltmmConvertCtrl5_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl6_FWD_DEFINED__
#define __IltmmConvertCtrl6_FWD_DEFINED__
typedef interface IltmmConvertCtrl6 IltmmConvertCtrl6;
#endif 	/* __IltmmConvertCtrl6_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl7_FWD_DEFINED__
#define __IltmmConvertCtrl7_FWD_DEFINED__
typedef interface IltmmConvertCtrl7 IltmmConvertCtrl7;
#endif 	/* __IltmmConvertCtrl7_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl8_FWD_DEFINED__
#define __IltmmConvertCtrl8_FWD_DEFINED__
typedef interface IltmmConvertCtrl8 IltmmConvertCtrl8;
#endif 	/* __IltmmConvertCtrl8_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl9_FWD_DEFINED__
#define __IltmmConvertCtrl9_FWD_DEFINED__
typedef interface IltmmConvertCtrl9 IltmmConvertCtrl9;
#endif 	/* __IltmmConvertCtrl9_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl10_FWD_DEFINED__
#define __IltmmConvertCtrl10_FWD_DEFINED__
typedef interface IltmmConvertCtrl10 IltmmConvertCtrl10;
#endif 	/* __IltmmConvertCtrl10_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl11_FWD_DEFINED__
#define __IltmmConvertCtrl11_FWD_DEFINED__
typedef interface IltmmConvertCtrl11 IltmmConvertCtrl11;
#endif 	/* __IltmmConvertCtrl11_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl12_FWD_DEFINED__
#define __IltmmConvertCtrl12_FWD_DEFINED__
typedef interface IltmmConvertCtrl12 IltmmConvertCtrl12;
#endif 	/* __IltmmConvertCtrl12_FWD_DEFINED__ */


#ifndef __IltmmConvertCtrl_FWD_DEFINED__
#define __IltmmConvertCtrl_FWD_DEFINED__
typedef interface IltmmConvertCtrl IltmmConvertCtrl;
#endif 	/* __IltmmConvertCtrl_FWD_DEFINED__ */


#ifndef ___IltmmConvertCtrlEvents_FWD_DEFINED__
#define ___IltmmConvertCtrlEvents_FWD_DEFINED__
typedef interface _IltmmConvertCtrlEvents _IltmmConvertCtrlEvents;
#endif 	/* ___IltmmConvertCtrlEvents_FWD_DEFINED__ */


#ifndef __IltmmPlayCtrl1_FWD_DEFINED__
#define __IltmmPlayCtrl1_FWD_DEFINED__
typedef interface IltmmPlayCtrl1 IltmmPlayCtrl1;
#endif 	/* __IltmmPlayCtrl1_FWD_DEFINED__ */


#ifndef __IltmmPlayCtrl2_FWD_DEFINED__
#define __IltmmPlayCtrl2_FWD_DEFINED__
typedef interface IltmmPlayCtrl2 IltmmPlayCtrl2;
#endif 	/* __IltmmPlayCtrl2_FWD_DEFINED__ */


#ifndef __IltmmPlayCtrl3_FWD_DEFINED__
#define __IltmmPlayCtrl3_FWD_DEFINED__
typedef interface IltmmPlayCtrl3 IltmmPlayCtrl3;
#endif 	/* __IltmmPlayCtrl3_FWD_DEFINED__ */


#ifndef __IltmmPlayCtrl4_FWD_DEFINED__
#define __IltmmPlayCtrl4_FWD_DEFINED__
typedef interface IltmmPlayCtrl4 IltmmPlayCtrl4;
#endif 	/* __IltmmPlayCtrl4_FWD_DEFINED__ */


#ifndef __IltmmPlayCtrl5_FWD_DEFINED__
#define __IltmmPlayCtrl5_FWD_DEFINED__
typedef interface IltmmPlayCtrl5 IltmmPlayCtrl5;
#endif 	/* __IltmmPlayCtrl5_FWD_DEFINED__ */


#ifndef __IltmmPlayCtrl6_FWD_DEFINED__
#define __IltmmPlayCtrl6_FWD_DEFINED__
typedef interface IltmmPlayCtrl6 IltmmPlayCtrl6;
#endif 	/* __IltmmPlayCtrl6_FWD_DEFINED__ */


#ifndef __IltmmPlayCtrl7_FWD_DEFINED__
#define __IltmmPlayCtrl7_FWD_DEFINED__
typedef interface IltmmPlayCtrl7 IltmmPlayCtrl7;
#endif 	/* __IltmmPlayCtrl7_FWD_DEFINED__ */


#ifndef __IltmmPlayCtrl_FWD_DEFINED__
#define __IltmmPlayCtrl_FWD_DEFINED__
typedef interface IltmmPlayCtrl IltmmPlayCtrl;
#endif 	/* __IltmmPlayCtrl_FWD_DEFINED__ */


#ifndef ___IltmmPlayCtrlEvents_FWD_DEFINED__
#define ___IltmmPlayCtrlEvents_FWD_DEFINED__
typedef interface _IltmmPlayCtrlEvents _IltmmPlayCtrlEvents;
#endif 	/* ___IltmmPlayCtrlEvents_FWD_DEFINED__ */


#ifndef __IltmmStreamMoniker_FWD_DEFINED__
#define __IltmmStreamMoniker_FWD_DEFINED__
typedef interface IltmmStreamMoniker IltmmStreamMoniker;
#endif 	/* __IltmmStreamMoniker_FWD_DEFINED__ */


#ifndef __IltmmMemory_FWD_DEFINED__
#define __IltmmMemory_FWD_DEFINED__
typedef interface IltmmMemory IltmmMemory;
#endif 	/* __IltmmMemory_FWD_DEFINED__ */


#ifndef __IltmmMediaInfo1_FWD_DEFINED__
#define __IltmmMediaInfo1_FWD_DEFINED__
typedef interface IltmmMediaInfo1 IltmmMediaInfo1;
#endif 	/* __IltmmMediaInfo1_FWD_DEFINED__ */


#ifndef __IltmmMediaInfo_FWD_DEFINED__
#define __IltmmMediaInfo_FWD_DEFINED__
typedef interface IltmmMediaInfo IltmmMediaInfo;
#endif 	/* __IltmmMediaInfo_FWD_DEFINED__ */


#ifndef __IltmmSupportManager_FWD_DEFINED__
#define __IltmmSupportManager_FWD_DEFINED__
typedef interface IltmmSupportManager IltmmSupportManager;
#endif 	/* __IltmmSupportManager_FWD_DEFINED__ */


#ifndef __ltmmCapture_FWD_DEFINED__
#define __ltmmCapture_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCapture ltmmCapture;
#else
typedef struct ltmmCapture ltmmCapture;
#endif /* __cplusplus */

#endif 	/* __ltmmCapture_FWD_DEFINED__ */


#ifndef __ltmmCaptureCtrl_FWD_DEFINED__
#define __ltmmCaptureCtrl_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCaptureCtrl ltmmCaptureCtrl;
#else
typedef struct ltmmCaptureCtrl ltmmCaptureCtrl;
#endif /* __cplusplus */

#endif 	/* __ltmmCaptureCtrl_FWD_DEFINED__ */


#ifndef __ltmmCaptureInput_FWD_DEFINED__
#define __ltmmCaptureInput_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCaptureInput ltmmCaptureInput;
#else
typedef struct ltmmCaptureInput ltmmCaptureInput;
#endif /* __cplusplus */

#endif 	/* __ltmmCaptureInput_FWD_DEFINED__ */


#ifndef __ltmmCaptureInputs_FWD_DEFINED__
#define __ltmmCaptureInputs_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCaptureInputs ltmmCaptureInputs;
#else
typedef struct ltmmCaptureInputs ltmmCaptureInputs;
#endif /* __cplusplus */

#endif 	/* __ltmmCaptureInputs_FWD_DEFINED__ */


#ifndef __ltmmCaptureSize_FWD_DEFINED__
#define __ltmmCaptureSize_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCaptureSize ltmmCaptureSize;
#else
typedef struct ltmmCaptureSize ltmmCaptureSize;
#endif /* __cplusplus */

#endif 	/* __ltmmCaptureSize_FWD_DEFINED__ */


#ifndef __ltmmCaptureSizes_FWD_DEFINED__
#define __ltmmCaptureSizes_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCaptureSizes ltmmCaptureSizes;
#else
typedef struct ltmmCaptureSizes ltmmCaptureSizes;
#endif /* __cplusplus */

#endif 	/* __ltmmCaptureSizes_FWD_DEFINED__ */


#ifndef __ltmmVideoFormat_FWD_DEFINED__
#define __ltmmVideoFormat_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmVideoFormat ltmmVideoFormat;
#else
typedef struct ltmmVideoFormat ltmmVideoFormat;
#endif /* __cplusplus */

#endif 	/* __ltmmVideoFormat_FWD_DEFINED__ */


#ifndef __ltmmVideoFormats_FWD_DEFINED__
#define __ltmmVideoFormats_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmVideoFormats ltmmVideoFormats;
#else
typedef struct ltmmVideoFormats ltmmVideoFormats;
#endif /* __cplusplus */

#endif 	/* __ltmmVideoFormats_FWD_DEFINED__ */


#ifndef __ltmmAudioFormat_FWD_DEFINED__
#define __ltmmAudioFormat_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmAudioFormat ltmmAudioFormat;
#else
typedef struct ltmmAudioFormat ltmmAudioFormat;
#endif /* __cplusplus */

#endif 	/* __ltmmAudioFormat_FWD_DEFINED__ */


#ifndef __ltmmAudioFormats_FWD_DEFINED__
#define __ltmmAudioFormats_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmAudioFormats ltmmAudioFormats;
#else
typedef struct ltmmAudioFormats ltmmAudioFormats;
#endif /* __cplusplus */

#endif 	/* __ltmmAudioFormats_FWD_DEFINED__ */


#ifndef __ltmmCaptureSubType_FWD_DEFINED__
#define __ltmmCaptureSubType_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCaptureSubType ltmmCaptureSubType;
#else
typedef struct ltmmCaptureSubType ltmmCaptureSubType;
#endif /* __cplusplus */

#endif 	/* __ltmmCaptureSubType_FWD_DEFINED__ */


#ifndef __ltmmCaptureSubTypes_FWD_DEFINED__
#define __ltmmCaptureSubTypes_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCaptureSubTypes ltmmCaptureSubTypes;
#else
typedef struct ltmmCaptureSubTypes ltmmCaptureSubTypes;
#endif /* __cplusplus */

#endif 	/* __ltmmCaptureSubTypes_FWD_DEFINED__ */


#ifndef __ltmmTargetFormat_FWD_DEFINED__
#define __ltmmTargetFormat_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmTargetFormat ltmmTargetFormat;
#else
typedef struct ltmmTargetFormat ltmmTargetFormat;
#endif /* __cplusplus */

#endif 	/* __ltmmTargetFormat_FWD_DEFINED__ */


#ifndef __ltmmTargetFormats_FWD_DEFINED__
#define __ltmmTargetFormats_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmTargetFormats ltmmTargetFormats;
#else
typedef struct ltmmTargetFormats ltmmTargetFormats;
#endif /* __cplusplus */

#endif 	/* __ltmmTargetFormats_FWD_DEFINED__ */


#ifndef __ltmmCompressor_FWD_DEFINED__
#define __ltmmCompressor_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCompressor ltmmCompressor;
#else
typedef struct ltmmCompressor ltmmCompressor;
#endif /* __cplusplus */

#endif 	/* __ltmmCompressor_FWD_DEFINED__ */


#ifndef __ltmmCompressors_FWD_DEFINED__
#define __ltmmCompressors_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCompressors ltmmCompressors;
#else
typedef struct ltmmCompressors ltmmCompressors;
#endif /* __cplusplus */

#endif 	/* __ltmmCompressors_FWD_DEFINED__ */


#ifndef __ltmmConvert_FWD_DEFINED__
#define __ltmmConvert_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmConvert ltmmConvert;
#else
typedef struct ltmmConvert ltmmConvert;
#endif /* __cplusplus */

#endif 	/* __ltmmConvert_FWD_DEFINED__ */


#ifndef __ltmmConvertCtrl_FWD_DEFINED__
#define __ltmmConvertCtrl_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmConvertCtrl ltmmConvertCtrl;
#else
typedef struct ltmmConvertCtrl ltmmConvertCtrl;
#endif /* __cplusplus */

#endif 	/* __ltmmConvertCtrl_FWD_DEFINED__ */


#ifndef __ltmmDevice_FWD_DEFINED__
#define __ltmmDevice_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDevice ltmmDevice;
#else
typedef struct ltmmDevice ltmmDevice;
#endif /* __cplusplus */

#endif 	/* __ltmmDevice_FWD_DEFINED__ */


#ifndef __ltmmDevices_FWD_DEFINED__
#define __ltmmDevices_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDevices ltmmDevices;
#else
typedef struct ltmmDevices ltmmDevices;
#endif /* __cplusplus */

#endif 	/* __ltmmDevices_FWD_DEFINED__ */


#ifndef __ltmmTargetDevice_FWD_DEFINED__
#define __ltmmTargetDevice_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmTargetDevice ltmmTargetDevice;
#else
typedef struct ltmmTargetDevice ltmmTargetDevice;
#endif /* __cplusplus */

#endif 	/* __ltmmTargetDevice_FWD_DEFINED__ */


#ifndef __ltmmTargetDevices_FWD_DEFINED__
#define __ltmmTargetDevices_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmTargetDevices ltmmTargetDevices;
#else
typedef struct ltmmTargetDevices ltmmTargetDevices;
#endif /* __cplusplus */

#endif 	/* __ltmmTargetDevices_FWD_DEFINED__ */


#ifndef __ltmmRenderer_FWD_DEFINED__
#define __ltmmRenderer_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmRenderer ltmmRenderer;
#else
typedef struct ltmmRenderer ltmmRenderer;
#endif /* __cplusplus */

#endif 	/* __ltmmRenderer_FWD_DEFINED__ */


#ifndef __ltmmRenderers_FWD_DEFINED__
#define __ltmmRenderers_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmRenderers ltmmRenderers;
#else
typedef struct ltmmRenderers ltmmRenderers;
#endif /* __cplusplus */

#endif 	/* __ltmmRenderers_FWD_DEFINED__ */


#ifndef __ltmmMediaSample_FWD_DEFINED__
#define __ltmmMediaSample_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmMediaSample ltmmMediaSample;
#else
typedef struct ltmmMediaSample ltmmMediaSample;
#endif /* __cplusplus */

#endif 	/* __ltmmMediaSample_FWD_DEFINED__ */


#ifndef __ltmmMediaType_FWD_DEFINED__
#define __ltmmMediaType_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmMediaType ltmmMediaType;
#else
typedef struct ltmmMediaType ltmmMediaType;
#endif /* __cplusplus */

#endif 	/* __ltmmMediaType_FWD_DEFINED__ */


#ifndef __ltmmPlay_FWD_DEFINED__
#define __ltmmPlay_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmPlay ltmmPlay;
#else
typedef struct ltmmPlay ltmmPlay;
#endif /* __cplusplus */

#endif 	/* __ltmmPlay_FWD_DEFINED__ */


#ifndef __ltmmPlayCtrl_FWD_DEFINED__
#define __ltmmPlayCtrl_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmPlayCtrl ltmmPlayCtrl;
#else
typedef struct ltmmPlayCtrl ltmmPlayCtrl;
#endif /* __cplusplus */

#endif 	/* __ltmmPlayCtrl_FWD_DEFINED__ */


#ifndef __ltmmProcessor_FWD_DEFINED__
#define __ltmmProcessor_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmProcessor ltmmProcessor;
#else
typedef struct ltmmProcessor ltmmProcessor;
#endif /* __cplusplus */

#endif 	/* __ltmmProcessor_FWD_DEFINED__ */


#ifndef __ltmmProcessors_FWD_DEFINED__
#define __ltmmProcessors_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmProcessors ltmmProcessors;
#else
typedef struct ltmmProcessors ltmmProcessors;
#endif /* __cplusplus */

#endif 	/* __ltmmProcessors_FWD_DEFINED__ */


#ifndef __ltmmSampleSource_FWD_DEFINED__
#define __ltmmSampleSource_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmSampleSource ltmmSampleSource;
#else
typedef struct ltmmSampleSource ltmmSampleSource;
#endif /* __cplusplus */

#endif 	/* __ltmmSampleSource_FWD_DEFINED__ */


#ifndef __ltmmMultiStreamSource_FWD_DEFINED__
#define __ltmmMultiStreamSource_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmMultiStreamSource ltmmMultiStreamSource;
#else
typedef struct ltmmMultiStreamSource ltmmMultiStreamSource;
#endif /* __cplusplus */

#endif 	/* __ltmmMultiStreamSource_FWD_DEFINED__ */


#ifndef __ltmmSampleTarget_FWD_DEFINED__
#define __ltmmSampleTarget_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmSampleTarget ltmmSampleTarget;
#else
typedef struct ltmmSampleTarget ltmmSampleTarget;
#endif /* __cplusplus */

#endif 	/* __ltmmSampleTarget_FWD_DEFINED__ */


#ifndef __ltmmMultiStreamTarget_FWD_DEFINED__
#define __ltmmMultiStreamTarget_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmMultiStreamTarget ltmmMultiStreamTarget;
#else
typedef struct ltmmMultiStreamTarget ltmmMultiStreamTarget;
#endif /* __cplusplus */

#endif 	/* __ltmmMultiStreamTarget_FWD_DEFINED__ */


#ifndef __ltmmVCRControl_FWD_DEFINED__
#define __ltmmVCRControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmVCRControl ltmmVCRControl;
#else
typedef struct ltmmVCRControl ltmmVCRControl;
#endif /* __cplusplus */

#endif 	/* __ltmmVCRControl_FWD_DEFINED__ */


#ifndef __ltmmDVDControl_FWD_DEFINED__
#define __ltmmDVDControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDVDControl ltmmDVDControl;
#else
typedef struct ltmmDVDControl ltmmDVDControl;
#endif /* __cplusplus */

#endif 	/* __ltmmDVDControl_FWD_DEFINED__ */


#ifndef __ltmmCameraControl_FWD_DEFINED__
#define __ltmmCameraControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmCameraControl ltmmCameraControl;
#else
typedef struct ltmmCameraControl ltmmCameraControl;
#endif /* __cplusplus */

#endif 	/* __ltmmCameraControl_FWD_DEFINED__ */


#ifndef __ltmmVideoProcAmp_FWD_DEFINED__
#define __ltmmVideoProcAmp_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmVideoProcAmp ltmmVideoProcAmp;
#else
typedef struct ltmmVideoProcAmp ltmmVideoProcAmp;
#endif /* __cplusplus */

#endif 	/* __ltmmVideoProcAmp_FWD_DEFINED__ */


#ifndef __ltmmWMMutualExclusion_FWD_DEFINED__
#define __ltmmWMMutualExclusion_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmWMMutualExclusion ltmmWMMutualExclusion;
#else
typedef struct ltmmWMMutualExclusion ltmmWMMutualExclusion;
#endif /* __cplusplus */

#endif 	/* __ltmmWMMutualExclusion_FWD_DEFINED__ */


#ifndef __ltmmWMStreamConfig_FWD_DEFINED__
#define __ltmmWMStreamConfig_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmWMStreamConfig ltmmWMStreamConfig;
#else
typedef struct ltmmWMStreamConfig ltmmWMStreamConfig;
#endif /* __cplusplus */

#endif 	/* __ltmmWMStreamConfig_FWD_DEFINED__ */


#ifndef __ltmmWMProfile_FWD_DEFINED__
#define __ltmmWMProfile_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmWMProfile ltmmWMProfile;
#else
typedef struct ltmmWMProfile ltmmWMProfile;
#endif /* __cplusplus */

#endif 	/* __ltmmWMProfile_FWD_DEFINED__ */


#ifndef __ltmmWMProfileManager_FWD_DEFINED__
#define __ltmmWMProfileManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmWMProfileManager ltmmWMProfileManager;
#else
typedef struct ltmmWMProfileManager ltmmWMProfileManager;
#endif /* __cplusplus */

#endif 	/* __ltmmWMProfileManager_FWD_DEFINED__ */


#ifndef __ltmmDVDSubpictureStream_FWD_DEFINED__
#define __ltmmDVDSubpictureStream_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDVDSubpictureStream ltmmDVDSubpictureStream;
#else
typedef struct ltmmDVDSubpictureStream ltmmDVDSubpictureStream;
#endif /* __cplusplus */

#endif 	/* __ltmmDVDSubpictureStream_FWD_DEFINED__ */


#ifndef __ltmmDVDAudioStream_FWD_DEFINED__
#define __ltmmDVDAudioStream_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDVDAudioStream ltmmDVDAudioStream;
#else
typedef struct ltmmDVDAudioStream ltmmDVDAudioStream;
#endif /* __cplusplus */

#endif 	/* __ltmmDVDAudioStream_FWD_DEFINED__ */


#ifndef __ltmmDVDChapter_FWD_DEFINED__
#define __ltmmDVDChapter_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDVDChapter ltmmDVDChapter;
#else
typedef struct ltmmDVDChapter ltmmDVDChapter;
#endif /* __cplusplus */

#endif 	/* __ltmmDVDChapter_FWD_DEFINED__ */


#ifndef __ltmmDVDTitle_FWD_DEFINED__
#define __ltmmDVDTitle_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDVDTitle ltmmDVDTitle;
#else
typedef struct ltmmDVDTitle ltmmDVDTitle;
#endif /* __cplusplus */

#endif 	/* __ltmmDVDTitle_FWD_DEFINED__ */


#ifndef __ltmmDVDSource_FWD_DEFINED__
#define __ltmmDVDSource_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDVDSource ltmmDVDSource;
#else
typedef struct ltmmDVDSource ltmmDVDSource;
#endif /* __cplusplus */

#endif 	/* __ltmmDVDSource_FWD_DEFINED__ */


#ifndef __ltmmDVDPlaylistParser_FWD_DEFINED__
#define __ltmmDVDPlaylistParser_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmDVDPlaylistParser ltmmDVDPlaylistParser;
#else
typedef struct ltmmDVDPlaylistParser ltmmDVDPlaylistParser;
#endif /* __cplusplus */

#endif 	/* __ltmmDVDPlaylistParser_FWD_DEFINED__ */


#ifndef __ltmmTVTuner_FWD_DEFINED__
#define __ltmmTVTuner_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmTVTuner ltmmTVTuner;
#else
typedef struct ltmmTVTuner ltmmTVTuner;
#endif /* __cplusplus */

#endif 	/* __ltmmTVTuner_FWD_DEFINED__ */


#ifndef __ltmmAnalogVideoDecoder_FWD_DEFINED__
#define __ltmmAnalogVideoDecoder_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmAnalogVideoDecoder ltmmAnalogVideoDecoder;
#else
typedef struct ltmmAnalogVideoDecoder ltmmAnalogVideoDecoder;
#endif /* __cplusplus */

#endif 	/* __ltmmAnalogVideoDecoder_FWD_DEFINED__ */


#ifndef __ltmmStreamMoniker_FWD_DEFINED__
#define __ltmmStreamMoniker_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmStreamMoniker ltmmStreamMoniker;
#else
typedef struct ltmmStreamMoniker ltmmStreamMoniker;
#endif /* __cplusplus */

#endif 	/* __ltmmStreamMoniker_FWD_DEFINED__ */


#ifndef __ltmmMemory_FWD_DEFINED__
#define __ltmmMemory_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmMemory ltmmMemory;
#else
typedef struct ltmmMemory ltmmMemory;
#endif /* __cplusplus */

#endif 	/* __ltmmMemory_FWD_DEFINED__ */


#ifndef __ltmmAudioInput_FWD_DEFINED__
#define __ltmmAudioInput_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmAudioInput ltmmAudioInput;
#else
typedef struct ltmmAudioInput ltmmAudioInput;
#endif /* __cplusplus */

#endif 	/* __ltmmAudioInput_FWD_DEFINED__ */


#ifndef __ltmmAudioInputs_FWD_DEFINED__
#define __ltmmAudioInputs_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmAudioInputs ltmmAudioInputs;
#else
typedef struct ltmmAudioInputs ltmmAudioInputs;
#endif /* __cplusplus */

#endif 	/* __ltmmAudioInputs_FWD_DEFINED__ */


#ifndef __ltmmMediaInfo_FWD_DEFINED__
#define __ltmmMediaInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmMediaInfo ltmmMediaInfo;
#else
typedef struct ltmmMediaInfo ltmmMediaInfo;
#endif /* __cplusplus */

#endif 	/* __ltmmMediaInfo_FWD_DEFINED__ */


#ifndef __ltmmSupportManager_FWD_DEFINED__
#define __ltmmSupportManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class ltmmSupportManager ltmmSupportManager;
#else
typedef struct ltmmSupportManager ltmmSupportManager;
#endif /* __cplusplus */

#endif 	/* __ltmmSupportManager_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "strmif.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_ltmm_0000_0000 */
/* [local] */ 

#include "olectl.h"
#define __ltmmConstants_MODULE_DEFINED__


extern RPC_IF_HANDLE __MIDL_itf_ltmm_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ltmm_0000_0000_v0_0_s_ifspec;


#ifndef __LTMMLib_LIBRARY_DEFINED__
#define __LTMMLib_LIBRARY_DEFINED__

/* library LTMMLib */
/* [helpstring][helpfile][version][uuid] */ 

#define	ltmmFORMAT_None	( L"{0F6417D6-C318-11D0-A43F-00A0C9223196}" )

#define	ltmmFORMAT_VideoInfo	( L"{05589F80-C356-11CE-BF01-00AA0055595A}" )

#define	ltmmFORMAT_VideoInfo2	( L"{F72A76A0-EB0A-11D0-ACE4-0000C0CC16BA}" )

#define	ltmmFORMAT_WaveFormatEx	( L"{05589F81-C356-11CE-BF01-00AA0055595A}" )

#define	ltmmFORMAT_MPEGVideo	( L"{05589F82-C356-11CE-BF01-00AA0055595A}" )

#define	ltmmFORMAT_MPEGStreams	( L"{05589F83-C356-11CE-BF01-00AA0055595A}" )

#define	ltmmFORMAT_DvInfo	( L"{05589F84-C356-11CE-BF01-00AA0055595A}" )

#define	ltmmMEDIATYPE_NULL	( L"{00000000-0000-0000-0000-000000000000}" )

#define	ltmmMEDIATYPE_Video	( L"{73646976-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIATYPE_Audio	( L"{73647561-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIATYPE_Text	( L"{73747874-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIATYPE_Midi	( L"{7364696D-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIATYPE_Stream	( L"{E436EB83-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIATYPE_Interleaved	( L"{73766169-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIATYPE_File	( L"{656C6966-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIATYPE_ScriptCommand	( L"{73636D64-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIATYPE_AUXLine21Data	( L"{670AEA80-3A82-11D0-B79B-00AA003767A7}" )

#define	ltmmMEDIATYPE_VBI	( L"{F72A76E1-EB0A-11D0-ACE4-0000C0CC16BA}" )

#define	ltmmMEDIATYPE_Timecode	( L"{0482DEE3-7817-11CF-8A03-00AA006ECB65}" )

#define	ltmmMEDIATYPE_LMRT	( L"{74726C6D-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIATYPE_URL_STREAM	( L"{74726C6D-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_NULL	( L"{00000000-0000-0000-0000-000000000000}" )

#define	ltmmMEDIASUBTYPE_CLPL	( L"{4C504C43-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_YUYV	( L"{56595559-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_IYUV	( L"{56555949-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_YVU9	( L"{39555659-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Y411	( L"{31313459-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Y41P	( L"{50313459-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_YUY2	( L"{32595559-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_YVYU	( L"{55595659-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_UYVY	( L"{59565955-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Y211	( L"{31313259-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_YV12	( L"{32313259-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_CLJR	( L"{524A4C43-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_IF09	( L"{39304649-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_CPLA	( L"{414C5043-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_MJPG	( L"{47504A4D-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_TVMJ	( L"{4A4D5654-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_WAKE	( L"{454B4157-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_CFCC	( L"{43434643-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_IJPG	( L"{47504A49-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Plum	( L"{6D756C50-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_DVCS	( L"{53435644-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_FASTDVSD	( L"{44535644-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_MDVF	( L"{4656444D-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_RGB1	( L"{E436EB78-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_RGB4	( L"{E436EB79-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_RGB8	( L"{E436EB7A-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_RGB565	( L"{E436EB7B-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_RGB555	( L"{E436EB7C-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_RGB24	( L"{E436EB7D-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_RGB32	( L"{E436EB7E-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_ARGB1555	( L"{297C55AF-E209-4CB3-B757-C76D6B9C88A8}" )

#define	ltmmMEDIASUBTYPE_ARGB4444	( L"{6E6415E6-5C24-425F-93CD-80102B3D1CCA}" )

#define	ltmmMEDIASUBTYPE_ARGB32	( L"{773C9AC0-3274-11D0-B724-00AA006C1A01}" )

#define	ltmmMEDIASUBTYPE_AYUV	( L"{56555941-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_AI44	( L"{34344941-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_RGB32_D3D_DX7_RT	( L"{32335237-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_RGB16_D3D_DX7_RT	( L"{36315237-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_ARGB32_D3D_DX7_RT	( L"{38384137-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_ARGB4444_D3D_DX7_RT	( L"{34344137-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_ARGB1555_D3D_DX7_RT	( L"{35314137-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Overlay	( L"{E436EB7F-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_MPEGPacket	( L"{E436EB80-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_MPEG1Payload	( L"{E436EB81-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_MPEG1AudioPayload	( L"{00000050-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_MPEG1SystemStream	( L"{E436EB82-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_MPEG1System	( L"{E436EB84-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_MPEG1VideoCD	( L"{E436EB85-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_MPEG1Video	( L"{E436EB86-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_MPEG1Audio	( L"{E436EB87-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_Avi	( L"{E436EB88-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_Asf	( L"{3DB80F90-9412-11D1-ADED-0000F8754B99}" )

#define	ltmmMEDIASUBTYPE_QTMovie	( L"{E436EB89-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_Rpza	( L"{617A7072-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Smc	( L"{20636D73-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Rle	( L"{20656C72-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Jpeg	( L"{6765706A-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_PCMAudio_Obsolete	( L"{E436EB8A-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_PCM	( L"{00000001-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_WAVE	( L"{E436EB8B-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_AU	( L"{E436EB8C-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_AIFF	( L"{E436EB8D-524F-11CE-9F53-0020AF0BA770}" )

#define	ltmmMEDIASUBTYPE_dvsd	( L"{64737664-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_dvhd	( L"{64687664-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_dvsl	( L"{6C737664-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Line21_BytePair	( L"{6E8D4A22-310C-11D0-B79A-00AA003767A7}" )

#define	ltmmMEDIASUBTYPE_Line21_GOPPacket	( L"{6E8D4A23-310C-11D0-B79A-00AA003767A7}" )

#define	ltmmMEDIASUBTYPE_Line21_VBIRawData	( L"{6E8D4A24-310C-11D0-B79A-00AA003767A7}" )

#define	ltmmMEDIASUBTYPE_TELETEXT	( L"{F72A76E3-EB0A-11D0-ACE4-0000C0CC16BA}" )

#define	ltmmMEDIASUBTYPE_DRM_Audio	( L"{00000009-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_IEEE_FLOAT	( L"{00000003-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_DOLBY_AC3_SPDIF	( L"{00000092-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_RAW_SPORT	( L"{00000240-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_SPDIF_TAG_241h	( L"{00000241-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_DssVideo	( L"{A0AF4F81-E163-11D0-BAD9-00609744111A}" )

#define	ltmmMEDIASUBTYPE_DssAudio	( L"{A0AF4F82-E163-11D0-BAD9-00609744111A}" )

#define	ltmmMEDIASUBTYPE_VPVideo	( L"{5A9B6A40-1A22-11D1-BAD9-00609744111A}" )

#define	ltmmMEDIASUBTYPE_VPVBI	( L"{5A9B6A41-1A22-11D1-BAD9-00609744111A}" )

#define	ltmmMEDIASUBTYPE_LEAD	( L"{4441454C-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_L263	( L"{3336324C-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_LCMW	( L"{574D434C-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_LCW2	( L"{3257434C-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_LJ2K	( L"{4B324A4C-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_dmb1	( L"{31626D64-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_Ljpg	( L"{67706A4C-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_LGRY	( L"{5952474C-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_JPEG_	( L"{4745404A-0000-0010-8000-00AA00389B71}" )

#define	ltmmMEDIASUBTYPE_LCMA	( L"{0000434C-0000-0010-8000-00AA00389B71}" )

#define	ltmmWMMUTEX_Bitrate	( L"{D6E22A01-35DA-11D1-9034-00A0C90349BE}" )

#define	ltmmWMProfile_V40_DialUpMBR	( L"{FD7F47F1-72A6-45A4-80F0-3AECEFC32C07}" )

#define	ltmmWMProfile_V40_IntranetMBR	( L"{82CD3321-A94A-4FFC-9C2B-092C10CA16E7}" )

#define	ltmmWMProfile_V40_2856100MBR	( L"{5A1C2206-DC5E-4186-BEB2-4C5A994B132E}" )

#define	ltmmWMProfile_V40_6VoiceAudio	( L"{D508978A-11A0-4D15-B0DA-ACDC99D4F890}" )

#define	ltmmWMProfile_V40_16AMRadio	( L"{0F4BE81F-D57D-41E1-B2E3-2FAD986BFEC2}" )

#define	ltmmWMProfile_V40_288FMRadioMono	( L"{7FA57FC8-6EA4-4645-8ABF-B6E5A8F814A1}" )

#define	ltmmWMProfile_V40_288FMRadioStereo	( L"{22FCF466-AA40-431F-A289-06D0EA1A1E40}" )

#define	ltmmWMProfile_V40_56DialUpStereo	( L"{E8026F87-E905-4594-A3C7-00D00041D1D9}" )

#define	ltmmWMProfile_V40_64Audio	( L"{4820B3F7-CBEC-41DC-9391-78598714C8E5}" )

#define	ltmmWMProfile_V40_96Audio	( L"{0EFA0EE3-9E64-41E2-837F-3C0038F327BA}" )

#define	ltmmWMProfile_V40_128Audio	( L"{93DDBE12-13DC-4E32-A35E-40378E34279A}" )

#define	ltmmWMProfile_V40_288VideoVoice	( L"{BB2BC274-0EB6-4DA9-B550-ECF7F2B9948F}" )

#define	ltmmWMProfile_V40_288VideoAudio	( L"{AC617F2D-6CBE-4E84-8E9A-CE151A12A354}" )

#define	ltmmWMProfile_V40_288VideoWebServer	( L"{ABF2F00D-D555-4815-94CE-8275F3A70BFE}" )

#define	ltmmWMProfile_V40_56DialUpVideo	( L"{E21713BB-652F-4DAB-99DE-71E04400270F}" )

#define	ltmmWMProfile_V40_56DialUpVideoWebServer	( L"{B756FF10-520F-4749-A399-B780E2FC9250}" )

#define	ltmmWMProfile_V40_100Video	( L"{8F99DDD8-6684-456B-A0A3-33E1316895F0}" )

#define	ltmmWMProfile_V40_250Video	( L"{541841C3-9339-4F7B-9A22-B11540894E42}" )

#define	ltmmWMProfile_V40_512Video	( L"{70440E6D-C4EF-4F84-8CD0-D5C28686E784}" )

#define	ltmmWMProfile_V40_1MBVideo	( L"{B4482A4C-CC17-4B07-A94E-9818D5E0F13F}" )

#define	ltmmWMProfile_V40_3MBVideo	( L"{55374AC0-309B-4396-B88F-E6E292113F28}" )

#define	ltmmWMProfile_V70_DialUpMBR	( L"{5B16E74B-4068-45B5-B80E-7BF8C80D2C2F}" )

#define	ltmmWMProfile_V70_IntranetMBR	( L"{045880DC-34B6-4CA9-A326-73557ED143F3}" )

#define	ltmmWMProfile_V70_2856100MBR	( L"{07DF7A25-3FE2-4A5B-8B1E-348B0721CA70}" )

#define	ltmmWMProfile_V70_288VideoVoice	( L"{B952F38E-7DBC-4533-A9CA-B00B1C6E9800}" )

#define	ltmmWMProfile_V70_288VideoAudio	( L"{58BBA0EE-896A-4948-9953-85B736F83947}" )

#define	ltmmWMProfile_V70_288VideoWebServer	( L"{70A32E2B-E2DF-4EBD-9105-D9CA194A2D50}" )

#define	ltmmWMProfile_V70_56VideoWebServer	( L"{DEF99E40-57BC-4AB3-B2D1-B6E3CAF64257}" )

#define	ltmmWMProfile_V70_64VideoISDN	( L"{C2B7A7E9-7B8E-4992-A1A1-068217A3B311}" )

#define	ltmmWMProfile_V70_100Video	( L"{D9F3C932-5EA9-4C6D-89B4-2686E515426E}" )

#define	ltmmWMProfile_V70_256Vide	( L"{AFE69B3A-403F-4A1B-8007-0E21CFB3DF84}" )

#define	ltmmWMProfile_V70_384Vide	( L"{F3D45FBB-8782-44DF-97C6-8678E2F9B13D}" )

#define	ltmmWMProfile_V70_768Video	( L"{0326EBB6-F76E-4964-B0DB-E729978D35EE}" )

#define	ltmmWMProfile_V70_1500Video	( L"{0B89164A-5490-4686-9E37-5A80884E5146}" )

#define	ltmmWMProfile_V70_2000Video	( L"{AA980124-BF10-4E4F-9AFD-4329A7395CFF}" )

#define	ltmmWMProfile_V70_700FilmContentVideo	( L"{7A747920-2449-4D76-99CB-FDB0C90484D4}" )

#define	ltmmWMProfile_V70_1500FilmContentVideo	( L"{F6A5F6DF-EE3F-434C-A433-523CE55F516B}" )

#define	ltmmWMProfile_V70_6VoiceAudio	( L"{EABA9FBF-B64F-49B3-AA0C-73FBDD150AD0}" )

#define	ltmmWMProfile_V70_288FMRadioMono	( L"{C012A833-A03B-44A5-96DC-ED95CC65582D}" )

#define	ltmmWMProfile_V70_288FMRadioStereo	( L"{E96D67C9-1A39-4DC4-B900-B1184DC83620}" )

#define	ltmmWMProfile_V70_56DialUpStereo	( L"{674EE767-0949-4FAC-875E-F4C9C292013B}" )

#define	ltmmWMProfile_V70_64AudioISDN	( L"{91DEA458-9D60-4212-9C59-D40919C939E4}" )

#define	ltmmWMProfile_V70_64Audio	( L"{B29CFFC6-F131-41DB-B5E8-99D8B0B945F4}" )

#define	ltmmWMProfile_V70_96Audio	( L"{A9D4B819-16CC-4A59-9F37-693DBB0302D6}" )

#define	ltmmWMProfile_V70_128Audio	( L"{C64CF5DA-DF45-40D3-8027-DE698D68DC66}" )

#define	ltmmWMProfile_V70_225VideoPDA	( L"{F55EA573-4C02-42B5-9026-A8260C438A9F}" )

#define	ltmmWMProfile_V70_150VideoPDA	( L"{0F472967-E3C6-4797-9694-F0304C5E2F17}" )

#define	ltmmWMProfile_V80_255VideoPDA	( L"{FEEDBCDF-3FAC-4C93-AC0D-47941EC72C0B}" )

#define	ltmmWMProfile_V80_150VideoPDA	( L"{AEE16DFA-2C14-4A2F-AD3F-A3034031784F}" )

#define	ltmmWMProfile_V80_28856VideoMBR	( L"{D66920C4-C21F-4EC8-A0B4-95CF2BD57FC4}" )

#define	ltmmWMProfile_V80_100768VideoMBR	( L"{5BDB5A0E-979E-47D3-9596-73B386392A55}" )

#define	ltmmWMProfile_V80_288100VideoMBR	( L"{D8722C69-2419-4B36-B4E0-6E17B60564E5}" )

#define	ltmmWMProfile_V80_288Video	( L"{3DF678D9-1352-4186-BBF8-74F0C19B6AE2}" )

#define	ltmmWMProfile_V80_56Video	( L"{254E8A96-2612-405C-8039-F0BF725CED7D}" )

#define	ltmmWMProfile_V80_100Video	( L"{A2E300B4-C2D4-4FC0-B5DD-ECBD948DC0DF}" )

#define	ltmmWMProfile_V80_256Video	( L"{BBC75500-33D2-4466-B86B-122B201CC9AE}" )

#define	ltmmWMProfile_V80_384Video	( L"{29B00C2B-09A9-48BD-AD09-CDAE117D1DA7}" )

#define	ltmmWMProfile_V80_768Video	( L"{74D01102-E71A-4820-8F0D-13D2EC1E4872}" )

#define	ltmmWMProfile_V80_700NTSCVideo	( L"{C8C2985F-E5D9-4538-9E23-9B21BF78F745}" )

#define	ltmmWMProfile_V80_1400NTSCVideo	( L"{931D1BEE-617A-4BCD-9905-CCD0786683EE}" )

#define	ltmmWMProfile_V80_384PALVideo	( L"{9227C692-AE62-4F72-A7EA-736062D0E21E}" )

#define	ltmmWMProfile_V80_700PALVideo	( L"{EC298949-639B-45E2-96FD-4AB32D5919C2}" )

#define	ltmmWMProfile_V80_288MonoAudio	( L"{7EA3126D-E1BA-4716-89AF-F65CEE0C0C67}" )

#define	ltmmWMProfile_V80_288StereoAudio	( L"{7E4CAB5C-35DC-45BB-A7C0-19B28070D0CC}" )

#define	ltmmWMProfile_V80_32StereoAudio	( L"{60907F9F-B352-47E5-B210-0EF1F47E9F9D}" )

#define	ltmmWMProfile_V80_48StereoAudio	( L"{5EE06BE5-492B-480A-8A8F-12F373ECF9D4}" )

#define	ltmmWMProfile_V80_64StereoAudio	( L"{09BB5BC4-3176-457F-8DD6-3CD919123E2D}" )

#define	ltmmWMProfile_V80_96StereoAudio	( L"{1FC81930-61F2-436F-9D33-349F2A1C0F10}" )

#define	ltmmWMProfile_V80_128StereoAudio	( L"{407B9450-8BDC-4EE5-88B8-6F527BD941F2}" )

#define	ltmmWMProfile_V80_288VideoOnly	( L"{8C45B4C7-4AEB-4F78-A5EC-88420B9DADEF}" )

#define	ltmmWMProfile_V80_56VideoOnly	( L"{6E2A6955-81DF-4943-BA50-68A986A708F6}" )

#define	ltmmWMProfile_V80_FAIRVBRVideo	( L"{3510A862-5850-4886-835F-D78EC6A64042}" )

#define	ltmmWMProfile_V80_HIGHVBRVideo	( L"{0F10D9D3-3B04-4FB0-A3D3-88D4AC854ACC}" )

#define	ltmmWMProfile_V80_BESTVBRVideo	( L"{048439BA-309C-440E-9CB4-3DCCA3756423}" )

#define	ltmmFilter_MPEG2_Splitter	( L"@device:sw:{083863F1-70DE-11D0-BD40-00A0C911CE86}\\{3AE86B20-7BE8-11D1-ABE6-00A0C905F375}" )

#define	ltmmFilter_MPEG2_Demux	( L"@device:sw:{083863F1-70DE-11D0-BD40-00A0C911CE86}\\{AFB6C280-2C41-11D3-8A60-0000F81E0E4A}" )

typedef 
enum ltmmLogFile_Flag
    {	ltmmLogFile_GeneralInfo	= 0x1,
	ltmmLogFile_GraphEvents	= 0x2,
	ltmmLogFile_GraphBuilder	= 0x4,
	ltmmLogFile_GraphSnapshot	= 0x8,
	ltmmLogFile_StreamInfo	= 0x10,
	ltmmLogFile_RegisteredFilters	= 0x20,
	ltmmLogFile_StreamData	= 0x40,
	ltmmLogFile_SourceInfo	= 0x80,
	ltmmLogFile_SourceData	= 0x100,
	ltmmLogFile_Append	= 0x80000000
    } 	ltmmLogFile_Flag;

typedef 
enum L_SUPPORT
    {	L_SUPPORT_CONVERTFROMDVD	= 0,
	L_SUPPORT_MODULE	= ( L_SUPPORT_CONVERTFROMDVD + 1 ) 
    } 	L_SUPPORT;

typedef 
enum ltmmWMProfileManager_Save
    {	ltmmWMProfileManager_Save_Default	= 0,
	ltmmWMProfileManager_Save_System	= 0x1
    } 	ltmmWMProfileManager_Save;

typedef 
enum ltmmTargetFormat_Object
    {	ltmmTargetFormat_Object_Mux	= 0,
	ltmmTargetFormat_Object_Sink	= ( ltmmTargetFormat_Object_Mux + 1 ) ,
	ltmmTargetFormat_Object_VideoCompressor	= ( ltmmTargetFormat_Object_Sink + 1 ) ,
	ltmmTargetFormat_Object_AudioCompressor	= ( ltmmTargetFormat_Object_VideoCompressor + 1 ) ,
	ltmmTargetFormat_Object_AVMux	= ( ltmmTargetFormat_Object_AudioCompressor + 1 ) 
    } 	ltmmTargetFormat_Object;

typedef 
enum ltmmTargetFormat_Dlg
    {	ltmmTargetFormat_Dlg_Mux	= 0,
	ltmmTargetFormat_Dlg_Sink	= ( ltmmTargetFormat_Dlg_Mux + 1 ) ,
	ltmmTargetFormat_Dlg_VideoCompressor	= ( ltmmTargetFormat_Dlg_Sink + 1 ) ,
	ltmmTargetFormat_Dlg_AudioCompressor	= ( ltmmTargetFormat_Dlg_VideoCompressor + 1 ) ,
	ltmmTargetFormat_Dlg_AVMux	= ( ltmmTargetFormat_Dlg_AudioCompressor + 1 ) 
    } 	ltmmTargetFormat_Dlg;

typedef 
enum ltmmCompressor_Reliability
    {	ltmmCompressor_Reliability_Unusable	= 0,
	ltmmCompressor_Reliability_Unstable	= 1,
	ltmmCompressor_Reliability_Unverified	= 2,
	ltmmCompressor_Reliability_Stable	= 3
    } 	ltmmCompressor_Reliability;

typedef 
enum ltmmTargetFormat_Compressor
    {	ltmmTargetFormat_Compressor_Invalid	= 0,
	ltmmTargetFormat_Compressor_Indeterminate	= 1,
	ltmmTargetFormat_Compressor_Valid	= 2
    } 	ltmmTargetFormat_Compressor;

typedef 
enum ltmmTargetFormat_Stream
    {	ltmmTargetFormat_Stream_Audio	= 0x1,
	ltmmTargetFormat_Stream_Video	= 0x2,
	ltmmTargetFormat_Stream_CC	= 0x4,
	ltmmTargetFormat_Stream_Midi	= 0x8,
	ltmmTargetFormat_Stream_Other	= 0x10,
	ltmmTargetFormat_Stream_KLV	= 0x20
    } 	ltmmTargetFormat_Stream;

typedef 
enum ltmmStillQuality
    {	ltmmStillQuality_MC	= -9,
	ltmmStillQuality_MCQ	= -8,
	ltmmStillQuality_SQT	= -7,
	ltmmStillQuality_SQS	= -6,
	ltmmStillQuality_QS	= -5,
	ltmmStillQuality_QMS	= -4,
	ltmmStillQuality_QFS	= -3,
	ltmmStillQuality_PQ2	= -2,
	ltmmStillQuality_PQ1	= -1
    } 	ltmmStillQuality;

typedef 
enum ltmmAnalogVideoStandard
    {	ltmmAnalogVideo_None	= 0,
	ltmmAnalogVideo_NTSC_M	= 0x1,
	ltmmAnalogVideo_NTSC_M_J	= 0x2,
	ltmmAnalogVideo_NTSC_433	= 0x4,
	ltmmAnalogVideo_PAL_B	= 0x10,
	ltmmAnalogVideo_PAL_D	= 0x20,
	ltmmAnalogVideo_PAL_G	= 0x40,
	ltmmAnalogVideo_PAL_H	= 0x80,
	ltmmAnalogVideo_PAL_I	= 0x100,
	ltmmAnalogVideo_PAL_M	= 0x200,
	ltmmAnalogVideo_PAL_N	= 0x400,
	ltmmAnalogVideo_PAL_60	= 0x800,
	ltmmAnalogVideo_SECAM_B	= 0x1000,
	ltmmAnalogVideo_SECAM_D	= 0x2000,
	ltmmAnalogVideo_SECAM_G	= 0x4000,
	ltmmAnalogVideo_SECAM_H	= 0x8000,
	ltmmAnalogVideo_SECAM_K	= 0x10000,
	ltmmAnalogVideo_SECAM_K1	= 0x20000,
	ltmmAnalogVideo_SECAM_L	= 0x40000,
	ltmmAnalogVideo_SECAM_L1	= 0x80000,
	ltmmAnalogVideo_PAL_N_COMBO	= 0x100000
    } 	ltmmAnalogVideoStandard;

typedef struct ltmmMediaEvent
    {
    long lEventCode;
    LONG_PTR lParam1;
    LONG_PTR lParam2;
    } 	ltmmMediaEvent;

typedef 
enum ltmmMediaEventCode
    {	ltmmEC_DVD_DOMAIN_CHANGE	= 0x101,
	ltmmEC_DVD_TITLE_CHANGE	= ( ltmmEC_DVD_DOMAIN_CHANGE + 1 ) ,
	ltmmEC_DVD_CHAPTER_START	= ( ltmmEC_DVD_TITLE_CHANGE + 1 ) ,
	ltmmEC_DVD_AUDIO_STREAM_CHANGE	= ( ltmmEC_DVD_CHAPTER_START + 1 ) ,
	ltmmEC_DVD_SUBPICTURE_STREAM_CHANGE	= ( ltmmEC_DVD_AUDIO_STREAM_CHANGE + 1 ) ,
	ltmmEC_DVD_ANGLE_CHANGE	= ( ltmmEC_DVD_SUBPICTURE_STREAM_CHANGE + 1 ) ,
	ltmmEC_DVD_BUTTON_CHANGE	= ( ltmmEC_DVD_ANGLE_CHANGE + 1 ) ,
	ltmmEC_DVD_VALID_UOPS_CHANGE	= ( ltmmEC_DVD_BUTTON_CHANGE + 1 ) ,
	ltmmEC_DVD_STILL_ON	= ( ltmmEC_DVD_VALID_UOPS_CHANGE + 1 ) ,
	ltmmEC_DVD_STILL_OFF	= ( ltmmEC_DVD_STILL_ON + 1 ) ,
	ltmmEC_DVD_CURRENT_TIME	= ( ltmmEC_DVD_STILL_OFF + 1 ) ,
	ltmmEC_DVD_ERROR	= ( ltmmEC_DVD_CURRENT_TIME + 1 ) ,
	ltmmEC_DVD_WARNING	= ( ltmmEC_DVD_ERROR + 1 ) ,
	ltmmEC_DVD_CHAPTER_AUTOSTOP	= ( ltmmEC_DVD_WARNING + 1 ) ,
	ltmmEC_DVD_NO_FP_PGC	= ( ltmmEC_DVD_CHAPTER_AUTOSTOP + 1 ) ,
	ltmmEC_DVD_PLAYBACK_RATE_CHANGE	= ( ltmmEC_DVD_NO_FP_PGC + 1 ) ,
	ltmmEC_DVD_PARENTAL_LEVEL_CHANGE	= ( ltmmEC_DVD_PLAYBACK_RATE_CHANGE + 1 ) ,
	ltmmEC_DVD_PLAYBACK_STOPPED	= ( ltmmEC_DVD_PARENTAL_LEVEL_CHANGE + 1 ) ,
	ltmmEC_DVD_ANGLES_AVAILABLE	= ( ltmmEC_DVD_PLAYBACK_STOPPED + 1 ) ,
	ltmmEC_DVD_PLAYPERIOD_AUTOSTOP	= ( ltmmEC_DVD_ANGLES_AVAILABLE + 1 ) ,
	ltmmEC_DVD_BUTTON_AUTO_ACTIVATED	= ( ltmmEC_DVD_PLAYPERIOD_AUTOSTOP + 1 ) ,
	ltmmEC_DVD_CMD_START	= ( ltmmEC_DVD_BUTTON_AUTO_ACTIVATED + 1 ) ,
	ltmmEC_DVD_CMD_END	= ( ltmmEC_DVD_CMD_START + 1 ) ,
	ltmmEC_DVD_DISC_EJECTED	= ( ltmmEC_DVD_CMD_END + 1 ) ,
	ltmmEC_DVD_DISC_INSERTED	= ( ltmmEC_DVD_DISC_EJECTED + 1 ) ,
	ltmmEC_DVD_CURRENT_HMSF_TIME	= ( ltmmEC_DVD_DISC_INSERTED + 1 ) ,
	ltmmEC_DVD_KARAOKE_MODE	= ( ltmmEC_DVD_CURRENT_HMSF_TIME + 1 ) ,
	ltmmEC_BUILT	= 0x300,
	ltmmEC_UNBUILT	= ( ltmmEC_BUILT + 1 ) 
    } 	ltmmMediaEventCode;

typedef struct ltmmDVD_HMSF_TIMECODE
    {
    BYTE bHours;
    BYTE bMinutes;
    BYTE bSeconds;
    BYTE bFrames;
    } 	ltmmDVD_HMSF_TIMECODE;

typedef 
enum ltmmDVD_DOMAIN
    {	ltmmDVD_DOMAIN_FirstPlay	= 1,
	ltmmDVD_DOMAIN_VideoManagerMenu	= ( ltmmDVD_DOMAIN_FirstPlay + 1 ) ,
	ltmmDVD_DOMAIN_VideoTitleSetMenu	= ( ltmmDVD_DOMAIN_VideoManagerMenu + 1 ) ,
	ltmmDVD_DOMAIN_Title	= ( ltmmDVD_DOMAIN_VideoTitleSetMenu + 1 ) ,
	ltmmDVD_DOMAIN_Stop	= ( ltmmDVD_DOMAIN_Title + 1 ) 
    } 	ltmmDVD_DOMAIN;

typedef 
enum ltmmDVD_MENU_ID
    {	ltmmDVD_MENU_Title	= 2,
	ltmmDVD_MENU_Root	= 3,
	ltmmDVD_MENU_Subpicture	= 4,
	ltmmDVD_MENU_Audio	= 5,
	ltmmDVD_MENU_Angle	= 6,
	ltmmDVD_MENU_Chapter	= 7
    } 	ltmmDVD_MENU_ID;

typedef 
enum ltmmDVD_DISC_SIDE
    {	ltmmDVD_SIDE_A	= 1,
	ltmmDVD_SIDE_B	= 2
    } 	ltmmDVD_DISC_SIDE;

typedef 
enum ltmmDVD_TIMECODE_FLAGS
    {	ltmmDVD_TC_FLAG_25fps	= 0x1,
	ltmmDVD_TC_FLAG_30fps	= 0x2,
	ltmmDVD_TC_FLAG_DropFrame	= 0x4,
	ltmmDVD_TC_FLAG_Interpolated	= 0x8
    } 	ltmmDVD_TIMECODE_FLAGS;

typedef 
enum ltmmVALID_UOP_FLAG
    {	ltmmUOP_FLAG_Play_Title_Or_AtTime	= 0x1,
	ltmmUOP_FLAG_Play_Chapter	= 0x2,
	ltmmUOP_FLAG_Play_Title	= 0x4,
	ltmmUOP_FLAG_Stop	= 0x8,
	ltmmUOP_FLAG_ReturnFromSubMenu	= 0x10,
	ltmmUOP_FLAG_Play_Chapter_Or_AtTime	= 0x20,
	ltmmUOP_FLAG_PlayPrev_Or_Replay_Chapter	= 0x40,
	ltmmUOP_FLAG_PlayNext_Chapter	= 0x80,
	ltmmUOP_FLAG_Play_Forwards	= 0x100,
	ltmmUOP_FLAG_Play_Backwards	= 0x200,
	ltmmUOP_FLAG_ShowMenu_Title	= 0x400,
	ltmmUOP_FLAG_ShowMenu_Root	= 0x800,
	ltmmUOP_FLAG_ShowMenu_SubPic	= 0x1000,
	ltmmUOP_FLAG_ShowMenu_Audio	= 0x2000,
	ltmmUOP_FLAG_ShowMenu_Angle	= 0x4000,
	ltmmUOP_FLAG_ShowMenu_Chapter	= 0x8000,
	ltmmUOP_FLAG_Resume	= 0x10000,
	ltmmUOP_FLAG_Select_Or_Activate_Button	= 0x20000,
	ltmmUOP_FLAG_Still_Off	= 0x40000,
	ltmmUOP_FLAG_Pause_On	= 0x80000,
	ltmmUOP_FLAG_Select_Audio_Stream	= 0x100000,
	ltmmUOP_FLAG_Select_SubPic_Stream	= 0x200000,
	ltmmUOP_FLAG_Select_Angle	= 0x400000,
	ltmmUOP_FLAG_Select_Karaoke_Audio_Presentation_Mode	= 0x800000,
	ltmmUOP_FLAG_Select_Video_Mode_Preference	= 0x1000000
    } 	ltmmVALID_UOP_FLAG;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_ltmm_0001_0205_0001
    {	ltmmDVD_Relative_Upper	= 1,
	ltmmDVD_Relative_Lower	= 2,
	ltmmDVD_Relative_Left	= 3,
	ltmmDVD_Relative_Right	= 4
    } 	ltmmDVD_RELATIVE_BUTTON;

typedef 
enum ltmmDVD_PARENTAL_LEVEL
    {	ltmmDVD_PARENTAL_LEVEL_8	= 0x8000,
	ltmmDVD_PARENTAL_LEVEL_7	= 0x4000,
	ltmmDVD_PARENTAL_LEVEL_6	= 0x2000,
	ltmmDVD_PARENTAL_LEVEL_5	= 0x1000,
	ltmmDVD_PARENTAL_LEVEL_4	= 0x800,
	ltmmDVD_PARENTAL_LEVEL_3	= 0x400,
	ltmmDVD_PARENTAL_LEVEL_2	= 0x200,
	ltmmDVD_PARENTAL_LEVEL_1	= 0x100
    } 	ltmmDVD_PARENTAL_LEVEL;

typedef 
enum ltmmDVD_AUDIO_LANG_EXT
    {	ltmmDVD_AUD_EXT_NotSpecified	= 0,
	ltmmDVD_AUD_EXT_Captions	= 1,
	ltmmDVD_AUD_EXT_VisuallyImpaired	= 2,
	ltmmDVD_AUD_EXT_DirectorComments1	= 3,
	ltmmDVD_AUD_EXT_DirectorComments2	= 4
    } 	ltmmDVD_AUDIO_LANG_EXT;

typedef 
enum ltmmDVD_SUBPICTURE_TYPE
    {	ltmmDVD_SPType_NotSpecified	= 0,
	ltmmDVD_SPType_Language	= 1,
	ltmmDVD_SPType_Other	= 2
    } 	ltmmDVD_SUBPICTURE_TYPE;

typedef 
enum ltmmDVD_SUBPICTURE_CODING
    {	ltmmDVD_SPCoding_RunLength	= 0,
	ltmmDVD_SPCoding_Extended	= 1,
	ltmmDVD_SPCoding_Other	= 2
    } 	ltmmDVD_SUBPICTURE_CODING;

typedef 
enum ltmmDVD_SUBPICTURE_LANG_EXT
    {	ltmmDVD_SP_EXT_NotSpecified	= 0,
	ltmmDVD_SP_EXT_Caption_Normal	= 1,
	ltmmDVD_SP_EXT_Caption_Big	= 2,
	ltmmDVD_SP_EXT_Caption_Children	= 3,
	ltmmDVD_SP_EXT_CC_Normal	= 5,
	ltmmDVD_SP_EXT_CC_Big	= 6,
	ltmmDVD_SP_EXT_CC_Children	= 7,
	ltmmDVD_SP_EXT_Forced	= 9,
	ltmmDVD_SP_EXT_DirectorComments_Normal	= 13,
	ltmmDVD_SP_EXT_DirectorComments_Big	= 14,
	ltmmDVD_SP_EXT_DirectorComments_Children	= 15
    } 	ltmmDVD_SUBPICTURE_LANG_EXT;

typedef 
enum ltmmDVD_ERROR
    {	ltmmDVD_ERROR_Unexpected	= 1,
	ltmmDVD_ERROR_CopyProtectFail	= 2,
	ltmmDVD_ERROR_InvalidDVD1_0Disc	= 3,
	ltmmDVD_ERROR_InvalidDiscRegion	= 4,
	ltmmDVD_ERROR_LowParentalLevel	= 5,
	ltmmDVD_ERROR_MacrovisionFail	= 6,
	ltmmDVD_ERROR_IncompatibleSystemAndDecoderRegions	= 7,
	ltmmDVD_ERROR_IncompatibleDiscAndDecoderRegions	= 8
    } 	ltmmDVD_ERROR;

typedef 
enum ltmmDVD_WARNING
    {	ltmmDVD_WARNING_InvalidDVD1_0Disc	= 1,
	ltmmDVD_WARNING_FormatNotSupported	= 2,
	ltmmDVD_WARNING_IllegalNavCommand	= 3,
	ltmmDVD_WARNING_Open	= 4,
	ltmmDVD_WARNING_Seek	= 5,
	ltmmDVD_WARNING_Read	= 6
    } 	ltmmDVD_WARNING;

typedef 
enum ltmmDVD_PB_STOPPED
    {	ltmmDVD_PB_STOPPED_Other	= 0,
	ltmmDVD_PB_STOPPED_NoBranch	= 1,
	ltmmDVD_PB_STOPPED_NoFirstPlayDomain	= 2,
	ltmmDVD_PB_STOPPED_StopCommand	= 3,
	ltmmDVD_PB_STOPPED_Reset	= 4,
	ltmmDVD_PB_STOPPED_DiscEjected	= 5,
	ltmmDVD_PB_STOPPED_IllegalNavCommand	= 6,
	ltmmDVD_PB_STOPPED_PlayPeriodAutoStop	= 7,
	ltmmDVD_PB_STOPPED_PlayChapterAutoStop	= 8,
	ltmmDVD_PB_STOPPED_ParentalFailure	= 9,
	ltmmDVD_PB_STOPPED_RegionFailure	= 10,
	ltmmDVD_PB_STOPPED_MacrovisionFailure	= 11,
	ltmmDVD_PB_STOPPED_DiscReadError	= 12,
	ltmmDVD_PB_STOPPED_CopyProtectFailure	= 13
    } 	ltmmDVD_PB_STOPPED;

typedef 
enum ltmmDVD_TextStringType
    {	ltmmDVD_Struct_Volume	= 0x1,
	ltmmDVD_Struct_Title	= 0x2,
	ltmmDVD_Struct_ParentalID	= 0x3,
	ltmmDVD_Struct_PartOfTitle	= 0x4,
	ltmmDVD_Struct_Cell	= 0x5,
	ltmmDVD_Stream_Audio	= 0x10,
	ltmmDVD_Stream_Subpicture	= 0x11,
	ltmmDVD_Stream_Angle	= 0x12,
	ltmmDVD_Channel_Audio	= 0x20,
	ltmmDVD_General_Name	= 0x30,
	ltmmDVD_General_Comments	= 0x31,
	ltmmDVD_Title_Series	= 0x38,
	ltmmDVD_Title_Movie	= 0x39,
	ltmmDVD_Title_Video	= 0x3a,
	ltmmDVD_Title_Album	= 0x3b,
	ltmmDVD_Title_Song	= 0x3c,
	ltmmDVD_Title_Other	= 0x3f,
	ltmmDVD_Title_Sub_Series	= 0x40,
	ltmmDVD_Title_Sub_Movie	= 0x41,
	ltmmDVD_Title_Sub_Video	= 0x42,
	ltmmDVD_Title_Sub_Album	= 0x43,
	ltmmDVD_Title_Sub_Song	= 0x44,
	ltmmDVD_Title_Sub_Other	= 0x47,
	ltmmDVD_Title_Orig_Series	= 0x48,
	ltmmDVD_Title_Orig_Movie	= 0x49,
	ltmmDVD_Title_Orig_Video	= 0x4a,
	ltmmDVD_Title_Orig_Album	= 0x4b,
	ltmmDVD_Title_Orig_Song	= 0x4c,
	ltmmDVD_Title_Orig_Other	= 0x4f,
	ltmmDVD_Other_Scene	= 0x50,
	ltmmDVD_Other_Cut	= 0x51,
	ltmmDVD_Other_Take	= 0x52
    } 	ltmmDVD_TextStringType;

typedef 
enum ltmmDVD_VIDEO_COMPRESSION
    {	ltmmDVD_VideoCompression_Other	= 0,
	ltmmDVD_VideoCompression_MPEG1	= 1,
	ltmmDVD_VideoCompression_MPEG2	= 2
    } 	ltmmDVD_VIDEO_COMPRESSION;

typedef 
enum ltmmDVD_TextCharSet
    {	ltmmDVD_CharSet_Unicode	= 0,
	ltmmDVD_CharSet_ISO646	= 1,
	ltmmDVD_CharSet_JIS_Roman_Kanji	= 2,
	ltmmDVD_CharSet_ISO8859_1	= 3,
	ltmmDVD_CharSet_ShiftJIS_Kanji_Roman_Katakana	= 4
    } 	ltmmDVD_TextCharSet;

typedef 
enum ltmmDVD_AUDIO_APPMODE
    {	ltmmDVD_AudioMode_None	= 0,
	ltmmDVD_AudioMode_Karaoke	= 1,
	ltmmDVD_AudioMode_Surround	= 2,
	ltmmDVD_AudioMode_Other	= 3
    } 	ltmmDVD_AUDIO_APPMODE;

typedef 
enum ltmmDVD_AUDIO_FORMAT
    {	ltmmDVD_AudioFormat_AC3	= 0,
	ltmmDVD_AudioFormat_MPEG1	= 1,
	ltmmDVD_AudioFormat_MPEG1_DRC	= 2,
	ltmmDVD_AudioFormat_MPEG2	= 3,
	ltmmDVD_AudioFormat_MPEG2_DRC	= 4,
	ltmmDVD_AudioFormat_LPCM	= 5,
	ltmmDVD_AudioFormat_DTS	= 6,
	ltmmDVD_AudioFormat_SDDS	= 7,
	ltmmDVD_AudioFormat_Other	= 8
    } 	ltmmDVD_AUDIO_FORMAT;

typedef 
enum ltmmMediaInfoSourceFormat
    {	ltmmMediaInfo_SourceFormat_Unknown	= 0,
	ltmmMediaInfo_SourceFormat_Avi	= ( ltmmMediaInfo_SourceFormat_Unknown + 1 ) ,
	ltmmMediaInfo_SourceFormat_Asf	= ( ltmmMediaInfo_SourceFormat_Avi + 1 ) ,
	ltmmMediaInfo_SourceFormat_WAVE	= ( ltmmMediaInfo_SourceFormat_Asf + 1 ) ,
	ltmmMediaInfo_SourceFormat_MPEG1Audio	= ( ltmmMediaInfo_SourceFormat_WAVE + 1 ) ,
	ltmmMediaInfo_SourceFormat_MPEG1Video	= ( ltmmMediaInfo_SourceFormat_MPEG1Audio + 1 ) ,
	ltmmMediaInfo_SourceFormat_MPEG1System	= ( ltmmMediaInfo_SourceFormat_MPEG1Video + 1 ) ,
	ltmmMediaInfo_SourceFormat_MPEG1VideoCD	= ( ltmmMediaInfo_SourceFormat_MPEG1System + 1 ) ,
	ltmmMediaInfo_SourceFormat_Midi	= ( ltmmMediaInfo_SourceFormat_MPEG1VideoCD + 1 ) ,
	ltmmMediaInfo_SourceFormat_QTMovie	= ( ltmmMediaInfo_SourceFormat_Midi + 1 ) ,
	ltmmMediaInfo_SourceFormat_DICOM	= ( ltmmMediaInfo_SourceFormat_QTMovie + 1 ) ,
	ltmmMediaInfo_SourceFormat_Still	= ( ltmmMediaInfo_SourceFormat_DICOM + 1 ) ,
	ltmmMediaInfo_SourceFormat_OGG	= ( ltmmMediaInfo_SourceFormat_Still + 1 ) ,
	ltmmMediaInfo_SourceFormat_MPEG2_PROGRAM	= ( ltmmMediaInfo_SourceFormat_OGG + 1 ) ,
	ltmmMediaInfo_SourceFormat_ISO	= ( ltmmMediaInfo_SourceFormat_MPEG2_PROGRAM + 1 ) ,
	ltmmMediaInfo_SourceFormat_MPEG2_TRANSPORT	= ( ltmmMediaInfo_SourceFormat_ISO + 1 ) ,
	ltmmMediaInfo_SourceFormat_FLV	= ( ltmmMediaInfo_SourceFormat_MPEG2_TRANSPORT + 1 ) ,
	ltmmMediaInfo_SourceFormat_FLV_H264	= ( ltmmMediaInfo_SourceFormat_FLV + 1 ) ,
	ltmmMediaInfo_SourceFormat_DVR	= ( ltmmMediaInfo_SourceFormat_FLV_H264 + 1 ) 
    } 	ltmmMediaInfoSourceFormat;

typedef 
enum ltmmVideoProcAmpProperty
    {	ltmmVideoProcAmp_Brightness	= 0,
	ltmmVideoProcAmp_Contrast	= ( ltmmVideoProcAmp_Brightness + 1 ) ,
	ltmmVideoProcAmp_Hue	= ( ltmmVideoProcAmp_Contrast + 1 ) ,
	ltmmVideoProcAmp_Saturation	= ( ltmmVideoProcAmp_Hue + 1 ) ,
	ltmmVideoProcAmp_Sharpness	= ( ltmmVideoProcAmp_Saturation + 1 ) ,
	ltmmVideoProcAmp_Gamma	= ( ltmmVideoProcAmp_Sharpness + 1 ) ,
	ltmmVideoProcAmp_ColorEnable	= ( ltmmVideoProcAmp_Gamma + 1 ) ,
	ltmmVideoProcAmp_WhiteBalance	= ( ltmmVideoProcAmp_ColorEnable + 1 ) ,
	ltmmVideoProcAmp_BacklightCompensation	= ( ltmmVideoProcAmp_WhiteBalance + 1 ) ,
	ltmmVideoProcAmp_Gain	= ( ltmmVideoProcAmp_BacklightCompensation + 1 ) 
    } 	ltmmVideoProcAmpProperty;

typedef 
enum ltmmVideoProcAmpFlags
    {	ltmmVideoProcAmp_Flags_Auto	= 0x1,
	ltmmVideoProcAmp_Flags_Manual	= 0x2
    } 	ltmmVideoProcAmpFlags;

typedef 
enum ltmmCameraControlProperty
    {	ltmmCameraControl_Pan	= 0,
	ltmmCameraControl_Tilt	= ( ltmmCameraControl_Pan + 1 ) ,
	ltmmCameraControl_Roll	= ( ltmmCameraControl_Tilt + 1 ) ,
	ltmmCameraControl_Zoom	= ( ltmmCameraControl_Roll + 1 ) ,
	ltmmCameraControl_Exposure	= ( ltmmCameraControl_Zoom + 1 ) ,
	ltmmCameraControl_Iris	= ( ltmmCameraControl_Exposure + 1 ) ,
	ltmmCameraControl_Focus	= ( ltmmCameraControl_Iris + 1 ) 
    } 	ltmmCameraControlProperty;

typedef 
enum ltmmCameraControlFlags
    {	ltmmCameraControl_Flags_Auto	= 0x1,
	ltmmCameraControl_Flags_Manual	= 0x2
    } 	ltmmCameraControlFlags;

typedef 
enum ltmmWMT_VERSION
    {	ltmmWMT_VER_4_0	= 0x40000,
	ltmmWMT_VER_7_0	= 0x70000,
	ltmmWMT_VER_8_0	= 0x80000,
	ltmmWMT_VER_9_0	= 0x90000
    } 	ltmmWMT_VERSION;

typedef 
enum ltmmAppearance
    {	ltmmFlat	= 0,
	ltmm3d	= ( ltmmFlat + 1 ) 
    } 	ltmmAppearance;

typedef 
enum ltmmBorderStyle
    {	ltmmNone	= 0,
	ltmmFixedSingle	= ( ltmmNone + 1 ) 
    } 	ltmmBorderStyle;

typedef 
enum ltmmSizeMode
    {	ltmmFit	= 0,
	ltmmStretch	= ( ltmmFit + 1 ) ,
	ltmmNormal	= ( ltmmStretch + 1 ) ,
	ltmmThreeQuarter	= ( ltmmNormal + 1 ) ,
	ltmmHalf	= ( ltmmThreeQuarter + 1 ) ,
	ltmmDouble	= ( ltmmHalf + 1 ) 
    } 	ltmmSizeMode;

typedef 
enum ltmmScaleMode
    {	ltmmUser	= 0,
	ltmmTwips	= ( ltmmUser + 1 ) ,
	ltmmPoints	= ( ltmmTwips + 1 ) ,
	ltmmPixels	= ( ltmmPoints + 1 ) ,
	ltmmCharacters	= ( ltmmPixels + 1 ) ,
	ltmmInches	= ( ltmmCharacters + 1 ) ,
	ltmmMillimeters	= ( ltmmInches + 1 ) ,
	ltmmCentimeters	= ( ltmmMillimeters + 1 ) 
    } 	ltmmScaleMode;

typedef 
enum ltmmMousePointer
    {	ltmmDefault	= 0,
	ltmmArrow	= 1,
	ltmmCrosshair	= 2,
	ltmmIbeam	= 3,
	ltmmIconPointer	= 4,
	ltmmSizePointer	= 5,
	ltmmSizeNESW	= 6,
	ltmmSizeNS	= 7,
	ltmmSizeNWSE	= 8,
	ltmmSizeWE	= 9,
	ltmmUpArrow	= 10,
	ltmmHourglass	= 11,
	ltmmNoDrop	= 12,
	ltmmArrowHourglass	= 13,
	ltmmArrowQuestion	= 14,
	ltmmSizeAll	= 15,
	ltmmCustom	= 99
    } 	ltmmMousePointer;

typedef 
enum ltmmDVResolution
    {	ltmmDVResolution_Default	= 0,
	ltmmDVResolution_Full	= 1000,
	ltmmDVResolution_Half	= 1001,
	ltmmDVResolution_Quarter	= 1002,
	ltmmDVResolution_DC	= 1003
    } 	ltmmDVResolution;

typedef 
enum ltmmCapture_Settings
    {	ltmmCapture_Settings_AudioProcessors	= 0x1,
	ltmmCapture_Settings_VideoProcessors	= 0x2,
	ltmmCapture_Settings_Processors	= 0xf,
	ltmmCapture_Settings_AudioCompressors	= 0x10,
	ltmmCapture_Settings_VideoCompressors	= 0x20,
	ltmmCapture_Settings_Compressors	= 0xf0,
	ltmmCapture_Settings_AudioDevices	= 0x100,
	ltmmCapture_Settings_VideoDevices	= 0x200,
	ltmmCapture_Settings_MidiDevices	= 0x400,
	ltmmCapture_Settings_Devices	= 0xf00,
	ltmmCapture_Settings_MiscControls	= 0x1000,
	ltmmCapture_Settings_Controls	= 0xf000,
	ltmmCapture_Settings_All	= 0xffffff,
	ltmmCapture_Settings_Rewind	= 0x1000000,
	ltmmCapture_Settings_Flags	= 0xff000000
    } 	ltmmCapture_Settings;

typedef 
enum ltmmCapture_State
    {	ltmmCapture_State_NotReady	= 0,
	ltmmCapture_State_Stopped	= ( ltmmCapture_State_NotReady + 1 ) ,
	ltmmCapture_State_Previewing	= ( ltmmCapture_State_Stopped + 1 ) ,
	ltmmCapture_State_Pending	= ( ltmmCapture_State_Previewing + 1 ) ,
	ltmmCapture_State_Running	= ( ltmmCapture_State_Pending + 1 ) ,
	ltmmCapture_State_Paused	= ( ltmmCapture_State_Running + 1 ) 
    } 	ltmmCapture_State;

typedef 
enum ltmmCapture_Notify
    {	ltmmCapture_Notify_Started	= 0,
	ltmmCapture_Notify_Complete	= ( ltmmCapture_Notify_Started + 1 ) ,
	ltmmCapture_Notify_ErrorAbort	= ( ltmmCapture_Notify_Complete + 1 ) ,
	ltmmCapture_Notify_Progress	= ( ltmmCapture_Notify_ErrorAbort + 1 ) ,
	ltmmCapture_Notify_MediaEvent	= ( ltmmCapture_Notify_Progress + 1 ) 
    } 	ltmmCapture_Notify;

typedef 
enum ltmmCapture_Mode
    {	ltmmCapture_Mode_VideoOrAudio	= 0,
	ltmmCapture_Mode_VideoAndAudio	= ( ltmmCapture_Mode_VideoOrAudio + 1 ) ,
	ltmmCapture_Mode_Video	= ( ltmmCapture_Mode_VideoAndAudio + 1 ) ,
	ltmmCapture_Mode_Audio	= ( ltmmCapture_Mode_Video + 1 ) ,
	ltmmCapture_Mode_ManualFrames	= ( ltmmCapture_Mode_Audio + 1 ) ,
	ltmmCapture_Mode_AutoFrames	= ( ltmmCapture_Mode_ManualFrames + 1 ) ,
	ltmmCapture_Mode_Still	= ( ltmmCapture_Mode_AutoFrames + 1 ) ,
	ltmmCapture_Mode_ManualFramesAndAudio	= ( ltmmCapture_Mode_Still + 1 ) ,
	ltmmCapture_Mode_AutoFramesAndAudio	= ( ltmmCapture_Mode_ManualFramesAndAudio + 1 ) ,
	ltmmCapture_Mode_Mask	= 0xff,
	ltmmCapture_Mode_InhibitRun	= 0x1000000,
	ltmmCapture_Mode_ModifierMask	= 0xff000000
    } 	ltmmCapture_Mode;

typedef 
enum ltmmCapture_Preview
    {	ltmmCapture_Preview_VideoAndAudio	= 0,
	ltmmCapture_Preview_Video	= ( ltmmCapture_Preview_VideoAndAudio + 1 ) ,
	ltmmCapture_Preview_Audio	= ( ltmmCapture_Preview_Video + 1 ) 
    } 	ltmmCapture_Preview;

typedef 
enum ltmmCapture_Dlg
    {	ltmmCapture_Dlg_VideoFormat	= 0,
	ltmmCapture_Dlg_VideoSource	= ( ltmmCapture_Dlg_VideoFormat + 1 ) ,
	ltmmCapture_Dlg_VideoDisplay	= ( ltmmCapture_Dlg_VideoSource + 1 ) ,
	ltmmCapture_Dlg_AudioFormat	= ( ltmmCapture_Dlg_VideoDisplay + 1 ) ,
	ltmmCapture_Dlg_VideoCaptureFilter	= ( ltmmCapture_Dlg_AudioFormat + 1 ) ,
	ltmmCapture_Dlg_AudioCaptureFilter	= ( ltmmCapture_Dlg_VideoCaptureFilter + 1 ) ,
	ltmmCapture_Dlg_VideoCapturePin	= ( ltmmCapture_Dlg_AudioCaptureFilter + 1 ) ,
	ltmmCapture_Dlg_AudioCapturePin	= ( ltmmCapture_Dlg_VideoCapturePin + 1 ) ,
	ltmmCapture_Dlg_VideoPreviewPin	= ( ltmmCapture_Dlg_AudioCapturePin + 1 ) ,
	ltmmCapture_Dlg_AudioPreviewPin	= ( ltmmCapture_Dlg_VideoPreviewPin + 1 ) ,
	ltmmCapture_Dlg_TVTuner	= ( ltmmCapture_Dlg_AudioPreviewPin + 1 ) ,
	ltmmCapture_Dlg_TVAudio	= ( ltmmCapture_Dlg_TVTuner + 1 ) ,
	ltmmCapture_Dlg_VideoCrossbar	= ( ltmmCapture_Dlg_TVAudio + 1 ) ,
	ltmmCapture_Dlg_AudioCrossbar	= ( ltmmCapture_Dlg_VideoCrossbar + 1 ) ,
	ltmmCapture_Dlg_VideoCompressor	= ( ltmmCapture_Dlg_AudioCrossbar + 1 ) ,
	ltmmCapture_Dlg_AudioCompressor	= ( ltmmCapture_Dlg_VideoCompressor + 1 ) ,
	ltmmCapture_Dlg_Capture	= ( ltmmCapture_Dlg_AudioCompressor + 1 ) ,
	ltmmCapture_Dlg_TV	= ( ltmmCapture_Dlg_Capture + 1 ) ,
	ltmmCapture_Dlg_Preview	= ( ltmmCapture_Dlg_TV + 1 ) ,
	ltmmCapture_Dlg_AudioProcessors	= ( ltmmCapture_Dlg_Preview + 1 ) ,
	ltmmCapture_Dlg_VideoProcessors	= ( ltmmCapture_Dlg_AudioProcessors + 1 ) ,
	ltmmCapture_Dlg_TargetFormat	= ( ltmmCapture_Dlg_VideoProcessors + 1 ) ,
	ltmmCapture_Dlg_VideoRenderer	= ( ltmmCapture_Dlg_TargetFormat + 1 ) ,
	ltmmCapture_Dlg_AudioRenderer	= ( ltmmCapture_Dlg_VideoRenderer + 1 ) ,
	ltmmCapture_Dlg_VideoDecompressor	= ( ltmmCapture_Dlg_AudioRenderer + 1 ) ,
	ltmmCapture_Dlg_AudioDecompressor	= ( ltmmCapture_Dlg_VideoDecompressor + 1 ) ,
	ltmmCapture_Dlg_Splitter	= ( ltmmCapture_Dlg_AudioDecompressor + 1 ) ,
	ltmmCapture_Dlg_PreviewAudioProcessors	= ( ltmmCapture_Dlg_Splitter + 1 ) ,
	ltmmCapture_Dlg_PreviewVideoProcessors	= ( ltmmCapture_Dlg_PreviewAudioProcessors + 1 ) ,
	ltmmCapture_Dlg_SelAudioProcessor	= 0x100,
	ltmmCapture_Dlg_SelVideoProcessor	= 0x200,
	ltmmCapture_Dlg_PrevAudioProcessor	= 0x300,
	ltmmCapture_Dlg_PrevVideoProcessor	= 0x400
    } 	ltmmCapture_Dlg;

typedef 
enum ltmmCapture_Object
    {	ltmmCapture_Object_FilterGraph	= 0,
	ltmmCapture_Object_VideoCaptureFilter	= ( ltmmCapture_Object_FilterGraph + 1 ) ,
	ltmmCapture_Object_AudioCaptureFilter	= ( ltmmCapture_Object_VideoCaptureFilter + 1 ) ,
	ltmmCapture_Object_VideoCapturePin	= ( ltmmCapture_Object_AudioCaptureFilter + 1 ) ,
	ltmmCapture_Object_AudioCapturePin	= ( ltmmCapture_Object_VideoCapturePin + 1 ) ,
	ltmmCapture_Object_VideoPreviewPin	= ( ltmmCapture_Object_AudioCapturePin + 1 ) ,
	ltmmCapture_Object_AudioPreviewPin	= ( ltmmCapture_Object_VideoPreviewPin + 1 ) ,
	ltmmCapture_Object_TVTuner	= ( ltmmCapture_Object_AudioPreviewPin + 1 ) ,
	ltmmCapture_Object_TVAudio	= ( ltmmCapture_Object_TVTuner + 1 ) ,
	ltmmCapture_Object_VideoCrossbar	= ( ltmmCapture_Object_TVAudio + 1 ) ,
	ltmmCapture_Object_AudioCrossbar	= ( ltmmCapture_Object_VideoCrossbar + 1 ) ,
	ltmmCapture_Object_VideoCompressor	= ( ltmmCapture_Object_AudioCrossbar + 1 ) ,
	ltmmCapture_Object_AudioCompressor	= ( ltmmCapture_Object_VideoCompressor + 1 ) ,
	ltmmCapture_Object_TargetFilter	= ( ltmmCapture_Object_AudioCompressor + 1 ) ,
	ltmmCapture_Object_VideoRenderer	= ( ltmmCapture_Object_TargetFilter + 1 ) ,
	ltmmCapture_Object_AudioRenderer	= ( ltmmCapture_Object_VideoRenderer + 1 ) ,
	ltmmCapture_Object_VideoDecompressor	= ( ltmmCapture_Object_AudioRenderer + 1 ) ,
	ltmmCapture_Object_AudioDecompressor	= ( ltmmCapture_Object_VideoDecompressor + 1 ) ,
	ltmmCapture_Object_Splitter	= ( ltmmCapture_Object_AudioDecompressor + 1 ) ,
	ltmmCapture_Object_VideoCompressorOutputPin	= ( ltmmCapture_Object_Splitter + 1 ) ,
	ltmmCapture_Object_AudioCompressorOutputPin	= ( ltmmCapture_Object_VideoCompressorOutputPin + 1 ) ,
	ltmmCapture_Object_Sink	= ( ltmmCapture_Object_AudioCompressorOutputPin + 1 ) ,
	ltmmCapture_Object_TargetAVMux	= ( ltmmCapture_Object_Sink + 1 ) ,
	ltmmCapture_Object_TargetVideoCompressor	= ( ltmmCapture_Object_TargetAVMux + 1 ) ,
	ltmmCapture_Object_TargetAudioCompressor	= ( ltmmCapture_Object_TargetVideoCompressor + 1 ) ,
	ltmmCapture_Object_SelAudioProcessor	= 0x100,
	ltmmCapture_Object_SelVideoProcessor	= 0x200,
	ltmmCapture_Object_PrevAudioProcessor	= 0x300,
	ltmmCapture_Object_PrevVideoProcessor	= 0x400
    } 	ltmmCapture_Object;

typedef 
enum ltmmCapture_MasterStream
    {	ltmmCapture_MasterStream_None	= -1,
	ltmmCapture_MasterStream_Video	= 0,
	ltmmCapture_MasterStream_Audio	= 1
    } 	ltmmCapture_MasterStream;

typedef 
enum ltmmCapture_InterleavingMode
    {	ltmmCapture_Interleave_None	= 0,
	ltmmCapture_Interleave_Capture	= ( ltmmCapture_Interleave_None + 1 ) ,
	ltmmCapture_Interleave_Full	= ( ltmmCapture_Interleave_Capture + 1 ) ,
	ltmmCapture_Interleave_None_Buffered	= ( ltmmCapture_Interleave_Full + 1 ) 
    } 	ltmmCapture_InterleavingMode;

typedef 
enum ltmmCapture_Target
    {	ltmmCapture_Target_None	= 0,
	ltmmCapture_Target_File	= ( ltmmCapture_Target_None + 1 ) ,
	ltmmCapture_Target_Array	= ( ltmmCapture_Target_File + 1 ) ,
	ltmmCapture_Target_Object	= ( ltmmCapture_Target_Array + 1 ) ,
	ltmmCapture_Target_Device	= ( ltmmCapture_Target_Object + 1 ) ,
	ltmmCapture_Target_Stream	= ( ltmmCapture_Target_Device + 1 ) 
    } 	ltmmCapture_Target;

typedef 
enum ltmmCapture_TargetFormat
    {	ltmmCapture_TargetFormat_Avi	= 0,
	ltmmCapture_TargetFormat_Asf	= ( ltmmCapture_TargetFormat_Avi + 1 ) ,
	ltmmCapture_TargetFormat_WAVE	= ( ltmmCapture_TargetFormat_Asf + 1 ) ,
	ltmmCapture_TargetFormat_MPEG1Audio	= ( ltmmCapture_TargetFormat_WAVE + 1 ) ,
	ltmmCapture_TargetFormat_DICOM	= ( ltmmCapture_TargetFormat_MPEG1Audio + 1 ) ,
	ltmmCapture_TargetFormat_dvsd	= ( ltmmCapture_TargetFormat_DICOM + 1 ) ,
	ltmmCapture_TargetFormat_MP3	= ( ltmmCapture_TargetFormat_dvsd + 1 ) ,
	ltmmCapture_TargetFormat_dvsd_Avi	= ( ltmmCapture_TargetFormat_MP3 + 1 ) ,
	ltmmCapture_TargetFormat_Asf_Compressor_Mux	= ( ltmmCapture_TargetFormat_dvsd_Avi + 1 ) ,
	ltmmCapture_TargetFormat_Asf_Mux	= ( ltmmCapture_TargetFormat_Asf_Compressor_Mux + 1 ) ,
	ltmmCapture_TargetFormat_Still_Image	= ( ltmmCapture_TargetFormat_Asf_Mux + 1 ) ,
	ltmmCapture_TargetFormat_Stream	= ( ltmmCapture_TargetFormat_Still_Image + 1 ) ,
	ltmmCapture_TargetFormat_OGG	= ( ltmmCapture_TargetFormat_Stream + 1 ) ,
	ltmmCapture_TargetFormat_dvsd_OGG	= ( ltmmCapture_TargetFormat_OGG + 1 ) ,
	ltmmCapture_TargetFormat_MPEG1System	= ( ltmmCapture_TargetFormat_dvsd_OGG + 1 ) ,
	ltmmCapture_TargetFormat_MPEG2_PROGRAM	= ( ltmmCapture_TargetFormat_MPEG1System + 1 ) ,
	ltmmCapture_TargetFormat_MP3_LEAD	= ( ltmmCapture_TargetFormat_MPEG2_PROGRAM + 1 ) ,
	ltmmCapture_TargetFormat_DVD	= ( ltmmCapture_TargetFormat_MP3_LEAD + 1 ) ,
	ltmmCapture_TargetFormat_NET	= ( ltmmCapture_TargetFormat_DVD + 1 ) ,
	ltmmCapture_TargetFormat_MPEG2_DICOM	= ( ltmmCapture_TargetFormat_NET + 1 ) ,
	ltmmCapture_TargetFormat_ISO	= ( ltmmCapture_TargetFormat_MPEG2_DICOM + 1 ) ,
	ltmmCapture_TargetFormat_MP3_LAME	= ( ltmmCapture_TargetFormat_ISO + 1 ) ,
	ltmmCapture_TargetFormat_MP3_DEFAULT	= ( ltmmCapture_TargetFormat_MP3_LAME + 1 ) ,
	ltmmCapture_TargetFormat_MPEG2_TRANSPORT	= ( ltmmCapture_TargetFormat_MP3_DEFAULT + 1 ) ,
	ltmmCapture_TargetFormat_FLV	= ( ltmmCapture_TargetFormat_MPEG2_TRANSPORT + 1 ) ,
	ltmmCapture_TargetFormat_FLV_H263	= ( ltmmCapture_TargetFormat_FLV + 1 ) ,
	ltmmCapture_TargetFormat_FLV_H264	= ( ltmmCapture_TargetFormat_FLV_H263 + 1 ) ,
	ltmmCapture_TargetFormat_DVR_PROGRAM	= ( ltmmCapture_TargetFormat_FLV_H264 + 1 ) ,
	ltmmCapture_TargetFormat_DVR_TRANSPORT	= ( ltmmCapture_TargetFormat_DVR_PROGRAM + 1 ) ,
	ltmmCapture_TargetFormat_DVR	= ( ltmmCapture_TargetFormat_DVR_TRANSPORT + 1 ) 
    } 	ltmmCapture_TargetFormat;

typedef 
enum ltmmCapture_PreviewTap
    {	ltmmCapture_PreviewTap_Source	= 0,
	ltmmCapture_PreviewTap_Processors	= ( ltmmCapture_PreviewTap_Source + 1 ) ,
	ltmmCapture_PreviewTap_Compressor	= ( ltmmCapture_PreviewTap_Processors + 1 ) 
    } 	ltmmCapture_PreviewTap;

typedef 
enum ltmmCapture_StillFormat
    {	ltmmCapture_StillFormat_BMP	= 0,
	ltmmCapture_StillFormat_CMP	= ( ltmmCapture_StillFormat_BMP + 1 ) ,
	ltmmCapture_StillFormat_JPEG444	= ( ltmmCapture_StillFormat_CMP + 1 ) ,
	ltmmCapture_StillFormat_JPEG422	= ( ltmmCapture_StillFormat_JPEG444 + 1 ) ,
	ltmmCapture_StillFormat_JPEG411	= ( ltmmCapture_StillFormat_JPEG422 + 1 ) ,
	ltmmCapture_StillFormat_PSPTHM	= ( ltmmCapture_StillFormat_JPEG411 + 1 ) 
    } 	ltmmCapture_StillFormat;

typedef 
enum ltmmConvert_State
    {	ltmmConvert_State_NotReady	= 0,
	ltmmConvert_State_Stopped	= ( ltmmConvert_State_NotReady + 1 ) ,
	ltmmConvert_State_Running	= ( ltmmConvert_State_Stopped + 1 ) ,
	ltmmConvert_State_Paused	= ( ltmmConvert_State_Running + 1 ) 
    } 	ltmmConvert_State;

typedef 
enum ltmmConvert_StillFormat
    {	ltmmConvert_StillFormat_BMP	= 0,
	ltmmConvert_StillFormat_CMP	= ( ltmmConvert_StillFormat_BMP + 1 ) ,
	ltmmConvert_StillFormat_JPEG444	= ( ltmmConvert_StillFormat_CMP + 1 ) ,
	ltmmConvert_StillFormat_JPEG422	= ( ltmmConvert_StillFormat_JPEG444 + 1 ) ,
	ltmmConvert_StillFormat_JPEG411	= ( ltmmConvert_StillFormat_JPEG422 + 1 ) ,
	ltmmConvert_StillFormat_PSPTHM	= ( ltmmConvert_StillFormat_JPEG411 + 1 ) 
    } 	ltmmConvert_StillFormat;

typedef 
enum ltmmConvert_Settings
    {	ltmmConvert_Settings_AudioProcessors	= 0x1,
	ltmmConvert_Settings_VideoProcessors	= 0x2,
	ltmmConvert_Settings_Processors	= 0xf,
	ltmmConvert_Settings_AudioCompressors	= 0x10,
	ltmmConvert_Settings_VideoCompressors	= 0x20,
	ltmmConvert_Settings_Compressors	= 0xf0,
	ltmmConvert_Settings_AudioDevices	= 0x100,
	ltmmConvert_Settings_VideoDevices	= 0x200,
	ltmmConvert_Settings_MidiDevices	= 0x400,
	ltmmConvert_Settings_Devices	= 0xf00,
	ltmmConvert_Settings_MiscControls	= 0x1000,
	ltmmConvert_Settings_Controls	= 0xf000,
	ltmmConvert_Settings_All	= 0xffffff,
	ltmmConvert_Settings_Rewind	= 0x1000000,
	ltmmConvert_Settings_Flags	= 0xff000000
    } 	ltmmConvert_Settings;

typedef 
enum ltmmConvert_Source
    {	ltmmConvert_Source_None	= 0,
	ltmmConvert_Source_File	= ( ltmmConvert_Source_None + 1 ) ,
	ltmmConvert_Source_HGlobal	= ( ltmmConvert_Source_File + 1 ) ,
	ltmmConvert_Source_Array	= ( ltmmConvert_Source_HGlobal + 1 ) ,
	ltmmConvert_Source_Object	= ( ltmmConvert_Source_Array + 1 ) ,
	ltmmConvert_Source_Stream	= ( ltmmConvert_Source_Object + 1 ) 
    } 	ltmmConvert_Source;

typedef 
enum ltmmConvert_Stream
    {	ltmmConvert_Stream_Audio	= 0x1,
	ltmmConvert_Stream_Video	= 0x2,
	ltmmConvert_Stream_CC	= 0x4,
	ltmmConvert_Stream_Midi	= 0x8,
	ltmmConvert_Stream_Other	= 0x10,
	ltmmConvert_Stream_KLV	= 0x20
    } 	ltmmConvert_Stream;

typedef 
enum ltmmConvert_Target
    {	ltmmConvert_Target_None	= 0,
	ltmmConvert_Target_File	= ( ltmmConvert_Target_None + 1 ) ,
	ltmmConvert_Target_Array	= ( ltmmConvert_Target_File + 1 ) ,
	ltmmConvert_Target_Object	= ( ltmmConvert_Target_Array + 1 ) ,
	ltmmConvert_Target_Device	= ( ltmmConvert_Target_Object + 1 ) ,
	ltmmConvert_Target_Stream	= ( ltmmConvert_Target_Device + 1 ) 
    } 	ltmmConvert_Target;

typedef 
enum ltmmConvert_Dlg
    {	ltmmConvert_Dlg_VideoCompressor	= 0,
	ltmmConvert_Dlg_AudioCompressor	= ( ltmmConvert_Dlg_VideoCompressor + 1 ) ,
	ltmmConvert_Dlg_TargetFormat	= ( ltmmConvert_Dlg_AudioCompressor + 1 ) ,
	ltmmConvert_Dlg_AudioProcessors	= ( ltmmConvert_Dlg_TargetFormat + 1 ) ,
	ltmmConvert_Dlg_VideoProcessors	= ( ltmmConvert_Dlg_AudioProcessors + 1 ) ,
	ltmmConvert_Dlg_Source	= ( ltmmConvert_Dlg_VideoProcessors + 1 ) ,
	ltmmConvert_Dlg_VideoDecompressor	= ( ltmmConvert_Dlg_Source + 1 ) ,
	ltmmConvert_Dlg_AudioDecompressor	= ( ltmmConvert_Dlg_VideoDecompressor + 1 ) ,
	ltmmConvert_Dlg_Splitter	= ( ltmmConvert_Dlg_AudioDecompressor + 1 ) ,
	ltmmConvert_Dlg_SelAudioProcessor	= 0x100,
	ltmmConvert_Dlg_SelVideoProcessor	= 0x200
    } 	ltmmConvert_Dlg;

typedef 
enum ltmmConvert_Object
    {	ltmmConvert_Object_FilterGraph	= 0,
	ltmmConvert_Object_SourceFilter	= ( ltmmConvert_Object_FilterGraph + 1 ) ,
	ltmmConvert_Object_TargetFilter	= ( ltmmConvert_Object_SourceFilter + 1 ) ,
	ltmmConvert_Object_VideoCompressor	= ( ltmmConvert_Object_TargetFilter + 1 ) ,
	ltmmConvert_Object_AudioCompressor	= ( ltmmConvert_Object_VideoCompressor + 1 ) ,
	ltmmConvert_Object_VideoDecompressor	= ( ltmmConvert_Object_AudioCompressor + 1 ) ,
	ltmmConvert_Object_AudioDecompressor	= ( ltmmConvert_Object_VideoDecompressor + 1 ) ,
	ltmmConvert_Object_Splitter	= ( ltmmConvert_Object_AudioDecompressor + 1 ) ,
	ltmmConvert_Object_VideoCompressorOutputPin	= ( ltmmConvert_Object_Splitter + 1 ) ,
	ltmmConvert_Object_AudioCompressorOutputPin	= ( ltmmConvert_Object_VideoCompressorOutputPin + 1 ) ,
	ltmmConvert_Object_Sink	= ( ltmmConvert_Object_AudioCompressorOutputPin + 1 ) ,
	ltmmConvert_Object_TargetAVMux	= ( ltmmConvert_Object_Sink + 1 ) ,
	ltmmConvert_Object_TargetVideoCompressor	= ( ltmmConvert_Object_TargetAVMux + 1 ) ,
	ltmmConvert_Object_TargetAudioCompressor	= ( ltmmConvert_Object_TargetVideoCompressor + 1 ) ,
	ltmmConvert_Object_SelAudioProcessor	= 0x100,
	ltmmConvert_Object_SelVideoProcessor	= 0x200
    } 	ltmmConvert_Object;

typedef 
enum ltmmConvert_InterleavingMode
    {	ltmmConvert_Interleave_None	= 0,
	ltmmConvert_Interleave_Convert	= ( ltmmConvert_Interleave_None + 1 ) ,
	ltmmConvert_Interleave_Full	= ( ltmmConvert_Interleave_Convert + 1 ) ,
	ltmmConvert_Interleave_None_Buffered	= ( ltmmConvert_Interleave_Full + 1 ) 
    } 	ltmmConvert_InterleavingMode;

typedef 
enum ltmmConvert_TargetFormat
    {	ltmmConvert_TargetFormat_Avi	= 0,
	ltmmConvert_TargetFormat_Asf	= ( ltmmConvert_TargetFormat_Avi + 1 ) ,
	ltmmConvert_TargetFormat_WAVE	= ( ltmmConvert_TargetFormat_Asf + 1 ) ,
	ltmmConvert_TargetFormat_MPEG1Audio	= ( ltmmConvert_TargetFormat_WAVE + 1 ) ,
	ltmmConvert_TargetFormat_DICOM	= ( ltmmConvert_TargetFormat_MPEG1Audio + 1 ) ,
	ltmmConvert_TargetFormat_dvsd	= ( ltmmConvert_TargetFormat_DICOM + 1 ) ,
	ltmmConvert_TargetFormat_MP3	= ( ltmmConvert_TargetFormat_dvsd + 1 ) ,
	ltmmConvert_TargetFormat_dvsd_Avi	= ( ltmmConvert_TargetFormat_MP3 + 1 ) ,
	ltmmConvert_TargetFormat_Asf_Compressor_Mux	= ( ltmmConvert_TargetFormat_dvsd_Avi + 1 ) ,
	ltmmConvert_TargetFormat_Asf_Mux	= ( ltmmConvert_TargetFormat_Asf_Compressor_Mux + 1 ) ,
	ltmmConvert_TargetFormat_Still_Image	= ( ltmmConvert_TargetFormat_Asf_Mux + 1 ) ,
	ltmmConvert_TargetFormat_Stream	= ( ltmmConvert_TargetFormat_Still_Image + 1 ) ,
	ltmmConvert_TargetFormat_OGG	= ( ltmmConvert_TargetFormat_Stream + 1 ) ,
	ltmmConvert_TargetFormat_dvsd_OGG	= ( ltmmConvert_TargetFormat_OGG + 1 ) ,
	ltmmConvert_TargetFormat_MPEG1System	= ( ltmmConvert_TargetFormat_dvsd_OGG + 1 ) ,
	ltmmConvert_TargetFormat_MPEG2_PROGRAM	= ( ltmmConvert_TargetFormat_MPEG1System + 1 ) ,
	ltmmConvert_TargetFormat_MP3_LEAD	= ( ltmmConvert_TargetFormat_MPEG2_PROGRAM + 1 ) ,
	ltmmConvert_TargetFormat_DVD	= ( ltmmConvert_TargetFormat_MP3_LEAD + 1 ) ,
	ltmmConvert_TargetFormat_NET	= ( ltmmConvert_TargetFormat_DVD + 1 ) ,
	ltmmConvert_TargetFormat_MPEG2_DICOM	= ( ltmmConvert_TargetFormat_NET + 1 ) ,
	ltmmConvert_TargetFormat_ISO	= ( ltmmConvert_TargetFormat_MPEG2_DICOM + 1 ) ,
	ltmmConvert_TargetFormat_MP3_LAME	= ( ltmmConvert_TargetFormat_ISO + 1 ) ,
	ltmmConvert_TargetFormat_MP3_DEFAULT	= ( ltmmConvert_TargetFormat_MP3_LAME + 1 ) ,
	ltmmConvert_TargetFormat_MPEG2_TRANSPORT	= ( ltmmConvert_TargetFormat_MP3_DEFAULT + 1 ) ,
	ltmmConvert_TargetFormat_FLV	= ( ltmmConvert_TargetFormat_MPEG2_TRANSPORT + 1 ) ,
	ltmmConvert_TargetFormat_FLV_H263	= ( ltmmConvert_TargetFormat_FLV + 1 ) ,
	ltmmConvert_TargetFormat_FLV_H264	= ( ltmmConvert_TargetFormat_FLV_H263 + 1 ) ,
	ltmmConvert_TargetFormat_DVR_PROGRAM	= ( ltmmConvert_TargetFormat_FLV_H264 + 1 ) ,
	ltmmConvert_TargetFormat_DVR_TRANSPORT	= ( ltmmConvert_TargetFormat_DVR_PROGRAM + 1 ) ,
	ltmmConvert_TargetFormat_DVR	= ( ltmmConvert_TargetFormat_DVR_TRANSPORT + 1 ) 
    } 	ltmmConvert_TargetFormat;

typedef 
enum ltmmConvert_Notify
    {	ltmmConvert_Notify_Started	= 0,
	ltmmConvert_Notify_Complete	= ( ltmmConvert_Notify_Started + 1 ) ,
	ltmmConvert_Notify_ErrorAbort	= ( ltmmConvert_Notify_Complete + 1 ) ,
	ltmmConvert_Notify_UserAbort	= ( ltmmConvert_Notify_ErrorAbort + 1 ) ,
	ltmmConvert_Notify_Progress	= ( ltmmConvert_Notify_UserAbort + 1 ) ,
	ltmmConvert_Notify_MediaEvent	= ( ltmmConvert_Notify_Progress + 1 ) 
    } 	ltmmConvert_Notify;

typedef 
enum ltmmPlay_StillTap
    {	ltmmPlay_StillTap_None	= -1,
	ltmmPlay_StillTap_Source	= 0,
	ltmmPlay_StillTap_Processors	= 1
    } 	ltmmPlay_StillTap;

typedef 
enum ltmmPlay_Settings
    {	ltmmPlay_Settings_AudioProcessors	= 0x1,
	ltmmPlay_Settings_VideoProcessors	= 0x2,
	ltmmPlay_Settings_Processors	= 0xf,
	ltmmPlay_Settings_AudioCompressors	= 0x10,
	ltmmPlay_Settings_VideoCompressors	= 0x20,
	ltmmPlay_Settings_Compressors	= 0xf0,
	ltmmPlay_Settings_AudioDevices	= 0x100,
	ltmmPlay_Settings_VideoDevices	= 0x200,
	ltmmPlay_Settings_MidiDevices	= 0x400,
	ltmmPlay_Settings_Devices	= 0xf00,
	ltmmPlay_Settings_MiscControls	= 0x1000,
	ltmmPlay_Settings_Controls	= 0xf000,
	ltmmPlay_Settings_All	= 0xffffff,
	ltmmPlay_Settings_Rewind	= 0x1000000,
	ltmmPlay_Settings_Flags	= 0xff000000
    } 	ltmmPlay_Settings;

typedef 
enum ltmmPlay_State
    {	ltmmPlay_State_NotReady	= 0,
	ltmmPlay_State_Stopped	= ( ltmmPlay_State_NotReady + 1 ) ,
	ltmmPlay_State_Paused	= ( ltmmPlay_State_Stopped + 1 ) ,
	ltmmPlay_State_Running	= ( ltmmPlay_State_Paused + 1 ) 
    } 	ltmmPlay_State;

typedef 
enum ltmmPlay_Seeking
    {	ltmmPlay_Seeking_Forward	= 0x1,
	ltmmPlay_Seeking_Backward	= 0x2,
	ltmmPlay_Seeking_FrameForward	= 0x4,
	ltmmPlay_Seeking_FrameBackward	= 0x8
    } 	ltmmPlay_Seeking;

typedef 
enum ltmmPlay_Notify
    {	ltmmPlay_Notify_StateChanged	= 0,
	ltmmPlay_Notify_Error	= ( ltmmPlay_Notify_StateChanged + 1 ) ,
	ltmmPlay_Notify_TrackingPositionChanged	= ( ltmmPlay_Notify_Error + 1 ) ,
	ltmmPlay_Notify_TrackingSelectionChanged	= ( ltmmPlay_Notify_TrackingPositionChanged + 1 ) ,
	ltmmPlay_Notify_MediaEvent	= ( ltmmPlay_Notify_TrackingSelectionChanged + 1 ) 
    } 	ltmmPlay_Notify;

typedef 
enum ltmmPlay_Dlg
    {	ltmmPlay_Dlg_AudioProcessors	= 0,
	ltmmPlay_Dlg_VideoProcessors	= ( ltmmPlay_Dlg_AudioProcessors + 1 ) ,
	ltmmPlay_Dlg_VideoRenderer	= ( ltmmPlay_Dlg_VideoProcessors + 1 ) ,
	ltmmPlay_Dlg_AudioRenderer	= ( ltmmPlay_Dlg_VideoRenderer + 1 ) ,
	ltmmPlay_Dlg_Source	= ( ltmmPlay_Dlg_AudioRenderer + 1 ) ,
	ltmmPlay_Dlg_VideoDecompressor	= ( ltmmPlay_Dlg_Source + 1 ) ,
	ltmmPlay_Dlg_AudioDecompressor	= ( ltmmPlay_Dlg_VideoDecompressor + 1 ) ,
	ltmmPlay_Dlg_Splitter	= ( ltmmPlay_Dlg_AudioDecompressor + 1 ) ,
	ltmmPlay_Dlg_SelAudioProcessor	= 0x100,
	ltmmPlay_Dlg_SelVideoProcessor	= 0x200
    } 	ltmmPlay_Dlg;

typedef 
enum ltmmPlay_Object
    {	ltmmPlay_Object_FilterGraph	= 0,
	ltmmPlay_Object_SourceFilter	= ( ltmmPlay_Object_FilterGraph + 1 ) ,
	ltmmPlay_Object_VideoRenderer	= ( ltmmPlay_Object_SourceFilter + 1 ) ,
	ltmmPlay_Object_AudioRenderer	= ( ltmmPlay_Object_VideoRenderer + 1 ) ,
	ltmmPlay_Object_VideoDecompressor	= ( ltmmPlay_Object_AudioRenderer + 1 ) ,
	ltmmPlay_Object_AudioDecompressor	= ( ltmmPlay_Object_VideoDecompressor + 1 ) ,
	ltmmPlay_Object_Splitter	= ( ltmmPlay_Object_AudioDecompressor + 1 ) ,
	ltmmPlay_Object_SelAudioProcessor	= 0x100,
	ltmmPlay_Object_SelVideoProcessor	= 0x200
    } 	ltmmPlay_Object;

typedef 
enum ltmmPlay_Source
    {	ltmmPlay_Source_None	= 0,
	ltmmPlay_Source_File	= ( ltmmPlay_Source_None + 1 ) ,
	ltmmPlay_Source_HGlobal	= ( ltmmPlay_Source_File + 1 ) ,
	ltmmPlay_Source_Array	= ( ltmmPlay_Source_HGlobal + 1 ) ,
	ltmmPlay_Source_Object	= ( ltmmPlay_Source_Array + 1 ) ,
	ltmmPlay_Source_Stream	= ( ltmmPlay_Source_Object + 1 ) 
    } 	ltmmPlay_Source;

typedef 
enum ltmmPlay_Stream
    {	ltmmPlay_Stream_Audio	= 0x1,
	ltmmPlay_Stream_Video	= 0x2,
	ltmmPlay_Stream_CC	= 0x4,
	ltmmPlay_Stream_Midi	= 0x8,
	ltmmPlay_Stream_Other	= 0x10,
	ltmmPlay_Stream_KLV	= 0x20
    } 	ltmmPlay_Stream;

typedef 
enum ltmmPlay_StillFormat
    {	ltmmPlay_StillFormat_BMP	= 0,
	ltmmPlay_StillFormat_CMP	= ( ltmmPlay_StillFormat_BMP + 1 ) ,
	ltmmPlay_StillFormat_JPEG444	= ( ltmmPlay_StillFormat_CMP + 1 ) ,
	ltmmPlay_StillFormat_JPEG422	= ( ltmmPlay_StillFormat_JPEG444 + 1 ) ,
	ltmmPlay_StillFormat_JPEG411	= ( ltmmPlay_StillFormat_JPEG422 + 1 ) ,
	ltmmPlay_StillFormat_PSPTHM	= ( ltmmPlay_StillFormat_JPEG411 + 1 ) 
    } 	ltmmPlay_StillFormat;

typedef 
enum ltmmProcessor_Dlg
    {	ltmmProcessor_Dlg_Properties	= 0
    } 	ltmmProcessor_Dlg;

typedef 
enum ltmmVCRControl_DeviceType
    {	ltmmVCRControl_DeviceType_NotPresent	= 0,
	ltmmVCRControl_DeviceType_Unknown	= ( ltmmVCRControl_DeviceType_NotPresent + 1 ) ,
	ltmmVCRControl_DeviceType_Camera	= ( ltmmVCRControl_DeviceType_Unknown + 1 ) ,
	ltmmVCRControl_DeviceType_DVHS	= ( ltmmVCRControl_DeviceType_Camera + 1 ) ,
	ltmmVCRControl_DeviceType_VCR	= ( ltmmVCRControl_DeviceType_DVHS + 1 ) 
    } 	ltmmVCRControl_DeviceType;

typedef 
enum ltmmVCRControl_MediaType
    {	ltmmVCRControl_MediaType_NotPresent	= 0,
	ltmmVCRControl_MediaType_Unknown	= ( ltmmVCRControl_MediaType_NotPresent + 1 ) ,
	ltmmVCRControl_MediaType_VHS	= ( ltmmVCRControl_MediaType_Unknown + 1 ) ,
	ltmmVCRControl_MediaType_DVC	= ( ltmmVCRControl_MediaType_VHS + 1 ) 
    } 	ltmmVCRControl_MediaType;

typedef 
enum ltmmVCRControl_Mode
    {	ltmmVCRControl_Mode_Unknown	= 0,
	ltmmVCRControl_Mode_Play	= ( ltmmVCRControl_Mode_Unknown + 1 ) ,
	ltmmVCRControl_Mode_Stop	= ( ltmmVCRControl_Mode_Play + 1 ) ,
	ltmmVCRControl_Mode_Pause	= ( ltmmVCRControl_Mode_Stop + 1 ) ,
	ltmmVCRControl_Mode_FastForward	= ( ltmmVCRControl_Mode_Pause + 1 ) ,
	ltmmVCRControl_Mode_Rewind	= ( ltmmVCRControl_Mode_FastForward + 1 ) ,
	ltmmVCRControl_Mode_Record	= ( ltmmVCRControl_Mode_Rewind + 1 ) ,
	ltmmVCRControl_Mode_PauseRecording	= ( ltmmVCRControl_Mode_Record + 1 ) ,
	ltmmVCRControl_Mode_StepForward	= ( ltmmVCRControl_Mode_PauseRecording + 1 ) ,
	ltmmVCRControl_Mode_StepBackward	= ( ltmmVCRControl_Mode_StepForward + 1 ) ,
	ltmmVCRControl_Mode_FastestForward	= ( ltmmVCRControl_Mode_StepBackward + 1 ) ,
	ltmmVCRControl_Mode_SlowestForward	= ( ltmmVCRControl_Mode_FastestForward + 1 ) ,
	ltmmVCRControl_Mode_FastestReverse	= ( ltmmVCRControl_Mode_SlowestForward + 1 ) ,
	ltmmVCRControl_Mode_SlowestReverse	= ( ltmmVCRControl_Mode_FastestReverse + 1 ) 
    } 	ltmmVCRControl_Mode;

typedef 
enum ltmmTunerSubChannel
    {	ltmmTUNER_SUBCHAN_NO_TUNE	= -2,
	ltmmTUNER_SUBCHAN_DEFAULT	= -1
    } 	ltmmTunerSubChannel;

typedef 
enum ltmmTunerSignalStrength
    {	ltmmTUNER_HASNOSIGNALSTRENGTH	= -1,
	ltmmTUNER_NOSIGNAL	= 0,
	ltmmTUNER_SIGNALPRESENT	= 1
    } 	ltmmTunerSignalStrength;

typedef 
enum ltmmTunerModeType
    {	ltmmTUNER_MODE_DEFAULT	= 0,
	ltmmTUNER_MODE_TV	= 0x1,
	ltmmTUNER_MODE_FM_RADIO	= 0x2,
	ltmmTUNER_MODE_AM_RADIO	= 0x4,
	ltmmTUNER_MODE_DSS	= 0x8
    } 	ltmmTunerModeType;

typedef 
enum ltmmTunerInputType
    {	ltmmTunerInputCable	= 0,
	ltmmTunerInputAntenna	= 1
    } 	ltmmTunerInputType;

typedef 
enum ltmmProcessorType
    {	ltmmProcessorType_Internal_Video	= 0,
	ltmmProcessorType_Internal_Audio	= 1,
	ltmmProcessorType_External_Audio	= 2,
	ltmmProcessorType_External_Video	= 3,
	ltmmProcessorType_LEAD_Video	= 4,
	ltmmProcessorType_LEAD_Audio	= 5
    } 	ltmmProcessorType;

typedef 
enum ltmmDVDTitleSelectedState
    {	ltmmDVDTitle_Unselected	= 0,
	ltmmDVDTitle_Selected	= 1,
	ltmmDVDTitle_Partially_Selected	= 2
    } 	ltmmDVDTitleSelectedState;

typedef 
enum ltmmDVDSourceSelectedState
    {	ltmmDVDSource_Unselected	= 0,
	ltmmDVDSource_Selected	= 1,
	ltmmDVDSource_Main_Selected	= 2,
	ltmmDVDSource_Partially_Selected	= 3
    } 	ltmmDVDSourceSelectedState;


EXTERN_C const IID LIBID_LTMMLib;


#ifndef __ltmmFunctions_MODULE_DEFINED__
#define __ltmmFunctions_MODULE_DEFINED__


/* module ltmmFunctions */
/* [dllname][helpstring][uuid] */ 

/* [helpstring][entry] */ BSTR __stdcall ltmmGetErrorText( 
    /* [in] */ long errorcode);

#endif /* __ltmmFunctions_MODULE_DEFINED__ */


#ifndef __ltmmConstants_MODULE_DEFINED__
#define __ltmmConstants_MODULE_DEFINED__


/* module ltmmConstants */
/* [uuid][dllname] */ 

const LPSTR ltmmFORMAT_None	=	"{0F6417D6-C318-11D0-A43F-00A0C9223196}";

const LPSTR ltmmFORMAT_VideoInfo	=	"{05589F80-C356-11CE-BF01-00AA0055595A}";

const LPSTR ltmmFORMAT_VideoInfo2	=	"{F72A76A0-EB0A-11D0-ACE4-0000C0CC16BA}";

const LPSTR ltmmFORMAT_WaveFormatEx	=	"{05589F81-C356-11CE-BF01-00AA0055595A}";

const LPSTR ltmmFORMAT_MPEGVideo	=	"{05589F82-C356-11CE-BF01-00AA0055595A}";

const LPSTR ltmmFORMAT_MPEGStreams	=	"{05589F83-C356-11CE-BF01-00AA0055595A}";

const LPSTR ltmmFORMAT_DvInfo	=	"{05589F84-C356-11CE-BF01-00AA0055595A}";

const LPSTR ltmmMEDIATYPE_NULL	=	"{00000000-0000-0000-0000-000000000000}";

const LPSTR ltmmMEDIATYPE_Video	=	"{73646976-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIATYPE_Audio	=	"{73647561-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIATYPE_Text	=	"{73747874-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIATYPE_Midi	=	"{7364696D-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIATYPE_Stream	=	"{E436EB83-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIATYPE_Interleaved	=	"{73766169-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIATYPE_File	=	"{656C6966-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIATYPE_ScriptCommand	=	"{73636D64-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIATYPE_AUXLine21Data	=	"{670AEA80-3A82-11D0-B79B-00AA003767A7}";

const LPSTR ltmmMEDIATYPE_VBI	=	"{F72A76E1-EB0A-11D0-ACE4-0000C0CC16BA}";

const LPSTR ltmmMEDIATYPE_Timecode	=	"{0482DEE3-7817-11CF-8A03-00AA006ECB65}";

const LPSTR ltmmMEDIATYPE_LMRT	=	"{74726C6D-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIATYPE_URL_STREAM	=	"{74726C6D-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_NULL	=	"{00000000-0000-0000-0000-000000000000}";

const LPSTR ltmmMEDIASUBTYPE_CLPL	=	"{4C504C43-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_YUYV	=	"{56595559-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_IYUV	=	"{56555949-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_YVU9	=	"{39555659-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Y411	=	"{31313459-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Y41P	=	"{50313459-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_YUY2	=	"{32595559-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_YVYU	=	"{55595659-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_UYVY	=	"{59565955-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Y211	=	"{31313259-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_YV12	=	"{32313259-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_CLJR	=	"{524A4C43-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_IF09	=	"{39304649-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_CPLA	=	"{414C5043-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_MJPG	=	"{47504A4D-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_TVMJ	=	"{4A4D5654-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_WAKE	=	"{454B4157-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_CFCC	=	"{43434643-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_IJPG	=	"{47504A49-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Plum	=	"{6D756C50-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_DVCS	=	"{53435644-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_FASTDVSD	=	"{44535644-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_MDVF	=	"{4656444D-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_RGB1	=	"{E436EB78-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_RGB4	=	"{E436EB79-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_RGB8	=	"{E436EB7A-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_RGB565	=	"{E436EB7B-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_RGB555	=	"{E436EB7C-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_RGB24	=	"{E436EB7D-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_RGB32	=	"{E436EB7E-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_ARGB1555	=	"{297C55AF-E209-4CB3-B757-C76D6B9C88A8}";

const LPSTR ltmmMEDIASUBTYPE_ARGB4444	=	"{6E6415E6-5C24-425F-93CD-80102B3D1CCA}";

const LPSTR ltmmMEDIASUBTYPE_ARGB32	=	"{773C9AC0-3274-11D0-B724-00AA006C1A01}";

const LPSTR ltmmMEDIASUBTYPE_AYUV	=	"{56555941-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_AI44	=	"{34344941-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_RGB32_D3D_DX7_RT	=	"{32335237-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_RGB16_D3D_DX7_RT	=	"{36315237-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_ARGB32_D3D_DX7_RT	=	"{38384137-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_ARGB4444_D3D_DX7_RT	=	"{34344137-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_ARGB1555_D3D_DX7_RT	=	"{35314137-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Overlay	=	"{E436EB7F-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_MPEGPacket	=	"{E436EB80-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_MPEG1Payload	=	"{E436EB81-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_MPEG1AudioPayload	=	"{00000050-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_MPEG1SystemStream	=	"{E436EB82-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_MPEG1System	=	"{E436EB84-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_MPEG1VideoCD	=	"{E436EB85-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_MPEG1Video	=	"{E436EB86-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_MPEG1Audio	=	"{E436EB87-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_Avi	=	"{E436EB88-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_Asf	=	"{3DB80F90-9412-11D1-ADED-0000F8754B99}";

const LPSTR ltmmMEDIASUBTYPE_QTMovie	=	"{E436EB89-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_Rpza	=	"{617A7072-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Smc	=	"{20636D73-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Rle	=	"{20656C72-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Jpeg	=	"{6765706A-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_PCMAudio_Obsolete	=	"{E436EB8A-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_PCM	=	"{00000001-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_WAVE	=	"{E436EB8B-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_AU	=	"{E436EB8C-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_AIFF	=	"{E436EB8D-524F-11CE-9F53-0020AF0BA770}";

const LPSTR ltmmMEDIASUBTYPE_dvsd	=	"{64737664-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_dvhd	=	"{64687664-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_dvsl	=	"{6C737664-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Line21_BytePair	=	"{6E8D4A22-310C-11D0-B79A-00AA003767A7}";

const LPSTR ltmmMEDIASUBTYPE_Line21_GOPPacket	=	"{6E8D4A23-310C-11D0-B79A-00AA003767A7}";

const LPSTR ltmmMEDIASUBTYPE_Line21_VBIRawData	=	"{6E8D4A24-310C-11D0-B79A-00AA003767A7}";

const LPSTR ltmmMEDIASUBTYPE_TELETEXT	=	"{F72A76E3-EB0A-11D0-ACE4-0000C0CC16BA}";

const LPSTR ltmmMEDIASUBTYPE_DRM_Audio	=	"{00000009-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_IEEE_FLOAT	=	"{00000003-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_DOLBY_AC3_SPDIF	=	"{00000092-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_RAW_SPORT	=	"{00000240-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_SPDIF_TAG_241h	=	"{00000241-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_DssVideo	=	"{A0AF4F81-E163-11D0-BAD9-00609744111A}";

const LPSTR ltmmMEDIASUBTYPE_DssAudio	=	"{A0AF4F82-E163-11D0-BAD9-00609744111A}";

const LPSTR ltmmMEDIASUBTYPE_VPVideo	=	"{5A9B6A40-1A22-11D1-BAD9-00609744111A}";

const LPSTR ltmmMEDIASUBTYPE_VPVBI	=	"{5A9B6A41-1A22-11D1-BAD9-00609744111A}";

const LPSTR ltmmMEDIASUBTYPE_LEAD	=	"{4441454C-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_L263	=	"{3336324C-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_LCMW	=	"{574D434C-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_LCW2	=	"{3257434C-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_LJ2K	=	"{4B324A4C-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_dmb1	=	"{31626D64-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_Ljpg	=	"{67706A4C-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_LGRY	=	"{5952474C-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_JPEG_	=	"{4745404A-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmMEDIASUBTYPE_LCMA	=	"{0000434C-0000-0010-8000-00AA00389B71}";

const LPSTR ltmmWMMUTEX_Bitrate	=	"{D6E22A01-35DA-11D1-9034-00A0C90349BE}";

const LPSTR ltmmWMProfile_V40_DialUpMBR	=	"{FD7F47F1-72A6-45A4-80F0-3AECEFC32C07}";

const LPSTR ltmmWMProfile_V40_IntranetMBR	=	"{82CD3321-A94A-4FFC-9C2B-092C10CA16E7}";

const LPSTR ltmmWMProfile_V40_2856100MBR	=	"{5A1C2206-DC5E-4186-BEB2-4C5A994B132E}";

const LPSTR ltmmWMProfile_V40_6VoiceAudio	=	"{D508978A-11A0-4D15-B0DA-ACDC99D4F890}";

const LPSTR ltmmWMProfile_V40_16AMRadio	=	"{0F4BE81F-D57D-41E1-B2E3-2FAD986BFEC2}";

const LPSTR ltmmWMProfile_V40_288FMRadioMono	=	"{7FA57FC8-6EA4-4645-8ABF-B6E5A8F814A1}";

const LPSTR ltmmWMProfile_V40_288FMRadioStereo	=	"{22FCF466-AA40-431F-A289-06D0EA1A1E40}";

const LPSTR ltmmWMProfile_V40_56DialUpStereo	=	"{E8026F87-E905-4594-A3C7-00D00041D1D9}";

const LPSTR ltmmWMProfile_V40_64Audio	=	"{4820B3F7-CBEC-41DC-9391-78598714C8E5}";

const LPSTR ltmmWMProfile_V40_96Audio	=	"{0EFA0EE3-9E64-41E2-837F-3C0038F327BA}";

const LPSTR ltmmWMProfile_V40_128Audio	=	"{93DDBE12-13DC-4E32-A35E-40378E34279A}";

const LPSTR ltmmWMProfile_V40_288VideoVoice	=	"{BB2BC274-0EB6-4DA9-B550-ECF7F2B9948F}";

const LPSTR ltmmWMProfile_V40_288VideoAudio	=	"{AC617F2D-6CBE-4E84-8E9A-CE151A12A354}";

const LPSTR ltmmWMProfile_V40_288VideoWebServer	=	"{ABF2F00D-D555-4815-94CE-8275F3A70BFE}";

const LPSTR ltmmWMProfile_V40_56DialUpVideo	=	"{E21713BB-652F-4DAB-99DE-71E04400270F}";

const LPSTR ltmmWMProfile_V40_56DialUpVideoWebServer	=	"{B756FF10-520F-4749-A399-B780E2FC9250}";

const LPSTR ltmmWMProfile_V40_100Video	=	"{8F99DDD8-6684-456B-A0A3-33E1316895F0}";

const LPSTR ltmmWMProfile_V40_250Video	=	"{541841C3-9339-4F7B-9A22-B11540894E42}";

const LPSTR ltmmWMProfile_V40_512Video	=	"{70440E6D-C4EF-4F84-8CD0-D5C28686E784}";

const LPSTR ltmmWMProfile_V40_1MBVideo	=	"{B4482A4C-CC17-4B07-A94E-9818D5E0F13F}";

const LPSTR ltmmWMProfile_V40_3MBVideo	=	"{55374AC0-309B-4396-B88F-E6E292113F28}";

const LPSTR ltmmWMProfile_V70_DialUpMBR	=	"{5B16E74B-4068-45B5-B80E-7BF8C80D2C2F}";

const LPSTR ltmmWMProfile_V70_IntranetMBR	=	"{045880DC-34B6-4CA9-A326-73557ED143F3}";

const LPSTR ltmmWMProfile_V70_2856100MBR	=	"{07DF7A25-3FE2-4A5B-8B1E-348B0721CA70}";

const LPSTR ltmmWMProfile_V70_288VideoVoice	=	"{B952F38E-7DBC-4533-A9CA-B00B1C6E9800}";

const LPSTR ltmmWMProfile_V70_288VideoAudio	=	"{58BBA0EE-896A-4948-9953-85B736F83947}";

const LPSTR ltmmWMProfile_V70_288VideoWebServer	=	"{70A32E2B-E2DF-4EBD-9105-D9CA194A2D50}";

const LPSTR ltmmWMProfile_V70_56VideoWebServer	=	"{DEF99E40-57BC-4AB3-B2D1-B6E3CAF64257}";

const LPSTR ltmmWMProfile_V70_64VideoISDN	=	"{C2B7A7E9-7B8E-4992-A1A1-068217A3B311}";

const LPSTR ltmmWMProfile_V70_100Video	=	"{D9F3C932-5EA9-4C6D-89B4-2686E515426E}";

const LPSTR ltmmWMProfile_V70_256Vide	=	"{AFE69B3A-403F-4A1B-8007-0E21CFB3DF84}";

const LPSTR ltmmWMProfile_V70_384Vide	=	"{F3D45FBB-8782-44DF-97C6-8678E2F9B13D}";

const LPSTR ltmmWMProfile_V70_768Video	=	"{0326EBB6-F76E-4964-B0DB-E729978D35EE}";

const LPSTR ltmmWMProfile_V70_1500Video	=	"{0B89164A-5490-4686-9E37-5A80884E5146}";

const LPSTR ltmmWMProfile_V70_2000Video	=	"{AA980124-BF10-4E4F-9AFD-4329A7395CFF}";

const LPSTR ltmmWMProfile_V70_700FilmContentVideo	=	"{7A747920-2449-4D76-99CB-FDB0C90484D4}";

const LPSTR ltmmWMProfile_V70_1500FilmContentVideo	=	"{F6A5F6DF-EE3F-434C-A433-523CE55F516B}";

const LPSTR ltmmWMProfile_V70_6VoiceAudio	=	"{EABA9FBF-B64F-49B3-AA0C-73FBDD150AD0}";

const LPSTR ltmmWMProfile_V70_288FMRadioMono	=	"{C012A833-A03B-44A5-96DC-ED95CC65582D}";

const LPSTR ltmmWMProfile_V70_288FMRadioStereo	=	"{E96D67C9-1A39-4DC4-B900-B1184DC83620}";

const LPSTR ltmmWMProfile_V70_56DialUpStereo	=	"{674EE767-0949-4FAC-875E-F4C9C292013B}";

const LPSTR ltmmWMProfile_V70_64AudioISDN	=	"{91DEA458-9D60-4212-9C59-D40919C939E4}";

const LPSTR ltmmWMProfile_V70_64Audio	=	"{B29CFFC6-F131-41DB-B5E8-99D8B0B945F4}";

const LPSTR ltmmWMProfile_V70_96Audio	=	"{A9D4B819-16CC-4A59-9F37-693DBB0302D6}";

const LPSTR ltmmWMProfile_V70_128Audio	=	"{C64CF5DA-DF45-40D3-8027-DE698D68DC66}";

const LPSTR ltmmWMProfile_V70_225VideoPDA	=	"{F55EA573-4C02-42B5-9026-A8260C438A9F}";

const LPSTR ltmmWMProfile_V70_150VideoPDA	=	"{0F472967-E3C6-4797-9694-F0304C5E2F17}";

const LPSTR ltmmWMProfile_V80_255VideoPDA	=	"{FEEDBCDF-3FAC-4C93-AC0D-47941EC72C0B}";

const LPSTR ltmmWMProfile_V80_150VideoPDA	=	"{AEE16DFA-2C14-4A2F-AD3F-A3034031784F}";

const LPSTR ltmmWMProfile_V80_28856VideoMBR	=	"{D66920C4-C21F-4EC8-A0B4-95CF2BD57FC4}";

const LPSTR ltmmWMProfile_V80_100768VideoMBR	=	"{5BDB5A0E-979E-47D3-9596-73B386392A55}";

const LPSTR ltmmWMProfile_V80_288100VideoMBR	=	"{D8722C69-2419-4B36-B4E0-6E17B60564E5}";

const LPSTR ltmmWMProfile_V80_288Video	=	"{3DF678D9-1352-4186-BBF8-74F0C19B6AE2}";

const LPSTR ltmmWMProfile_V80_56Video	=	"{254E8A96-2612-405C-8039-F0BF725CED7D}";

const LPSTR ltmmWMProfile_V80_100Video	=	"{A2E300B4-C2D4-4FC0-B5DD-ECBD948DC0DF}";

const LPSTR ltmmWMProfile_V80_256Video	=	"{BBC75500-33D2-4466-B86B-122B201CC9AE}";

const LPSTR ltmmWMProfile_V80_384Video	=	"{29B00C2B-09A9-48BD-AD09-CDAE117D1DA7}";

const LPSTR ltmmWMProfile_V80_768Video	=	"{74D01102-E71A-4820-8F0D-13D2EC1E4872}";

const LPSTR ltmmWMProfile_V80_700NTSCVideo	=	"{C8C2985F-E5D9-4538-9E23-9B21BF78F745}";

const LPSTR ltmmWMProfile_V80_1400NTSCVideo	=	"{931D1BEE-617A-4BCD-9905-CCD0786683EE}";

const LPSTR ltmmWMProfile_V80_384PALVideo	=	"{9227C692-AE62-4F72-A7EA-736062D0E21E}";

const LPSTR ltmmWMProfile_V80_700PALVideo	=	"{EC298949-639B-45E2-96FD-4AB32D5919C2}";

const LPSTR ltmmWMProfile_V80_288MonoAudio	=	"{7EA3126D-E1BA-4716-89AF-F65CEE0C0C67}";

const LPSTR ltmmWMProfile_V80_288StereoAudio	=	"{7E4CAB5C-35DC-45BB-A7C0-19B28070D0CC}";

const LPSTR ltmmWMProfile_V80_32StereoAudio	=	"{60907F9F-B352-47E5-B210-0EF1F47E9F9D}";

const LPSTR ltmmWMProfile_V80_48StereoAudio	=	"{5EE06BE5-492B-480A-8A8F-12F373ECF9D4}";

const LPSTR ltmmWMProfile_V80_64StereoAudio	=	"{09BB5BC4-3176-457F-8DD6-3CD919123E2D}";

const LPSTR ltmmWMProfile_V80_96StereoAudio	=	"{1FC81930-61F2-436F-9D33-349F2A1C0F10}";

const LPSTR ltmmWMProfile_V80_128StereoAudio	=	"{407B9450-8BDC-4EE5-88B8-6F527BD941F2}";

const LPSTR ltmmWMProfile_V80_288VideoOnly	=	"{8C45B4C7-4AEB-4F78-A5EC-88420B9DADEF}";

const LPSTR ltmmWMProfile_V80_56VideoOnly	=	"{6E2A6955-81DF-4943-BA50-68A986A708F6}";

const LPSTR ltmmWMProfile_V80_FAIRVBRVideo	=	"{3510A862-5850-4886-835F-D78EC6A64042}";

const LPSTR ltmmWMProfile_V80_HIGHVBRVideo	=	"{0F10D9D3-3B04-4FB0-A3D3-88D4AC854ACC}";

const LPSTR ltmmWMProfile_V80_BESTVBRVideo	=	"{048439BA-309C-440E-9CB4-3DCCA3756423}";

const LPSTR ltmmFilter_MPEG2_Splitter	=	"@device:sw:{083863F1-70DE-11D0-BD40-00A0C911CE86}\{3AE86B20-7BE8-11D1-ABE6-00A0C905F375}";

const LPSTR ltmmFilter_MPEG2_Demux	=	"@device:sw:{083863F1-70DE-11D0-BD40-00A0C911CE86}\{AFB6C280-2C41-11D3-8A60-0000F81E0E4A}";

#endif /* __ltmmConstants_MODULE_DEFINED__ */

#ifndef __IltmmDVDSubpictureStream_INTERFACE_DEFINED__
#define __IltmmDVDSubpictureStream_INTERFACE_DEFINED__

/* interface IltmmDVDSubpictureStream */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDVDSubpictureStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610AE-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDVDSubpictureStream : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CodingMode( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LanguageExtension( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmDVDSubpictureStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDVDSubpictureStream * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDVDSubpictureStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDVDSubpictureStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDVDSubpictureStream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDVDSubpictureStream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDVDSubpictureStream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDVDSubpictureStream * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmDVDSubpictureStream * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmDVDSubpictureStream * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IltmmDVDSubpictureStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CodingMode )( 
            IltmmDVDSubpictureStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            IltmmDVDSubpictureStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageExtension )( 
            IltmmDVDSubpictureStream * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmDVDSubpictureStreamVtbl;

    interface IltmmDVDSubpictureStream
    {
        CONST_VTBL struct IltmmDVDSubpictureStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDVDSubpictureStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDVDSubpictureStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDVDSubpictureStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDVDSubpictureStream_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDVDSubpictureStream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDVDSubpictureStream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDVDSubpictureStream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmDVDSubpictureStream_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmDVDSubpictureStream_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmDVDSubpictureStream_get_Type(This,pVal)	\
    ( (This)->lpVtbl -> get_Type(This,pVal) ) 

#define IltmmDVDSubpictureStream_get_CodingMode(This,pVal)	\
    ( (This)->lpVtbl -> get_CodingMode(This,pVal) ) 

#define IltmmDVDSubpictureStream_get_Language(This,pVal)	\
    ( (This)->lpVtbl -> get_Language(This,pVal) ) 

#define IltmmDVDSubpictureStream_get_LanguageExtension(This,pVal)	\
    ( (This)->lpVtbl -> get_LanguageExtension(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDVDSubpictureStream_INTERFACE_DEFINED__ */


#ifndef __IltmmDVDAudioStream_INTERFACE_DEFINED__
#define __IltmmDVDAudioStream_INTERFACE_DEFINED__

/* interface IltmmDVDAudioStream */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDVDAudioStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610AC-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDVDAudioStream : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AppMode( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AppModeData( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LanguageExtension( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Frequency( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Quantization( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Channels( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmDVDAudioStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDVDAudioStream * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDVDAudioStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDVDAudioStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDVDAudioStream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDVDAudioStream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDVDAudioStream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDVDAudioStream * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmDVDAudioStream * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppMode )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppModeData )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioFormat )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageExtension )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Frequency )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Quantization )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Channels )( 
            IltmmDVDAudioStream * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmDVDAudioStreamVtbl;

    interface IltmmDVDAudioStream
    {
        CONST_VTBL struct IltmmDVDAudioStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDVDAudioStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDVDAudioStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDVDAudioStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDVDAudioStream_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDVDAudioStream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDVDAudioStream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDVDAudioStream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmDVDAudioStream_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmDVDAudioStream_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmDVDAudioStream_get_AppMode(This,pVal)	\
    ( (This)->lpVtbl -> get_AppMode(This,pVal) ) 

#define IltmmDVDAudioStream_get_AppModeData(This,pVal)	\
    ( (This)->lpVtbl -> get_AppModeData(This,pVal) ) 

#define IltmmDVDAudioStream_get_AudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioFormat(This,pVal) ) 

#define IltmmDVDAudioStream_get_Language(This,pVal)	\
    ( (This)->lpVtbl -> get_Language(This,pVal) ) 

#define IltmmDVDAudioStream_get_LanguageExtension(This,pVal)	\
    ( (This)->lpVtbl -> get_LanguageExtension(This,pVal) ) 

#define IltmmDVDAudioStream_get_Frequency(This,pVal)	\
    ( (This)->lpVtbl -> get_Frequency(This,pVal) ) 

#define IltmmDVDAudioStream_get_Quantization(This,pVal)	\
    ( (This)->lpVtbl -> get_Quantization(This,pVal) ) 

#define IltmmDVDAudioStream_get_Channels(This,pVal)	\
    ( (This)->lpVtbl -> get_Channels(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDVDAudioStream_INTERFACE_DEFINED__ */


#ifndef __IltmmDVDChapter_INTERFACE_DEFINED__
#define __IltmmDVDChapter_INTERFACE_DEFINED__

/* interface IltmmDVDChapter */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDVDChapter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610AA-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDVDChapter : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmDVDChapterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDVDChapter * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDVDChapter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDVDChapter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDVDChapter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDVDChapter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDVDChapter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDVDChapter * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmDVDChapter * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmDVDChapter * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmDVDChapter * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmDVDChapterVtbl;

    interface IltmmDVDChapter
    {
        CONST_VTBL struct IltmmDVDChapterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDVDChapter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDVDChapter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDVDChapter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDVDChapter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDVDChapter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDVDChapter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDVDChapter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmDVDChapter_get_Duration(This,pVal)	\
    ( (This)->lpVtbl -> get_Duration(This,pVal) ) 

#define IltmmDVDChapter_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmDVDChapter_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDVDChapter_INTERFACE_DEFINED__ */


#ifndef __IltmmDVDTitle_INTERFACE_DEFINED__
#define __IltmmDVDTitle_INTERFACE_DEFINED__

/* interface IltmmDVDTitle */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDVDTitle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610A8-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDVDTitle : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TotalDuration( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ChapterCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetChapter( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDVDChapter **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedDuration( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioStreamCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAudioStream( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDVDAudioStream **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubpictureStreamCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubpictureStream( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDVDSubpictureStream **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedAudioStream( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectedAudioStream( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedSubpictureStream( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectedSubpictureStream( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PanscanPermitted( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LetterboxPermitted( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AspectX( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AspectY( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FrameRate( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FrameHeight( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Compression( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Line21Field1InGOP( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Line21Field2InGOP( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceResolutionX( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceResolutionY( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IsSourceLetterboxed( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IsFilmMode( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmDVDTitleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDVDTitle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDVDTitle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDVDTitle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDVDTitle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDVDTitle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDVDTitle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDVDTitle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TotalDuration )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChapterCount )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetChapter )( 
            IltmmDVDTitle * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDVDChapter **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmDVDTitle * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedDuration )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioStreamCount )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAudioStream )( 
            IltmmDVDTitle * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDVDAudioStream **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubpictureStreamCount )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubpictureStream )( 
            IltmmDVDTitle * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDVDSubpictureStream **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioStream )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedAudioStream )( 
            IltmmDVDTitle * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedSubpictureStream )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectedSubpictureStream )( 
            IltmmDVDTitle * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PanscanPermitted )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LetterboxPermitted )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AspectX )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AspectY )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameHeight )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Compression )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Line21Field1InGOP )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Line21Field2InGOP )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceResolutionX )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceResolutionY )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSourceLetterboxed )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFilmMode )( 
            IltmmDVDTitle * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmDVDTitleVtbl;

    interface IltmmDVDTitle
    {
        CONST_VTBL struct IltmmDVDTitleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDVDTitle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDVDTitle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDVDTitle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDVDTitle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDVDTitle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDVDTitle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDVDTitle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmDVDTitle_get_TotalDuration(This,pVal)	\
    ( (This)->lpVtbl -> get_TotalDuration(This,pVal) ) 

#define IltmmDVDTitle_get_ChapterCount(This,pVal)	\
    ( (This)->lpVtbl -> get_ChapterCount(This,pVal) ) 

#define IltmmDVDTitle_GetChapter(This,Index,pVal)	\
    ( (This)->lpVtbl -> GetChapter(This,Index,pVal) ) 

#define IltmmDVDTitle_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmDVDTitle_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmDVDTitle_get_SelectedDuration(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedDuration(This,pVal) ) 

#define IltmmDVDTitle_get_AudioStreamCount(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioStreamCount(This,pVal) ) 

#define IltmmDVDTitle_GetAudioStream(This,Index,pVal)	\
    ( (This)->lpVtbl -> GetAudioStream(This,Index,pVal) ) 

#define IltmmDVDTitle_get_SubpictureStreamCount(This,pVal)	\
    ( (This)->lpVtbl -> get_SubpictureStreamCount(This,pVal) ) 

#define IltmmDVDTitle_GetSubpictureStream(This,Index,pVal)	\
    ( (This)->lpVtbl -> GetSubpictureStream(This,Index,pVal) ) 

#define IltmmDVDTitle_get_SelectedAudioStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioStream(This,pVal) ) 

#define IltmmDVDTitle_put_SelectedAudioStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SelectedAudioStream(This,newVal) ) 

#define IltmmDVDTitle_get_SelectedSubpictureStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedSubpictureStream(This,pVal) ) 

#define IltmmDVDTitle_put_SelectedSubpictureStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SelectedSubpictureStream(This,newVal) ) 

#define IltmmDVDTitle_get_PanscanPermitted(This,pVal)	\
    ( (This)->lpVtbl -> get_PanscanPermitted(This,pVal) ) 

#define IltmmDVDTitle_get_LetterboxPermitted(This,pVal)	\
    ( (This)->lpVtbl -> get_LetterboxPermitted(This,pVal) ) 

#define IltmmDVDTitle_get_AspectX(This,pVal)	\
    ( (This)->lpVtbl -> get_AspectX(This,pVal) ) 

#define IltmmDVDTitle_get_AspectY(This,pVal)	\
    ( (This)->lpVtbl -> get_AspectY(This,pVal) ) 

#define IltmmDVDTitle_get_FrameRate(This,pVal)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pVal) ) 

#define IltmmDVDTitle_get_FrameHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_FrameHeight(This,pVal) ) 

#define IltmmDVDTitle_get_Compression(This,pVal)	\
    ( (This)->lpVtbl -> get_Compression(This,pVal) ) 

#define IltmmDVDTitle_get_Line21Field1InGOP(This,pVal)	\
    ( (This)->lpVtbl -> get_Line21Field1InGOP(This,pVal) ) 

#define IltmmDVDTitle_get_Line21Field2InGOP(This,pVal)	\
    ( (This)->lpVtbl -> get_Line21Field2InGOP(This,pVal) ) 

#define IltmmDVDTitle_get_SourceResolutionX(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceResolutionX(This,pVal) ) 

#define IltmmDVDTitle_get_SourceResolutionY(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceResolutionY(This,pVal) ) 

#define IltmmDVDTitle_get_IsSourceLetterboxed(This,pVal)	\
    ( (This)->lpVtbl -> get_IsSourceLetterboxed(This,pVal) ) 

#define IltmmDVDTitle_get_IsFilmMode(This,pVal)	\
    ( (This)->lpVtbl -> get_IsFilmMode(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDVDTitle_INTERFACE_DEFINED__ */


#ifndef __IltmmDVDSource_INTERFACE_DEFINED__
#define __IltmmDVDSource_INTERFACE_DEFINED__

/* interface IltmmDVDSource */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDVDSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610A6-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDVDSource : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TitleCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetTitle( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDVDTitle **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TotalDuration( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedDuration( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PlayList( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PlayList( 
            /* [in] */ BSTR newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmDVDSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDVDSource * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDVDSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDVDSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDVDSource * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDVDSource * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDVDSource * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDVDSource * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TitleCount )( 
            IltmmDVDSource * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetTitle )( 
            IltmmDVDSource * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDVDTitle **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TotalDuration )( 
            IltmmDVDSource * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedDuration )( 
            IltmmDVDSource * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmDVDSource * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmDVDSource * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayList )( 
            IltmmDVDSource * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayList )( 
            IltmmDVDSource * This,
            /* [in] */ BSTR newVal);
        
        END_INTERFACE
    } IltmmDVDSourceVtbl;

    interface IltmmDVDSource
    {
        CONST_VTBL struct IltmmDVDSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDVDSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDVDSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDVDSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDVDSource_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDVDSource_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDVDSource_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDVDSource_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmDVDSource_get_TitleCount(This,pVal)	\
    ( (This)->lpVtbl -> get_TitleCount(This,pVal) ) 

#define IltmmDVDSource_GetTitle(This,Index,pVal)	\
    ( (This)->lpVtbl -> GetTitle(This,Index,pVal) ) 

#define IltmmDVDSource_get_TotalDuration(This,pVal)	\
    ( (This)->lpVtbl -> get_TotalDuration(This,pVal) ) 

#define IltmmDVDSource_get_SelectedDuration(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedDuration(This,pVal) ) 

#define IltmmDVDSource_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmDVDSource_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmDVDSource_get_PlayList(This,pVal)	\
    ( (This)->lpVtbl -> get_PlayList(This,pVal) ) 

#define IltmmDVDSource_put_PlayList(This,newVal)	\
    ( (This)->lpVtbl -> put_PlayList(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDVDSource_INTERFACE_DEFINED__ */


#ifndef __IltmmDVDPlaylistParser_INTERFACE_DEFINED__
#define __IltmmDVDPlaylistParser_INTERFACE_DEFINED__

/* interface IltmmDVDPlaylistParser */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDVDPlaylistParser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B4-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDVDPlaylistParser : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IltmmDVDPlaylistParserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDVDPlaylistParser * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDVDPlaylistParser * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDVDPlaylistParser * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDVDPlaylistParser * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDVDPlaylistParser * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDVDPlaylistParser * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDVDPlaylistParser * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IltmmDVDPlaylistParserVtbl;

    interface IltmmDVDPlaylistParser
    {
        CONST_VTBL struct IltmmDVDPlaylistParserVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDVDPlaylistParser_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDVDPlaylistParser_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDVDPlaylistParser_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDVDPlaylistParser_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDVDPlaylistParser_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDVDPlaylistParser_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDVDPlaylistParser_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDVDPlaylistParser_INTERFACE_DEFINED__ */


#ifndef __IltmmTVTuner_INTERFACE_DEFINED__
#define __IltmmTVTuner_INTERFACE_DEFINED__

/* interface IltmmTVTuner */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTVTuner;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161058-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTVTuner : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetChannel( 
            /* [in] */ long Channel,
            /* [in] */ long VideoSubChannel,
            /* [in] */ long AudioSubChannel) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Channel( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoSubChannel( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioSubChannel( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ChannelMin( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ChannelMax( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CountryCode( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CountryCode( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TuningSpace( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TuningSpace( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Logon( 
            /* [in] */ long hCurrentUser) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Logout( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SignalPresent( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Mode( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AvailableModes( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AvailableTVFormats( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TVFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AutoTune( 
            /* [in] */ long Channel,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StoreAutoTune( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_NumInputConnections( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetInputType( 
            /* [in] */ long Index,
            /* [in] */ long InputType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetInputType( 
            /* [in] */ long Index,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConnectInput( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ConnectInput( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoFrequency( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioFrequency( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmTVTunerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTVTuner * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTVTuner * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTVTuner * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTVTuner * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTVTuner * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTVTuner * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTVTuner * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetChannel )( 
            IltmmTVTuner * This,
            /* [in] */ long Channel,
            /* [in] */ long VideoSubChannel,
            /* [in] */ long AudioSubChannel);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Channel )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoSubChannel )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioSubChannel )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelMin )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelMax )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CountryCode )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CountryCode )( 
            IltmmTVTuner * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TuningSpace )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TuningSpace )( 
            IltmmTVTuner * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Logon )( 
            IltmmTVTuner * This,
            /* [in] */ long hCurrentUser);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Logout )( 
            IltmmTVTuner * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SignalPresent )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mode )( 
            IltmmTVTuner * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AvailableModes )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AvailableTVFormats )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVFormat )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AutoTune )( 
            IltmmTVTuner * This,
            /* [in] */ long Channel,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StoreAutoTune )( 
            IltmmTVTuner * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumInputConnections )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetInputType )( 
            IltmmTVTuner * This,
            /* [in] */ long Index,
            /* [in] */ long InputType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetInputType )( 
            IltmmTVTuner * This,
            /* [in] */ long Index,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectInput )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConnectInput )( 
            IltmmTVTuner * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoFrequency )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioFrequency )( 
            IltmmTVTuner * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmTVTunerVtbl;

    interface IltmmTVTuner
    {
        CONST_VTBL struct IltmmTVTunerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTVTuner_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTVTuner_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTVTuner_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTVTuner_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTVTuner_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTVTuner_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTVTuner_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTVTuner_SetChannel(This,Channel,VideoSubChannel,AudioSubChannel)	\
    ( (This)->lpVtbl -> SetChannel(This,Channel,VideoSubChannel,AudioSubChannel) ) 

#define IltmmTVTuner_get_Channel(This,pVal)	\
    ( (This)->lpVtbl -> get_Channel(This,pVal) ) 

#define IltmmTVTuner_get_VideoSubChannel(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoSubChannel(This,pVal) ) 

#define IltmmTVTuner_get_AudioSubChannel(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioSubChannel(This,pVal) ) 

#define IltmmTVTuner_get_ChannelMin(This,pVal)	\
    ( (This)->lpVtbl -> get_ChannelMin(This,pVal) ) 

#define IltmmTVTuner_get_ChannelMax(This,pVal)	\
    ( (This)->lpVtbl -> get_ChannelMax(This,pVal) ) 

#define IltmmTVTuner_get_CountryCode(This,pVal)	\
    ( (This)->lpVtbl -> get_CountryCode(This,pVal) ) 

#define IltmmTVTuner_put_CountryCode(This,newVal)	\
    ( (This)->lpVtbl -> put_CountryCode(This,newVal) ) 

#define IltmmTVTuner_get_TuningSpace(This,pVal)	\
    ( (This)->lpVtbl -> get_TuningSpace(This,pVal) ) 

#define IltmmTVTuner_put_TuningSpace(This,newVal)	\
    ( (This)->lpVtbl -> put_TuningSpace(This,newVal) ) 

#define IltmmTVTuner_Logon(This,hCurrentUser)	\
    ( (This)->lpVtbl -> Logon(This,hCurrentUser) ) 

#define IltmmTVTuner_Logout(This)	\
    ( (This)->lpVtbl -> Logout(This) ) 

#define IltmmTVTuner_get_SignalPresent(This,pVal)	\
    ( (This)->lpVtbl -> get_SignalPresent(This,pVal) ) 

#define IltmmTVTuner_get_Mode(This,pVal)	\
    ( (This)->lpVtbl -> get_Mode(This,pVal) ) 

#define IltmmTVTuner_put_Mode(This,newVal)	\
    ( (This)->lpVtbl -> put_Mode(This,newVal) ) 

#define IltmmTVTuner_get_AvailableModes(This,pVal)	\
    ( (This)->lpVtbl -> get_AvailableModes(This,pVal) ) 

#define IltmmTVTuner_get_AvailableTVFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AvailableTVFormats(This,pVal) ) 

#define IltmmTVTuner_get_TVFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TVFormat(This,pVal) ) 

#define IltmmTVTuner_AutoTune(This,Channel,pVal)	\
    ( (This)->lpVtbl -> AutoTune(This,Channel,pVal) ) 

#define IltmmTVTuner_StoreAutoTune(This)	\
    ( (This)->lpVtbl -> StoreAutoTune(This) ) 

#define IltmmTVTuner_get_NumInputConnections(This,pVal)	\
    ( (This)->lpVtbl -> get_NumInputConnections(This,pVal) ) 

#define IltmmTVTuner_SetInputType(This,Index,InputType)	\
    ( (This)->lpVtbl -> SetInputType(This,Index,InputType) ) 

#define IltmmTVTuner_GetInputType(This,Index,pVal)	\
    ( (This)->lpVtbl -> GetInputType(This,Index,pVal) ) 

#define IltmmTVTuner_get_ConnectInput(This,pVal)	\
    ( (This)->lpVtbl -> get_ConnectInput(This,pVal) ) 

#define IltmmTVTuner_put_ConnectInput(This,newVal)	\
    ( (This)->lpVtbl -> put_ConnectInput(This,newVal) ) 

#define IltmmTVTuner_get_VideoFrequency(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoFrequency(This,pVal) ) 

#define IltmmTVTuner_get_AudioFrequency(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioFrequency(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTVTuner_INTERFACE_DEFINED__ */


#ifndef __IltmmAnalogVideoDecoder_INTERFACE_DEFINED__
#define __IltmmAnalogVideoDecoder_INTERFACE_DEFINED__

/* interface IltmmAnalogVideoDecoder */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmAnalogVideoDecoder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016108C-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmAnalogVideoDecoder : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AvailableTVFormats( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TVFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TVFormat( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalLocked( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VCRHorizontalLocking( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_VCRHorizontalLocking( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_NumberOfLines( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_OutputEnable( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_OutputEnable( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmAnalogVideoDecoderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmAnalogVideoDecoder * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmAnalogVideoDecoder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmAnalogVideoDecoder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmAnalogVideoDecoder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmAnalogVideoDecoder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmAnalogVideoDecoder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmAnalogVideoDecoder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AvailableTVFormats )( 
            IltmmAnalogVideoDecoder * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVFormat )( 
            IltmmAnalogVideoDecoder * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TVFormat )( 
            IltmmAnalogVideoDecoder * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalLocked )( 
            IltmmAnalogVideoDecoder * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VCRHorizontalLocking )( 
            IltmmAnalogVideoDecoder * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VCRHorizontalLocking )( 
            IltmmAnalogVideoDecoder * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumberOfLines )( 
            IltmmAnalogVideoDecoder * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OutputEnable )( 
            IltmmAnalogVideoDecoder * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OutputEnable )( 
            IltmmAnalogVideoDecoder * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmAnalogVideoDecoderVtbl;

    interface IltmmAnalogVideoDecoder
    {
        CONST_VTBL struct IltmmAnalogVideoDecoderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmAnalogVideoDecoder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmAnalogVideoDecoder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmAnalogVideoDecoder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmAnalogVideoDecoder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmAnalogVideoDecoder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmAnalogVideoDecoder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmAnalogVideoDecoder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmAnalogVideoDecoder_get_AvailableTVFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AvailableTVFormats(This,pVal) ) 

#define IltmmAnalogVideoDecoder_get_TVFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TVFormat(This,pVal) ) 

#define IltmmAnalogVideoDecoder_put_TVFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TVFormat(This,newVal) ) 

#define IltmmAnalogVideoDecoder_get_HorizontalLocked(This,pVal)	\
    ( (This)->lpVtbl -> get_HorizontalLocked(This,pVal) ) 

#define IltmmAnalogVideoDecoder_get_VCRHorizontalLocking(This,pVal)	\
    ( (This)->lpVtbl -> get_VCRHorizontalLocking(This,pVal) ) 

#define IltmmAnalogVideoDecoder_put_VCRHorizontalLocking(This,newVal)	\
    ( (This)->lpVtbl -> put_VCRHorizontalLocking(This,newVal) ) 

#define IltmmAnalogVideoDecoder_get_NumberOfLines(This,pVal)	\
    ( (This)->lpVtbl -> get_NumberOfLines(This,pVal) ) 

#define IltmmAnalogVideoDecoder_get_OutputEnable(This,pVal)	\
    ( (This)->lpVtbl -> get_OutputEnable(This,pVal) ) 

#define IltmmAnalogVideoDecoder_put_OutputEnable(This,newVal)	\
    ( (This)->lpVtbl -> put_OutputEnable(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmAnalogVideoDecoder_INTERFACE_DEFINED__ */


#ifndef __IltmmAudioInput_INTERFACE_DEFINED__
#define __IltmmAudioInput_INTERFACE_DEFINED__

/* interface IltmmAudioInput */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmAudioInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016105F-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmAudioInput : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Enable( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Enable( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mono( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Mono( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_MixLevel( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_MixLevel( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Pan( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Pan( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Loudness( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Loudness( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Treble( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Treble( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TrebleRange( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Bass( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Bass( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_BassRange( 
            /* [retval][out] */ double *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmAudioInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmAudioInput * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmAudioInput * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmAudioInput * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmAudioInput * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmAudioInput * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmAudioInput * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmAudioInput * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmAudioInput * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmAudioInput * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enable )( 
            IltmmAudioInput * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enable )( 
            IltmmAudioInput * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mono )( 
            IltmmAudioInput * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mono )( 
            IltmmAudioInput * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MixLevel )( 
            IltmmAudioInput * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MixLevel )( 
            IltmmAudioInput * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Pan )( 
            IltmmAudioInput * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Pan )( 
            IltmmAudioInput * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Loudness )( 
            IltmmAudioInput * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Loudness )( 
            IltmmAudioInput * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Treble )( 
            IltmmAudioInput * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Treble )( 
            IltmmAudioInput * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrebleRange )( 
            IltmmAudioInput * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bass )( 
            IltmmAudioInput * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bass )( 
            IltmmAudioInput * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BassRange )( 
            IltmmAudioInput * This,
            /* [retval][out] */ double *pVal);
        
        END_INTERFACE
    } IltmmAudioInputVtbl;

    interface IltmmAudioInput
    {
        CONST_VTBL struct IltmmAudioInputVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmAudioInput_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmAudioInput_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmAudioInput_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmAudioInput_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmAudioInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmAudioInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmAudioInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmAudioInput_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmAudioInput_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmAudioInput_get_Enable(This,pVal)	\
    ( (This)->lpVtbl -> get_Enable(This,pVal) ) 

#define IltmmAudioInput_put_Enable(This,newVal)	\
    ( (This)->lpVtbl -> put_Enable(This,newVal) ) 

#define IltmmAudioInput_get_Mono(This,pVal)	\
    ( (This)->lpVtbl -> get_Mono(This,pVal) ) 

#define IltmmAudioInput_put_Mono(This,newVal)	\
    ( (This)->lpVtbl -> put_Mono(This,newVal) ) 

#define IltmmAudioInput_get_MixLevel(This,pVal)	\
    ( (This)->lpVtbl -> get_MixLevel(This,pVal) ) 

#define IltmmAudioInput_put_MixLevel(This,newVal)	\
    ( (This)->lpVtbl -> put_MixLevel(This,newVal) ) 

#define IltmmAudioInput_get_Pan(This,pVal)	\
    ( (This)->lpVtbl -> get_Pan(This,pVal) ) 

#define IltmmAudioInput_put_Pan(This,newVal)	\
    ( (This)->lpVtbl -> put_Pan(This,newVal) ) 

#define IltmmAudioInput_get_Loudness(This,pVal)	\
    ( (This)->lpVtbl -> get_Loudness(This,pVal) ) 

#define IltmmAudioInput_put_Loudness(This,newVal)	\
    ( (This)->lpVtbl -> put_Loudness(This,newVal) ) 

#define IltmmAudioInput_get_Treble(This,pVal)	\
    ( (This)->lpVtbl -> get_Treble(This,pVal) ) 

#define IltmmAudioInput_put_Treble(This,newVal)	\
    ( (This)->lpVtbl -> put_Treble(This,newVal) ) 

#define IltmmAudioInput_get_TrebleRange(This,pVal)	\
    ( (This)->lpVtbl -> get_TrebleRange(This,pVal) ) 

#define IltmmAudioInput_get_Bass(This,pVal)	\
    ( (This)->lpVtbl -> get_Bass(This,pVal) ) 

#define IltmmAudioInput_put_Bass(This,newVal)	\
    ( (This)->lpVtbl -> put_Bass(This,newVal) ) 

#define IltmmAudioInput_get_BassRange(This,pVal)	\
    ( (This)->lpVtbl -> get_BassRange(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmAudioInput_INTERFACE_DEFINED__ */


#ifndef __IltmmAudioInputs_INTERFACE_DEFINED__
#define __IltmmAudioInputs_INTERFACE_DEFINED__

/* interface IltmmAudioInputs */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmAudioInputs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161061-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmAudioInputs : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmAudioInput **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Enable( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Enable( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mono( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Mono( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_MixLevel( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_MixLevel( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Pan( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Pan( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Loudness( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Loudness( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Treble( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Treble( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TrebleRange( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Bass( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Bass( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_BassRange( 
            /* [retval][out] */ double *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmAudioInputsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmAudioInputs * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmAudioInputs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmAudioInputs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmAudioInputs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmAudioInputs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmAudioInputs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmAudioInputs * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmAudioInputs * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmAudioInput **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmAudioInputs * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enable )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enable )( 
            IltmmAudioInputs * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mono )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mono )( 
            IltmmAudioInputs * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MixLevel )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MixLevel )( 
            IltmmAudioInputs * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Pan )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Pan )( 
            IltmmAudioInputs * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Loudness )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Loudness )( 
            IltmmAudioInputs * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Treble )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Treble )( 
            IltmmAudioInputs * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrebleRange )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bass )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bass )( 
            IltmmAudioInputs * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BassRange )( 
            IltmmAudioInputs * This,
            /* [retval][out] */ double *pVal);
        
        END_INTERFACE
    } IltmmAudioInputsVtbl;

    interface IltmmAudioInputs
    {
        CONST_VTBL struct IltmmAudioInputsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmAudioInputs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmAudioInputs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmAudioInputs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmAudioInputs_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmAudioInputs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmAudioInputs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmAudioInputs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmAudioInputs_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmAudioInputs_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmAudioInputs_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmAudioInputs_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmAudioInputs_get_Enable(This,pVal)	\
    ( (This)->lpVtbl -> get_Enable(This,pVal) ) 

#define IltmmAudioInputs_put_Enable(This,newVal)	\
    ( (This)->lpVtbl -> put_Enable(This,newVal) ) 

#define IltmmAudioInputs_get_Mono(This,pVal)	\
    ( (This)->lpVtbl -> get_Mono(This,pVal) ) 

#define IltmmAudioInputs_put_Mono(This,newVal)	\
    ( (This)->lpVtbl -> put_Mono(This,newVal) ) 

#define IltmmAudioInputs_get_MixLevel(This,pVal)	\
    ( (This)->lpVtbl -> get_MixLevel(This,pVal) ) 

#define IltmmAudioInputs_put_MixLevel(This,newVal)	\
    ( (This)->lpVtbl -> put_MixLevel(This,newVal) ) 

#define IltmmAudioInputs_get_Pan(This,pVal)	\
    ( (This)->lpVtbl -> get_Pan(This,pVal) ) 

#define IltmmAudioInputs_put_Pan(This,newVal)	\
    ( (This)->lpVtbl -> put_Pan(This,newVal) ) 

#define IltmmAudioInputs_get_Loudness(This,pVal)	\
    ( (This)->lpVtbl -> get_Loudness(This,pVal) ) 

#define IltmmAudioInputs_put_Loudness(This,newVal)	\
    ( (This)->lpVtbl -> put_Loudness(This,newVal) ) 

#define IltmmAudioInputs_get_Treble(This,pVal)	\
    ( (This)->lpVtbl -> get_Treble(This,pVal) ) 

#define IltmmAudioInputs_put_Treble(This,newVal)	\
    ( (This)->lpVtbl -> put_Treble(This,newVal) ) 

#define IltmmAudioInputs_get_TrebleRange(This,pVal)	\
    ( (This)->lpVtbl -> get_TrebleRange(This,pVal) ) 

#define IltmmAudioInputs_get_Bass(This,pVal)	\
    ( (This)->lpVtbl -> get_Bass(This,pVal) ) 

#define IltmmAudioInputs_put_Bass(This,newVal)	\
    ( (This)->lpVtbl -> put_Bass(This,newVal) ) 

#define IltmmAudioInputs_get_BassRange(This,pVal)	\
    ( (This)->lpVtbl -> get_BassRange(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmAudioInputs_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureInput_INTERFACE_DEFINED__
#define __IltmmCaptureInput_INTERFACE_DEFINED__

/* interface IltmmCaptureInput */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161001-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureInput : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureInput * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureInput * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureInput * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureInput * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureInput * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureInput * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureInput * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmCaptureInput * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmCaptureInput * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmCaptureInput * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmCaptureInput * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmCaptureInputVtbl;

    interface IltmmCaptureInput
    {
        CONST_VTBL struct IltmmCaptureInputVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureInput_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureInput_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureInput_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureInput_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureInput_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmCaptureInput_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmCaptureInput_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmCaptureInput_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureInput_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureInputs1_INTERFACE_DEFINED__
#define __IltmmCaptureInputs1_INTERFACE_DEFINED__

/* interface IltmmCaptureInputs1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureInputs1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161002-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureInputs1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCaptureInput **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureInputs1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureInputs1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureInputs1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureInputs1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureInputs1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureInputs1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureInputs1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureInputs1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmCaptureInputs1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmCaptureInputs1 * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCaptureInput **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmCaptureInputs1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmCaptureInputs1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmCaptureInputs1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmCaptureInputs1 * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        END_INTERFACE
    } IltmmCaptureInputs1Vtbl;

    interface IltmmCaptureInputs1
    {
        CONST_VTBL struct IltmmCaptureInputs1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureInputs1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureInputs1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureInputs1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureInputs1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureInputs1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureInputs1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureInputs1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureInputs1_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmCaptureInputs1_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmCaptureInputs1_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmCaptureInputs1_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmCaptureInputs1_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmCaptureInputs1_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureInputs1_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureInputs_INTERFACE_DEFINED__
#define __IltmmCaptureInputs_INTERFACE_DEFINED__

/* interface IltmmCaptureInputs */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureInputs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016108D-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureInputs : public IltmmCaptureInputs1
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_NearestSelection( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureInputsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureInputs * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureInputs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureInputs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureInputs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureInputs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureInputs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureInputs * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmCaptureInputs * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmCaptureInputs * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCaptureInput **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmCaptureInputs * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmCaptureInputs * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmCaptureInputs * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmCaptureInputs * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NearestSelection )( 
            IltmmCaptureInputs * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmCaptureInputsVtbl;

    interface IltmmCaptureInputs
    {
        CONST_VTBL struct IltmmCaptureInputsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureInputs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureInputs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureInputs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureInputs_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureInputs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureInputs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureInputs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureInputs_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmCaptureInputs_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmCaptureInputs_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmCaptureInputs_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmCaptureInputs_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmCaptureInputs_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 


#define IltmmCaptureInputs_get_NearestSelection(This,pVal)	\
    ( (This)->lpVtbl -> get_NearestSelection(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureInputs_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureSize_INTERFACE_DEFINED__
#define __IltmmCaptureSize_INTERFACE_DEFINED__

/* interface IltmmCaptureSize */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureSize;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161039-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureSize : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureSizeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureSize * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureSize * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureSize * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureSize * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureSize * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureSize * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureSize * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmCaptureSize * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmCaptureSize * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IltmmCaptureSize * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IltmmCaptureSize * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmCaptureSizeVtbl;

    interface IltmmCaptureSize
    {
        CONST_VTBL struct IltmmCaptureSizeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureSize_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureSize_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureSize_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureSize_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureSize_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureSize_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureSize_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureSize_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmCaptureSize_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmCaptureSize_get_Width(This,pVal)	\
    ( (This)->lpVtbl -> get_Width(This,pVal) ) 

#define IltmmCaptureSize_get_Height(This,pVal)	\
    ( (This)->lpVtbl -> get_Height(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureSize_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureSizes_INTERFACE_DEFINED__
#define __IltmmCaptureSizes_INTERFACE_DEFINED__

/* interface IltmmCaptureSizes */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureSizes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016103A-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureSizes : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCaptureSize **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ long Width,
            /* [in] */ long Height,
            /* [retval][out] */ long *Index) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureSizesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureSizes * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureSizes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureSizes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureSizes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureSizes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureSizes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureSizes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmCaptureSizes * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmCaptureSizes * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCaptureSize **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmCaptureSizes * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmCaptureSizes * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmCaptureSizes * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmCaptureSizes * This,
            /* [in] */ long Width,
            /* [in] */ long Height,
            /* [retval][out] */ long *Index);
        
        END_INTERFACE
    } IltmmCaptureSizesVtbl;

    interface IltmmCaptureSizes
    {
        CONST_VTBL struct IltmmCaptureSizesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureSizes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureSizes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureSizes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureSizes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureSizes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureSizes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureSizes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureSizes_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmCaptureSizes_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmCaptureSizes_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmCaptureSizes_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmCaptureSizes_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmCaptureSizes_Find(This,Width,Height,Index)	\
    ( (This)->lpVtbl -> Find(This,Width,Height,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureSizes_INTERFACE_DEFINED__ */


#ifndef __IltmmVideoFormat_INTERFACE_DEFINED__
#define __IltmmVideoFormat_INTERFACE_DEFINED__

/* interface IltmmVideoFormat */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmVideoFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161089-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmVideoFormat : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubTypeName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubTypeFriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Compression( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_BitCount( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmVideoFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmVideoFormat * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmVideoFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmVideoFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmVideoFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmVideoFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmVideoFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmVideoFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmVideoFormat * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmVideoFormat * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubTypeName )( 
            IltmmVideoFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubTypeFriendlyName )( 
            IltmmVideoFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            IltmmVideoFormat * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            IltmmVideoFormat * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Compression )( 
            IltmmVideoFormat * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BitCount )( 
            IltmmVideoFormat * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmVideoFormatVtbl;

    interface IltmmVideoFormat
    {
        CONST_VTBL struct IltmmVideoFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmVideoFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmVideoFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmVideoFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmVideoFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmVideoFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmVideoFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmVideoFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmVideoFormat_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmVideoFormat_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmVideoFormat_get_SubTypeName(This,pVal)	\
    ( (This)->lpVtbl -> get_SubTypeName(This,pVal) ) 

#define IltmmVideoFormat_get_SubTypeFriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_SubTypeFriendlyName(This,pVal) ) 

#define IltmmVideoFormat_get_Width(This,pVal)	\
    ( (This)->lpVtbl -> get_Width(This,pVal) ) 

#define IltmmVideoFormat_get_Height(This,pVal)	\
    ( (This)->lpVtbl -> get_Height(This,pVal) ) 

#define IltmmVideoFormat_get_Compression(This,pVal)	\
    ( (This)->lpVtbl -> get_Compression(This,pVal) ) 

#define IltmmVideoFormat_get_BitCount(This,pVal)	\
    ( (This)->lpVtbl -> get_BitCount(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmVideoFormat_INTERFACE_DEFINED__ */


#ifndef __IltmmVideoFormats_INTERFACE_DEFINED__
#define __IltmmVideoFormats_INTERFACE_DEFINED__

/* interface IltmmVideoFormats */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmVideoFormats;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016108A-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmVideoFormats : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmVideoFormat **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR SubType,
            /* [in] */ long Width,
            /* [in] */ long Height,
            /* [retval][out] */ long *Index) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmVideoFormatsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmVideoFormats * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmVideoFormats * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmVideoFormats * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmVideoFormats * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmVideoFormats * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmVideoFormats * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmVideoFormats * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmVideoFormats * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmVideoFormats * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmVideoFormat **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmVideoFormats * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmVideoFormats * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmVideoFormats * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmVideoFormats * This,
            /* [in] */ BSTR SubType,
            /* [in] */ long Width,
            /* [in] */ long Height,
            /* [retval][out] */ long *Index);
        
        END_INTERFACE
    } IltmmVideoFormatsVtbl;

    interface IltmmVideoFormats
    {
        CONST_VTBL struct IltmmVideoFormatsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmVideoFormats_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmVideoFormats_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmVideoFormats_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmVideoFormats_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmVideoFormats_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmVideoFormats_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmVideoFormats_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmVideoFormats_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmVideoFormats_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmVideoFormats_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmVideoFormats_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmVideoFormats_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmVideoFormats_Find(This,SubType,Width,Height,Index)	\
    ( (This)->lpVtbl -> Find(This,SubType,Width,Height,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmVideoFormats_INTERFACE_DEFINED__ */


#ifndef __IltmmAudioFormat_INTERFACE_DEFINED__
#define __IltmmAudioFormat_INTERFACE_DEFINED__

/* interface IltmmAudioFormat */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmAudioFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016107A-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmAudioFormat : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SampleFrequency( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_BitsPerSample( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Channels( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmAudioFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmAudioFormat * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmAudioFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmAudioFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmAudioFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmAudioFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmAudioFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmAudioFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmAudioFormat * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmAudioFormat * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SampleFrequency )( 
            IltmmAudioFormat * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BitsPerSample )( 
            IltmmAudioFormat * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Channels )( 
            IltmmAudioFormat * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmAudioFormatVtbl;

    interface IltmmAudioFormat
    {
        CONST_VTBL struct IltmmAudioFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmAudioFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmAudioFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmAudioFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmAudioFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmAudioFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmAudioFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmAudioFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmAudioFormat_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmAudioFormat_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmAudioFormat_get_SampleFrequency(This,pVal)	\
    ( (This)->lpVtbl -> get_SampleFrequency(This,pVal) ) 

#define IltmmAudioFormat_get_BitsPerSample(This,pVal)	\
    ( (This)->lpVtbl -> get_BitsPerSample(This,pVal) ) 

#define IltmmAudioFormat_get_Channels(This,pVal)	\
    ( (This)->lpVtbl -> get_Channels(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmAudioFormat_INTERFACE_DEFINED__ */


#ifndef __IltmmAudioFormats_INTERFACE_DEFINED__
#define __IltmmAudioFormats_INTERFACE_DEFINED__

/* interface IltmmAudioFormats */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmAudioFormats;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016107B-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmAudioFormats : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmAudioFormat **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ long Freq,
            /* [in] */ long Bits,
            /* [in] */ long Channels,
            /* [retval][out] */ long *Index) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmAudioFormatsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmAudioFormats * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmAudioFormats * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmAudioFormats * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmAudioFormats * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmAudioFormats * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmAudioFormats * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmAudioFormats * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmAudioFormats * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmAudioFormats * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmAudioFormat **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmAudioFormats * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmAudioFormats * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmAudioFormats * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmAudioFormats * This,
            /* [in] */ long Freq,
            /* [in] */ long Bits,
            /* [in] */ long Channels,
            /* [retval][out] */ long *Index);
        
        END_INTERFACE
    } IltmmAudioFormatsVtbl;

    interface IltmmAudioFormats
    {
        CONST_VTBL struct IltmmAudioFormatsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmAudioFormats_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmAudioFormats_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmAudioFormats_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmAudioFormats_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmAudioFormats_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmAudioFormats_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmAudioFormats_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmAudioFormats_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmAudioFormats_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmAudioFormats_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmAudioFormats_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmAudioFormats_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmAudioFormats_Find(This,Freq,Bits,Channels,Index)	\
    ( (This)->lpVtbl -> Find(This,Freq,Bits,Channels,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmAudioFormats_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureSubType_INTERFACE_DEFINED__
#define __IltmmCaptureSubType_INTERFACE_DEFINED__

/* interface IltmmCaptureSubType */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureSubType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161073-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureSubType : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureSubTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureSubType * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureSubType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureSubType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureSubType * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureSubType * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureSubType * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureSubType * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmCaptureSubType * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmCaptureSubType * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmCaptureSubType * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmCaptureSubType * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmCaptureSubTypeVtbl;

    interface IltmmCaptureSubType
    {
        CONST_VTBL struct IltmmCaptureSubTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureSubType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureSubType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureSubType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureSubType_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureSubType_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureSubType_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureSubType_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureSubType_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmCaptureSubType_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmCaptureSubType_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmCaptureSubType_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureSubType_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureSubTypes_INTERFACE_DEFINED__
#define __IltmmCaptureSubTypes_INTERFACE_DEFINED__

/* interface IltmmCaptureSubTypes */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureSubTypes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161074-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureSubTypes : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCaptureSubType **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureSubTypesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureSubTypes * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureSubTypes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureSubTypes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureSubTypes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureSubTypes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureSubTypes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureSubTypes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmCaptureSubTypes * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmCaptureSubTypes * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCaptureSubType **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmCaptureSubTypes * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmCaptureSubTypes * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmCaptureSubTypes * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmCaptureSubTypes * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        END_INTERFACE
    } IltmmCaptureSubTypesVtbl;

    interface IltmmCaptureSubTypes
    {
        CONST_VTBL struct IltmmCaptureSubTypesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureSubTypes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureSubTypes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureSubTypes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureSubTypes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureSubTypes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureSubTypes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureSubTypes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureSubTypes_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmCaptureSubTypes_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmCaptureSubTypes_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmCaptureSubTypes_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmCaptureSubTypes_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmCaptureSubTypes_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureSubTypes_INTERFACE_DEFINED__ */


#ifndef __IltmmTargetFormat1_INTERFACE_DEFINED__
#define __IltmmTargetFormat1_INTERFACE_DEFINED__

/* interface IltmmTargetFormat1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTargetFormat1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161043-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTargetFormat1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mux( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Mux( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Sink( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Sink( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SinkSubType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SinkSubType( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ReadOnly( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioCompressor( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AudioCompressor( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCompressor( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoCompressor( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AVMux( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AVMux( 
            /* [in] */ BSTR newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmTargetFormat1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTargetFormat1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTargetFormat1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTargetFormat1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTargetFormat1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTargetFormat1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTargetFormat1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTargetFormat1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmTargetFormat1 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mux )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mux )( 
            IltmmTargetFormat1 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Sink )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Sink )( 
            IltmmTargetFormat1 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SinkSubType )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SinkSubType )( 
            IltmmTargetFormat1 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReadOnly )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressor )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioCompressor )( 
            IltmmTargetFormat1 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressor )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoCompressor )( 
            IltmmTargetFormat1 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AVMux )( 
            IltmmTargetFormat1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AVMux )( 
            IltmmTargetFormat1 * This,
            /* [in] */ BSTR newVal);
        
        END_INTERFACE
    } IltmmTargetFormat1Vtbl;

    interface IltmmTargetFormat1
    {
        CONST_VTBL struct IltmmTargetFormat1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTargetFormat1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTargetFormat1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTargetFormat1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTargetFormat1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTargetFormat1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTargetFormat1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTargetFormat1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTargetFormat1_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmTargetFormat1_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmTargetFormat1_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmTargetFormat1_get_Mux(This,pVal)	\
    ( (This)->lpVtbl -> get_Mux(This,pVal) ) 

#define IltmmTargetFormat1_put_Mux(This,newVal)	\
    ( (This)->lpVtbl -> put_Mux(This,newVal) ) 

#define IltmmTargetFormat1_get_Sink(This,pVal)	\
    ( (This)->lpVtbl -> get_Sink(This,pVal) ) 

#define IltmmTargetFormat1_put_Sink(This,newVal)	\
    ( (This)->lpVtbl -> put_Sink(This,newVal) ) 

#define IltmmTargetFormat1_get_SinkSubType(This,pVal)	\
    ( (This)->lpVtbl -> get_SinkSubType(This,pVal) ) 

#define IltmmTargetFormat1_put_SinkSubType(This,newVal)	\
    ( (This)->lpVtbl -> put_SinkSubType(This,newVal) ) 

#define IltmmTargetFormat1_get_ReadOnly(This,pVal)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,pVal) ) 

#define IltmmTargetFormat1_get_AudioCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressor(This,pVal) ) 

#define IltmmTargetFormat1_put_AudioCompressor(This,newVal)	\
    ( (This)->lpVtbl -> put_AudioCompressor(This,newVal) ) 

#define IltmmTargetFormat1_get_VideoCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressor(This,pVal) ) 

#define IltmmTargetFormat1_put_VideoCompressor(This,newVal)	\
    ( (This)->lpVtbl -> put_VideoCompressor(This,newVal) ) 

#define IltmmTargetFormat1_get_AVMux(This,pVal)	\
    ( (This)->lpVtbl -> get_AVMux(This,pVal) ) 

#define IltmmTargetFormat1_put_AVMux(This,newVal)	\
    ( (This)->lpVtbl -> put_AVMux(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTargetFormat1_INTERFACE_DEFINED__ */


#ifndef __IltmmTargetFormat2_INTERFACE_DEFINED__
#define __IltmmTargetFormat2_INTERFACE_DEFINED__

/* interface IltmmTargetFormat2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTargetFormat2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161093-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTargetFormat2 : public IltmmTargetFormat1
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Streams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Streams( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsValidCompressor( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_RecommendedAudioCompressor( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_RecommendedVideoCompressor( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmTargetFormat2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTargetFormat2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTargetFormat2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTargetFormat2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTargetFormat2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTargetFormat2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTargetFormat2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTargetFormat2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmTargetFormat2 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mux )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mux )( 
            IltmmTargetFormat2 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Sink )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Sink )( 
            IltmmTargetFormat2 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SinkSubType )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SinkSubType )( 
            IltmmTargetFormat2 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReadOnly )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressor )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioCompressor )( 
            IltmmTargetFormat2 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressor )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoCompressor )( 
            IltmmTargetFormat2 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AVMux )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AVMux )( 
            IltmmTargetFormat2 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Streams )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Streams )( 
            IltmmTargetFormat2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsValidCompressor )( 
            IltmmTargetFormat2 * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RecommendedAudioCompressor )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RecommendedVideoCompressor )( 
            IltmmTargetFormat2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        END_INTERFACE
    } IltmmTargetFormat2Vtbl;

    interface IltmmTargetFormat2
    {
        CONST_VTBL struct IltmmTargetFormat2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTargetFormat2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTargetFormat2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTargetFormat2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTargetFormat2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTargetFormat2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTargetFormat2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTargetFormat2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTargetFormat2_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmTargetFormat2_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmTargetFormat2_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmTargetFormat2_get_Mux(This,pVal)	\
    ( (This)->lpVtbl -> get_Mux(This,pVal) ) 

#define IltmmTargetFormat2_put_Mux(This,newVal)	\
    ( (This)->lpVtbl -> put_Mux(This,newVal) ) 

#define IltmmTargetFormat2_get_Sink(This,pVal)	\
    ( (This)->lpVtbl -> get_Sink(This,pVal) ) 

#define IltmmTargetFormat2_put_Sink(This,newVal)	\
    ( (This)->lpVtbl -> put_Sink(This,newVal) ) 

#define IltmmTargetFormat2_get_SinkSubType(This,pVal)	\
    ( (This)->lpVtbl -> get_SinkSubType(This,pVal) ) 

#define IltmmTargetFormat2_put_SinkSubType(This,newVal)	\
    ( (This)->lpVtbl -> put_SinkSubType(This,newVal) ) 

#define IltmmTargetFormat2_get_ReadOnly(This,pVal)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,pVal) ) 

#define IltmmTargetFormat2_get_AudioCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressor(This,pVal) ) 

#define IltmmTargetFormat2_put_AudioCompressor(This,newVal)	\
    ( (This)->lpVtbl -> put_AudioCompressor(This,newVal) ) 

#define IltmmTargetFormat2_get_VideoCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressor(This,pVal) ) 

#define IltmmTargetFormat2_put_VideoCompressor(This,newVal)	\
    ( (This)->lpVtbl -> put_VideoCompressor(This,newVal) ) 

#define IltmmTargetFormat2_get_AVMux(This,pVal)	\
    ( (This)->lpVtbl -> get_AVMux(This,pVal) ) 

#define IltmmTargetFormat2_put_AVMux(This,newVal)	\
    ( (This)->lpVtbl -> put_AVMux(This,newVal) ) 


#define IltmmTargetFormat2_get_Streams(This,pVal)	\
    ( (This)->lpVtbl -> get_Streams(This,pVal) ) 

#define IltmmTargetFormat2_put_Streams(This,newVal)	\
    ( (This)->lpVtbl -> put_Streams(This,newVal) ) 

#define IltmmTargetFormat2_IsValidCompressor(This,Name,pVal)	\
    ( (This)->lpVtbl -> IsValidCompressor(This,Name,pVal) ) 

#define IltmmTargetFormat2_get_RecommendedAudioCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_RecommendedAudioCompressor(This,pVal) ) 

#define IltmmTargetFormat2_get_RecommendedVideoCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_RecommendedVideoCompressor(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTargetFormat2_INTERFACE_DEFINED__ */


#ifndef __IltmmTargetFormat_INTERFACE_DEFINED__
#define __IltmmTargetFormat_INTERFACE_DEFINED__

/* interface IltmmTargetFormat */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTargetFormat;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016109B-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTargetFormat : public IltmmTargetFormat2
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseFilterCache( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseFilterCache( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCacheObject( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCacheObjectDispatch( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE HasCacheDialog( 
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ShowCacheDialog( 
            /* [in] */ long Dialog,
            /* [in] */ long hWnd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmTargetFormatVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTargetFormat * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTargetFormat * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTargetFormat * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTargetFormat * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTargetFormat * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTargetFormat * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTargetFormat * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmTargetFormat * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mux )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mux )( 
            IltmmTargetFormat * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Sink )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Sink )( 
            IltmmTargetFormat * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SinkSubType )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SinkSubType )( 
            IltmmTargetFormat * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReadOnly )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressor )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioCompressor )( 
            IltmmTargetFormat * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressor )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoCompressor )( 
            IltmmTargetFormat * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AVMux )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AVMux )( 
            IltmmTargetFormat * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Streams )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Streams )( 
            IltmmTargetFormat * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsValidCompressor )( 
            IltmmTargetFormat * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RecommendedAudioCompressor )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RecommendedVideoCompressor )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFilterCache )( 
            IltmmTargetFormat * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFilterCache )( 
            IltmmTargetFormat * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCacheObject )( 
            IltmmTargetFormat * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCacheObjectDispatch )( 
            IltmmTargetFormat * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasCacheDialog )( 
            IltmmTargetFormat * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCacheDialog )( 
            IltmmTargetFormat * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        END_INTERFACE
    } IltmmTargetFormatVtbl;

    interface IltmmTargetFormat
    {
        CONST_VTBL struct IltmmTargetFormatVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTargetFormat_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTargetFormat_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTargetFormat_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTargetFormat_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTargetFormat_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTargetFormat_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTargetFormat_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTargetFormat_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmTargetFormat_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmTargetFormat_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#define IltmmTargetFormat_get_Mux(This,pVal)	\
    ( (This)->lpVtbl -> get_Mux(This,pVal) ) 

#define IltmmTargetFormat_put_Mux(This,newVal)	\
    ( (This)->lpVtbl -> put_Mux(This,newVal) ) 

#define IltmmTargetFormat_get_Sink(This,pVal)	\
    ( (This)->lpVtbl -> get_Sink(This,pVal) ) 

#define IltmmTargetFormat_put_Sink(This,newVal)	\
    ( (This)->lpVtbl -> put_Sink(This,newVal) ) 

#define IltmmTargetFormat_get_SinkSubType(This,pVal)	\
    ( (This)->lpVtbl -> get_SinkSubType(This,pVal) ) 

#define IltmmTargetFormat_put_SinkSubType(This,newVal)	\
    ( (This)->lpVtbl -> put_SinkSubType(This,newVal) ) 

#define IltmmTargetFormat_get_ReadOnly(This,pVal)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,pVal) ) 

#define IltmmTargetFormat_get_AudioCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressor(This,pVal) ) 

#define IltmmTargetFormat_put_AudioCompressor(This,newVal)	\
    ( (This)->lpVtbl -> put_AudioCompressor(This,newVal) ) 

#define IltmmTargetFormat_get_VideoCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressor(This,pVal) ) 

#define IltmmTargetFormat_put_VideoCompressor(This,newVal)	\
    ( (This)->lpVtbl -> put_VideoCompressor(This,newVal) ) 

#define IltmmTargetFormat_get_AVMux(This,pVal)	\
    ( (This)->lpVtbl -> get_AVMux(This,pVal) ) 

#define IltmmTargetFormat_put_AVMux(This,newVal)	\
    ( (This)->lpVtbl -> put_AVMux(This,newVal) ) 


#define IltmmTargetFormat_get_Streams(This,pVal)	\
    ( (This)->lpVtbl -> get_Streams(This,pVal) ) 

#define IltmmTargetFormat_put_Streams(This,newVal)	\
    ( (This)->lpVtbl -> put_Streams(This,newVal) ) 

#define IltmmTargetFormat_IsValidCompressor(This,Name,pVal)	\
    ( (This)->lpVtbl -> IsValidCompressor(This,Name,pVal) ) 

#define IltmmTargetFormat_get_RecommendedAudioCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_RecommendedAudioCompressor(This,pVal) ) 

#define IltmmTargetFormat_get_RecommendedVideoCompressor(This,pVal)	\
    ( (This)->lpVtbl -> get_RecommendedVideoCompressor(This,pVal) ) 


#define IltmmTargetFormat_get_UseFilterCache(This,pVal)	\
    ( (This)->lpVtbl -> get_UseFilterCache(This,pVal) ) 

#define IltmmTargetFormat_put_UseFilterCache(This,newVal)	\
    ( (This)->lpVtbl -> put_UseFilterCache(This,newVal) ) 

#define IltmmTargetFormat_GetCacheObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetCacheObject(This,ObjType,ppObject) ) 

#define IltmmTargetFormat_GetCacheObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetCacheObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmTargetFormat_HasCacheDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasCacheDialog(This,Dialog,pHasDialog) ) 

#define IltmmTargetFormat_ShowCacheDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowCacheDialog(This,Dialog,hWnd) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTargetFormat_INTERFACE_DEFINED__ */


#ifndef __IltmmTargetFormats1_INTERFACE_DEFINED__
#define __IltmmTargetFormats1_INTERFACE_DEFINED__

/* interface IltmmTargetFormats1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTargetFormats1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161044-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTargetFormats1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmTargetFormat **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [in] */ long Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmTargetFormats1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTargetFormats1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTargetFormats1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTargetFormats1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTargetFormats1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTargetFormats1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTargetFormats1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTargetFormats1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmTargetFormats1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmTargetFormats1 * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmTargetFormat **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmTargetFormats1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmTargetFormats1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmTargetFormats1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmTargetFormats1 * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IltmmTargetFormats1 * This,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IltmmTargetFormats1 * This,
            /* [in] */ BSTR Name,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            IltmmTargetFormats1 * This);
        
        END_INTERFACE
    } IltmmTargetFormats1Vtbl;

    interface IltmmTargetFormats1
    {
        CONST_VTBL struct IltmmTargetFormats1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTargetFormats1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTargetFormats1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTargetFormats1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTargetFormats1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTargetFormats1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTargetFormats1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTargetFormats1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTargetFormats1_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmTargetFormats1_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmTargetFormats1_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmTargetFormats1_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmTargetFormats1_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmTargetFormats1_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmTargetFormats1_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IltmmTargetFormats1_Add(This,Name,Index)	\
    ( (This)->lpVtbl -> Add(This,Name,Index) ) 

#define IltmmTargetFormats1_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTargetFormats1_INTERFACE_DEFINED__ */


#ifndef __IltmmTargetFormats2_INTERFACE_DEFINED__
#define __IltmmTargetFormats2_INTERFACE_DEFINED__

/* interface IltmmTargetFormats2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTargetFormats2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161094-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTargetFormats2 : public IltmmTargetFormats1
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IltmmTargetFormats2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTargetFormats2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTargetFormats2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTargetFormats2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTargetFormats2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTargetFormats2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTargetFormats2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTargetFormats2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmTargetFormats2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmTargetFormats2 * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmTargetFormat **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmTargetFormats2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmTargetFormats2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmTargetFormats2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmTargetFormats2 * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IltmmTargetFormats2 * This,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IltmmTargetFormats2 * This,
            /* [in] */ BSTR Name,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            IltmmTargetFormats2 * This);
        
        END_INTERFACE
    } IltmmTargetFormats2Vtbl;

    interface IltmmTargetFormats2
    {
        CONST_VTBL struct IltmmTargetFormats2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTargetFormats2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTargetFormats2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTargetFormats2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTargetFormats2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTargetFormats2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTargetFormats2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTargetFormats2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTargetFormats2_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmTargetFormats2_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmTargetFormats2_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmTargetFormats2_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmTargetFormats2_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmTargetFormats2_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmTargetFormats2_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IltmmTargetFormats2_Add(This,Name,Index)	\
    ( (This)->lpVtbl -> Add(This,Name,Index) ) 

#define IltmmTargetFormats2_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTargetFormats2_INTERFACE_DEFINED__ */


#ifndef __IltmmTargetFormats_INTERFACE_DEFINED__
#define __IltmmTargetFormats_INTERFACE_DEFINED__

/* interface IltmmTargetFormats */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTargetFormats;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016109C-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTargetFormats : public IltmmTargetFormats2
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IltmmTargetFormatsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTargetFormats * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTargetFormats * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTargetFormats * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTargetFormats * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTargetFormats * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTargetFormats * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTargetFormats * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmTargetFormats * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmTargetFormats * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmTargetFormat **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmTargetFormats * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmTargetFormats * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmTargetFormats * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmTargetFormats * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IltmmTargetFormats * This,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IltmmTargetFormats * This,
            /* [in] */ BSTR Name,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            IltmmTargetFormats * This);
        
        END_INTERFACE
    } IltmmTargetFormatsVtbl;

    interface IltmmTargetFormats
    {
        CONST_VTBL struct IltmmTargetFormatsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTargetFormats_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTargetFormats_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTargetFormats_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTargetFormats_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTargetFormats_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTargetFormats_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTargetFormats_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTargetFormats_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmTargetFormats_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmTargetFormats_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmTargetFormats_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmTargetFormats_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmTargetFormats_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmTargetFormats_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IltmmTargetFormats_Add(This,Name,Index)	\
    ( (This)->lpVtbl -> Add(This,Name,Index) ) 

#define IltmmTargetFormats_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 



#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTargetFormats_INTERFACE_DEFINED__ */


#ifndef __IltmmCompressor1_INTERFACE_DEFINED__
#define __IltmmCompressor1_INTERFACE_DEFINED__

/* interface IltmmCompressor1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCompressor1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161003-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCompressor1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCompressor1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCompressor1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCompressor1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCompressor1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCompressor1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCompressor1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCompressor1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCompressor1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmCompressor1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmCompressor1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmCompressor1 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmCompressor1 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmCompressor1Vtbl;

    interface IltmmCompressor1
    {
        CONST_VTBL struct IltmmCompressor1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCompressor1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCompressor1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCompressor1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCompressor1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCompressor1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCompressor1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCompressor1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCompressor1_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmCompressor1_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmCompressor1_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmCompressor1_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCompressor1_INTERFACE_DEFINED__ */


#ifndef __IltmmCompressor_INTERFACE_DEFINED__
#define __IltmmCompressor_INTERFACE_DEFINED__

/* interface IltmmCompressor */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCompressor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161095-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCompressor : public IltmmCompressor1
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Reliability( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCompressorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCompressor * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCompressor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCompressor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCompressor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCompressor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCompressor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCompressor * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmCompressor * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmCompressor * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmCompressor * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmCompressor * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Reliability )( 
            IltmmCompressor * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmCompressorVtbl;

    interface IltmmCompressor
    {
        CONST_VTBL struct IltmmCompressorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCompressor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCompressor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCompressor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCompressor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCompressor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCompressor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCompressor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCompressor_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmCompressor_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmCompressor_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmCompressor_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 


#define IltmmCompressor_get_Reliability(This,pVal)	\
    ( (This)->lpVtbl -> get_Reliability(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCompressor_INTERFACE_DEFINED__ */


#ifndef __IltmmCompressors1_INTERFACE_DEFINED__
#define __IltmmCompressors1_INTERFACE_DEFINED__

/* interface IltmmCompressors1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCompressors1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161004-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCompressors1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCompressor **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCompressors1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCompressors1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCompressors1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCompressors1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCompressors1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCompressors1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCompressors1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCompressors1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmCompressors1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmCompressors1 * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCompressor **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmCompressors1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmCompressors1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmCompressors1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmCompressors1 * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IltmmCompressors1 * This);
        
        END_INTERFACE
    } IltmmCompressors1Vtbl;

    interface IltmmCompressors1
    {
        CONST_VTBL struct IltmmCompressors1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCompressors1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCompressors1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCompressors1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCompressors1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCompressors1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCompressors1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCompressors1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCompressors1_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmCompressors1_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmCompressors1_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmCompressors1_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmCompressors1_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmCompressors1_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmCompressors1_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCompressors1_INTERFACE_DEFINED__ */


#ifndef __IltmmCompressors_INTERFACE_DEFINED__
#define __IltmmCompressors_INTERFACE_DEFINED__

/* interface IltmmCompressors */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCompressors;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161096-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCompressors : public IltmmCompressors1
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IltmmCompressorsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCompressors * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCompressors * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCompressors * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCompressors * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCompressors * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCompressors * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCompressors * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmCompressors * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmCompressors * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmCompressor **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmCompressors * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmCompressors * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmCompressors * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmCompressors * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IltmmCompressors * This);
        
        END_INTERFACE
    } IltmmCompressorsVtbl;

    interface IltmmCompressors
    {
        CONST_VTBL struct IltmmCompressorsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCompressors_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCompressors_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCompressors_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCompressors_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCompressors_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCompressors_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCompressors_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCompressors_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmCompressors_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmCompressors_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmCompressors_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmCompressors_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmCompressors_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmCompressors_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCompressors_INTERFACE_DEFINED__ */


#ifndef __IltmmDevice_INTERFACE_DEFINED__
#define __IltmmDevice_INTERFACE_DEFINED__

/* interface IltmmDevice */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDevice;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161005-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDevice : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmDeviceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDevice * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDevice * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDevice * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDevice * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDevice * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDevice * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDevice * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmDevice * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmDevice * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmDevice * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmDevice * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmDeviceVtbl;

    interface IltmmDevice
    {
        CONST_VTBL struct IltmmDeviceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDevice_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDevice_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDevice_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDevice_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDevice_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDevice_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDevice_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmDevice_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmDevice_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmDevice_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmDevice_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDevice_INTERFACE_DEFINED__ */


#ifndef __IltmmDevices_INTERFACE_DEFINED__
#define __IltmmDevices_INTERFACE_DEFINED__

/* interface IltmmDevices */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDevices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161006-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDevices : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDevice **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmDevicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDevices * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDevices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDevices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDevices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDevices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDevices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDevices * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmDevices * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmDevices * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmDevice **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmDevices * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmDevices * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmDevices * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmDevices * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IltmmDevices * This);
        
        END_INTERFACE
    } IltmmDevicesVtbl;

    interface IltmmDevices
    {
        CONST_VTBL struct IltmmDevicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDevices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDevices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDevices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDevices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDevices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDevices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDevices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmDevices_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmDevices_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmDevices_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmDevices_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmDevices_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmDevices_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmDevices_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDevices_INTERFACE_DEFINED__ */


#ifndef __IltmmRenderer_INTERFACE_DEFINED__
#define __IltmmRenderer_INTERFACE_DEFINED__

/* interface IltmmRenderer */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmRenderer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016102D-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmRenderer : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmRendererVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmRenderer * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmRenderer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmRenderer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmRenderer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmRenderer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmRenderer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmRenderer * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmRenderer * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmRenderer * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmRenderer * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmRenderer * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmRendererVtbl;

    interface IltmmRenderer
    {
        CONST_VTBL struct IltmmRendererVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmRenderer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmRenderer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmRenderer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmRenderer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmRenderer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmRenderer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmRenderer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmRenderer_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmRenderer_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmRenderer_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmRenderer_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmRenderer_INTERFACE_DEFINED__ */


#ifndef __IltmmRenderers_INTERFACE_DEFINED__
#define __IltmmRenderers_INTERFACE_DEFINED__

/* interface IltmmRenderers */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmRenderers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016102E-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmRenderers : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmRenderer **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmRenderersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmRenderers * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmRenderers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmRenderers * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmRenderers * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmRenderers * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmRenderers * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmRenderers * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmRenderers * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmRenderers * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmRenderer **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmRenderers * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmRenderers * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmRenderers * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmRenderers * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IltmmRenderers * This);
        
        END_INTERFACE
    } IltmmRenderersVtbl;

    interface IltmmRenderers
    {
        CONST_VTBL struct IltmmRenderersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmRenderers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmRenderers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmRenderers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmRenderers_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmRenderers_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmRenderers_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmRenderers_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmRenderers_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmRenderers_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmRenderers_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmRenderers_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmRenderers_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmRenderers_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmRenderers_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmRenderers_INTERFACE_DEFINED__ */


#ifndef __IltmmTargetDevice_INTERFACE_DEFINED__
#define __IltmmTargetDevice_INTERFACE_DEFINED__

/* interface IltmmTargetDevice */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTargetDevice;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161045-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTargetDevice : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selected( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selected( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmTargetDeviceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTargetDevice * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTargetDevice * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTargetDevice * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTargetDevice * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTargetDevice * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTargetDevice * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTargetDevice * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmTargetDevice * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmTargetDevice * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selected )( 
            IltmmTargetDevice * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selected )( 
            IltmmTargetDevice * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmTargetDeviceVtbl;

    interface IltmmTargetDevice
    {
        CONST_VTBL struct IltmmTargetDeviceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTargetDevice_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTargetDevice_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTargetDevice_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTargetDevice_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTargetDevice_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTargetDevice_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTargetDevice_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTargetDevice_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmTargetDevice_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmTargetDevice_get_Selected(This,pVal)	\
    ( (This)->lpVtbl -> get_Selected(This,pVal) ) 

#define IltmmTargetDevice_put_Selected(This,newVal)	\
    ( (This)->lpVtbl -> put_Selected(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTargetDevice_INTERFACE_DEFINED__ */


#ifndef __IltmmTargetDevices_INTERFACE_DEFINED__
#define __IltmmTargetDevices_INTERFACE_DEFINED__

/* interface IltmmTargetDevices */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmTargetDevices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161046-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmTargetDevices : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmTargetDevice **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Selection( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmTargetDevicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmTargetDevices * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmTargetDevices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmTargetDevices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmTargetDevices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmTargetDevices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmTargetDevices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmTargetDevices * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmTargetDevices * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmTargetDevices * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmTargetDevice **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmTargetDevices * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            IltmmTargetDevices * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Selection )( 
            IltmmTargetDevices * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmTargetDevices * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IltmmTargetDevices * This);
        
        END_INTERFACE
    } IltmmTargetDevicesVtbl;

    interface IltmmTargetDevices
    {
        CONST_VTBL struct IltmmTargetDevicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmTargetDevices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmTargetDevices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmTargetDevices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmTargetDevices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmTargetDevices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmTargetDevices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmTargetDevices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmTargetDevices_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmTargetDevices_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmTargetDevices_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmTargetDevices_get_Selection(This,pVal)	\
    ( (This)->lpVtbl -> get_Selection(This,pVal) ) 

#define IltmmTargetDevices_put_Selection(This,newVal)	\
    ( (This)->lpVtbl -> put_Selection(This,newVal) ) 

#define IltmmTargetDevices_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmTargetDevices_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmTargetDevices_INTERFACE_DEFINED__ */


#ifndef __IltmmProcessor1_INTERFACE_DEFINED__
#define __IltmmProcessor1_INTERFACE_DEFINED__

/* interface IltmmProcessor1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmProcessor1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161007-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmProcessor1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FriendlyName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE HasDialog( 
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowDialog( 
            /* [in] */ long Dialog,
            /* [in] */ long hWnd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmProcessor1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmProcessor1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmProcessor1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmProcessor1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmProcessor1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmProcessor1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmProcessor1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmProcessor1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmProcessor1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmProcessor1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmProcessor1 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmProcessor1 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        END_INTERFACE
    } IltmmProcessor1Vtbl;

    interface IltmmProcessor1
    {
        CONST_VTBL struct IltmmProcessor1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmProcessor1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmProcessor1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmProcessor1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmProcessor1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmProcessor1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmProcessor1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmProcessor1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmProcessor1_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmProcessor1_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmProcessor1_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmProcessor1_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmProcessor1_INTERFACE_DEFINED__ */


#ifndef __IltmmProcessor_INTERFACE_DEFINED__
#define __IltmmProcessor_INTERFACE_DEFINED__

/* interface IltmmProcessor */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmProcessor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161075-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmProcessor : public IltmmProcessor1
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmProcessorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmProcessor * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmProcessor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmProcessor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmProcessor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmProcessor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmProcessor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmProcessor * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmProcessor * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FriendlyName )( 
            IltmmProcessor * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmProcessor * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmProcessor * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IltmmProcessor * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmProcessorVtbl;

    interface IltmmProcessor
    {
        CONST_VTBL struct IltmmProcessorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmProcessor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmProcessor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmProcessor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmProcessor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmProcessor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmProcessor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmProcessor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmProcessor_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmProcessor_get_FriendlyName(This,pVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pVal) ) 

#define IltmmProcessor_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmProcessor_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 


#define IltmmProcessor_get_Type(This,pVal)	\
    ( (This)->lpVtbl -> get_Type(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmProcessor_INTERFACE_DEFINED__ */


#ifndef __IltmmProcessors1_INTERFACE_DEFINED__
#define __IltmmProcessors1_INTERFACE_DEFINED__

/* interface IltmmProcessors1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmProcessors1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161008-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmProcessors1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ IltmmProcessor **result) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Find( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ IltmmProcessor *item,
            /* [in] */ long Index) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmProcessors1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmProcessors1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmProcessors1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmProcessors1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmProcessors1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmProcessors1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmProcessors1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmProcessors1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmProcessors1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmProcessors1 * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmProcessor **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmProcessors1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmProcessors1 * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IltmmProcessors1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IltmmProcessors1 * This,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IltmmProcessors1 * This,
            /* [in] */ IltmmProcessor *item,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            IltmmProcessors1 * This);
        
        END_INTERFACE
    } IltmmProcessors1Vtbl;

    interface IltmmProcessors1
    {
        CONST_VTBL struct IltmmProcessors1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmProcessors1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmProcessors1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmProcessors1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmProcessors1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmProcessors1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmProcessors1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmProcessors1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmProcessors1_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmProcessors1_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmProcessors1_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmProcessors1_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmProcessors1_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#define IltmmProcessors1_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IltmmProcessors1_Add(This,item,Index)	\
    ( (This)->lpVtbl -> Add(This,item,Index) ) 

#define IltmmProcessors1_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmProcessors1_INTERFACE_DEFINED__ */


#ifndef __IltmmProcessors_INTERFACE_DEFINED__
#define __IltmmProcessors_INTERFACE_DEFINED__

/* interface IltmmProcessors */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmProcessors;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610BC-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmProcessors : public IltmmProcessors1
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RegisterExternalProcessor( 
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT_BOOL fRegister) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmProcessorsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmProcessors * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmProcessors * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmProcessors * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmProcessors * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmProcessors * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmProcessors * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmProcessors * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IltmmProcessors * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            IltmmProcessors * This,
            /* [in] */ long Index,
            /* [retval][out] */ IltmmProcessor **result);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IltmmProcessors * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Find )( 
            IltmmProcessors * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ long *Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IltmmProcessors * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IltmmProcessors * This,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IltmmProcessors * This,
            /* [in] */ IltmmProcessor *item,
            /* [in] */ long Index);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            IltmmProcessors * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RegisterExternalProcessor )( 
            IltmmProcessors * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT_BOOL fRegister);
        
        END_INTERFACE
    } IltmmProcessorsVtbl;

    interface IltmmProcessors
    {
        CONST_VTBL struct IltmmProcessorsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmProcessors_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmProcessors_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmProcessors_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmProcessors_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmProcessors_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmProcessors_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmProcessors_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmProcessors_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IltmmProcessors_Item(This,Index,result)	\
    ( (This)->lpVtbl -> Item(This,Index,result) ) 

#define IltmmProcessors_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IltmmProcessors_Find(This,Name,Index)	\
    ( (This)->lpVtbl -> Find(This,Name,Index) ) 

#define IltmmProcessors_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 

#define IltmmProcessors_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IltmmProcessors_Add(This,item,Index)	\
    ( (This)->lpVtbl -> Add(This,item,Index) ) 

#define IltmmProcessors_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 


#define IltmmProcessors_RegisterExternalProcessor(This,Name,fRegister)	\
    ( (This)->lpVtbl -> RegisterExternalProcessor(This,Name,fRegister) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmProcessors_INTERFACE_DEFINED__ */


#ifndef __IltmmMediaType_INTERFACE_DEFINED__
#define __IltmmMediaType_INTERFACE_DEFINED__

/* interface IltmmMediaType */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IltmmMediaType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016100A-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmMediaType : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetMediaType( 
            /* [out] */ AM_MEDIA_TYPE **ppMediaType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetMediaType( 
            /* [in] */ const AM_MEDIA_TYPE *pMediaType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [out] */ GUID *pType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetType( 
            /* [in] */ REFGUID refType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSubtype( 
            /* [out] */ GUID *pSubtype) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetSubtype( 
            /* [in] */ REFGUID refSubtype) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsFixedSize( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetFixedSize( 
            /* [in] */ BOOL fFixedSize) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsTemporalCompressed( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetTemporalCompression( 
            /* [in] */ BOOL fCompressed) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSampleSize( 
            /* [out] */ ULONG *pulSize) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetSampleSize( 
            /* [in] */ ULONG ulSize) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFormatType( 
            /* [out] */ GUID *pFormatType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetFormatType( 
            /* [in] */ REFGUID refFormatType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFormatSize( 
            /* [out] */ ULONG *pulSize) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetFormatSize( 
            /* [in] */ ULONG ulSize) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [size_is][out] */ void *pFormat,
            /* [out][in] */ ULONG *pcbFormat) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetFormat( 
            /* [size_is][in] */ const void *pFormat,
            /* [in] */ ULONG cbFormat) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ResetFormat( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPortableMediaType( 
            /* [size_is][out] */ void *pBuffer,
            /* [out][in] */ ULONG *pcbBuffer) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetPortableMediaType( 
            /* [size_is][in] */ const void *pBuffer,
            /* [in] */ ULONG cbBuffer) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ResetMediaType( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFormatPointer( 
            /* [out] */ void **ppFormat) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmMediaTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmMediaType * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmMediaType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmMediaType * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetMediaType )( 
            IltmmMediaType * This,
            /* [out] */ AM_MEDIA_TYPE **ppMediaType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            IltmmMediaType * This,
            /* [in] */ const AM_MEDIA_TYPE *pMediaType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetType )( 
            IltmmMediaType * This,
            /* [out] */ GUID *pType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetType )( 
            IltmmMediaType * This,
            /* [in] */ REFGUID refType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSubtype )( 
            IltmmMediaType * This,
            /* [out] */ GUID *pSubtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetSubtype )( 
            IltmmMediaType * This,
            /* [in] */ REFGUID refSubtype);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsFixedSize )( 
            IltmmMediaType * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetFixedSize )( 
            IltmmMediaType * This,
            /* [in] */ BOOL fFixedSize);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsTemporalCompressed )( 
            IltmmMediaType * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTemporalCompression )( 
            IltmmMediaType * This,
            /* [in] */ BOOL fCompressed);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSampleSize )( 
            IltmmMediaType * This,
            /* [out] */ ULONG *pulSize);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetSampleSize )( 
            IltmmMediaType * This,
            /* [in] */ ULONG ulSize);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFormatType )( 
            IltmmMediaType * This,
            /* [out] */ GUID *pFormatType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetFormatType )( 
            IltmmMediaType * This,
            /* [in] */ REFGUID refFormatType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFormatSize )( 
            IltmmMediaType * This,
            /* [out] */ ULONG *pulSize);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetFormatSize )( 
            IltmmMediaType * This,
            /* [in] */ ULONG ulSize);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            IltmmMediaType * This,
            /* [size_is][out] */ void *pFormat,
            /* [out][in] */ ULONG *pcbFormat);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetFormat )( 
            IltmmMediaType * This,
            /* [size_is][in] */ const void *pFormat,
            /* [in] */ ULONG cbFormat);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ResetFormat )( 
            IltmmMediaType * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPortableMediaType )( 
            IltmmMediaType * This,
            /* [size_is][out] */ void *pBuffer,
            /* [out][in] */ ULONG *pcbBuffer);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetPortableMediaType )( 
            IltmmMediaType * This,
            /* [size_is][in] */ const void *pBuffer,
            /* [in] */ ULONG cbBuffer);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ResetMediaType )( 
            IltmmMediaType * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFormatPointer )( 
            IltmmMediaType * This,
            /* [out] */ void **ppFormat);
        
        END_INTERFACE
    } IltmmMediaTypeVtbl;

    interface IltmmMediaType
    {
        CONST_VTBL struct IltmmMediaTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmMediaType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmMediaType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmMediaType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmMediaType_GetMediaType(This,ppMediaType)	\
    ( (This)->lpVtbl -> GetMediaType(This,ppMediaType) ) 

#define IltmmMediaType_SetMediaType(This,pMediaType)	\
    ( (This)->lpVtbl -> SetMediaType(This,pMediaType) ) 

#define IltmmMediaType_GetType(This,pType)	\
    ( (This)->lpVtbl -> GetType(This,pType) ) 

#define IltmmMediaType_SetType(This,refType)	\
    ( (This)->lpVtbl -> SetType(This,refType) ) 

#define IltmmMediaType_GetSubtype(This,pSubtype)	\
    ( (This)->lpVtbl -> GetSubtype(This,pSubtype) ) 

#define IltmmMediaType_SetSubtype(This,refSubtype)	\
    ( (This)->lpVtbl -> SetSubtype(This,refSubtype) ) 

#define IltmmMediaType_IsFixedSize(This)	\
    ( (This)->lpVtbl -> IsFixedSize(This) ) 

#define IltmmMediaType_SetFixedSize(This,fFixedSize)	\
    ( (This)->lpVtbl -> SetFixedSize(This,fFixedSize) ) 

#define IltmmMediaType_IsTemporalCompressed(This)	\
    ( (This)->lpVtbl -> IsTemporalCompressed(This) ) 

#define IltmmMediaType_SetTemporalCompression(This,fCompressed)	\
    ( (This)->lpVtbl -> SetTemporalCompression(This,fCompressed) ) 

#define IltmmMediaType_GetSampleSize(This,pulSize)	\
    ( (This)->lpVtbl -> GetSampleSize(This,pulSize) ) 

#define IltmmMediaType_SetSampleSize(This,ulSize)	\
    ( (This)->lpVtbl -> SetSampleSize(This,ulSize) ) 

#define IltmmMediaType_GetFormatType(This,pFormatType)	\
    ( (This)->lpVtbl -> GetFormatType(This,pFormatType) ) 

#define IltmmMediaType_SetFormatType(This,refFormatType)	\
    ( (This)->lpVtbl -> SetFormatType(This,refFormatType) ) 

#define IltmmMediaType_GetFormatSize(This,pulSize)	\
    ( (This)->lpVtbl -> GetFormatSize(This,pulSize) ) 

#define IltmmMediaType_SetFormatSize(This,ulSize)	\
    ( (This)->lpVtbl -> SetFormatSize(This,ulSize) ) 

#define IltmmMediaType_GetFormat(This,pFormat,pcbFormat)	\
    ( (This)->lpVtbl -> GetFormat(This,pFormat,pcbFormat) ) 

#define IltmmMediaType_SetFormat(This,pFormat,cbFormat)	\
    ( (This)->lpVtbl -> SetFormat(This,pFormat,cbFormat) ) 

#define IltmmMediaType_ResetFormat(This)	\
    ( (This)->lpVtbl -> ResetFormat(This) ) 

#define IltmmMediaType_GetPortableMediaType(This,pBuffer,pcbBuffer)	\
    ( (This)->lpVtbl -> GetPortableMediaType(This,pBuffer,pcbBuffer) ) 

#define IltmmMediaType_SetPortableMediaType(This,pBuffer,cbBuffer)	\
    ( (This)->lpVtbl -> SetPortableMediaType(This,pBuffer,cbBuffer) ) 

#define IltmmMediaType_ResetMediaType(This)	\
    ( (This)->lpVtbl -> ResetMediaType(This) ) 

#define IltmmMediaType_GetFormatPointer(This,ppFormat)	\
    ( (This)->lpVtbl -> GetFormatPointer(This,ppFormat) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmMediaType_INTERFACE_DEFINED__ */


#ifndef __IltmmMediaTypeDisp_INTERFACE_DEFINED__
#define __IltmmMediaTypeDisp_INTERFACE_DEFINED__

/* interface IltmmMediaTypeDisp */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmMediaTypeDisp;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016100B-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmMediaTypeDisp : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Subtype( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Subtype( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FixedSizeSamples( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_FixedSizeSamples( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TemporalCompression( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TemporalCompression( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SampleSize( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SampleSize( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FormatType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_FormatType( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Format( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FormatSize( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_FormatSize( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetPortableType( 
            /* [retval][out] */ VARIANT *Type) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetPortableType( 
            /* [in] */ VARIANT Type) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ResetMediaType( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ResetFormat( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetFormatData( 
            /* [in] */ long DataSize,
            /* [in] */ VARIANT Data) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetFormatData( 
            /* [in] */ long DataSize,
            /* [retval][out] */ VARIANT *Data) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmMediaTypeDispVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmMediaTypeDisp * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmMediaTypeDisp * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmMediaTypeDisp * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Subtype )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Subtype )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FixedSizeSamples )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FixedSizeSamples )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TemporalCompression )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TemporalCompression )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SampleSize )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SampleSize )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FormatType )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FormatType )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Format )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FormatSize )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FormatSize )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetPortableType )( 
            IltmmMediaTypeDisp * This,
            /* [retval][out] */ VARIANT *Type);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetPortableType )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ VARIANT Type);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetMediaType )( 
            IltmmMediaTypeDisp * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetFormat )( 
            IltmmMediaTypeDisp * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetFormatData )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ long DataSize,
            /* [in] */ VARIANT Data);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetFormatData )( 
            IltmmMediaTypeDisp * This,
            /* [in] */ long DataSize,
            /* [retval][out] */ VARIANT *Data);
        
        END_INTERFACE
    } IltmmMediaTypeDispVtbl;

    interface IltmmMediaTypeDisp
    {
        CONST_VTBL struct IltmmMediaTypeDispVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmMediaTypeDisp_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmMediaTypeDisp_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmMediaTypeDisp_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmMediaTypeDisp_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmMediaTypeDisp_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmMediaTypeDisp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmMediaTypeDisp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmMediaTypeDisp_get_Type(This,pVal)	\
    ( (This)->lpVtbl -> get_Type(This,pVal) ) 

#define IltmmMediaTypeDisp_put_Type(This,newVal)	\
    ( (This)->lpVtbl -> put_Type(This,newVal) ) 

#define IltmmMediaTypeDisp_get_Subtype(This,pVal)	\
    ( (This)->lpVtbl -> get_Subtype(This,pVal) ) 

#define IltmmMediaTypeDisp_put_Subtype(This,newVal)	\
    ( (This)->lpVtbl -> put_Subtype(This,newVal) ) 

#define IltmmMediaTypeDisp_get_FixedSizeSamples(This,pVal)	\
    ( (This)->lpVtbl -> get_FixedSizeSamples(This,pVal) ) 

#define IltmmMediaTypeDisp_put_FixedSizeSamples(This,newVal)	\
    ( (This)->lpVtbl -> put_FixedSizeSamples(This,newVal) ) 

#define IltmmMediaTypeDisp_get_TemporalCompression(This,pVal)	\
    ( (This)->lpVtbl -> get_TemporalCompression(This,pVal) ) 

#define IltmmMediaTypeDisp_put_TemporalCompression(This,newVal)	\
    ( (This)->lpVtbl -> put_TemporalCompression(This,newVal) ) 

#define IltmmMediaTypeDisp_get_SampleSize(This,pVal)	\
    ( (This)->lpVtbl -> get_SampleSize(This,pVal) ) 

#define IltmmMediaTypeDisp_put_SampleSize(This,newVal)	\
    ( (This)->lpVtbl -> put_SampleSize(This,newVal) ) 

#define IltmmMediaTypeDisp_get_FormatType(This,pVal)	\
    ( (This)->lpVtbl -> get_FormatType(This,pVal) ) 

#define IltmmMediaTypeDisp_put_FormatType(This,newVal)	\
    ( (This)->lpVtbl -> put_FormatType(This,newVal) ) 

#define IltmmMediaTypeDisp_get_Format(This,pVal)	\
    ( (This)->lpVtbl -> get_Format(This,pVal) ) 

#define IltmmMediaTypeDisp_get_FormatSize(This,pVal)	\
    ( (This)->lpVtbl -> get_FormatSize(This,pVal) ) 

#define IltmmMediaTypeDisp_put_FormatSize(This,newVal)	\
    ( (This)->lpVtbl -> put_FormatSize(This,newVal) ) 

#define IltmmMediaTypeDisp_GetPortableType(This,Type)	\
    ( (This)->lpVtbl -> GetPortableType(This,Type) ) 

#define IltmmMediaTypeDisp_SetPortableType(This,Type)	\
    ( (This)->lpVtbl -> SetPortableType(This,Type) ) 

#define IltmmMediaTypeDisp_ResetMediaType(This)	\
    ( (This)->lpVtbl -> ResetMediaType(This) ) 

#define IltmmMediaTypeDisp_ResetFormat(This)	\
    ( (This)->lpVtbl -> ResetFormat(This) ) 

#define IltmmMediaTypeDisp_SetFormatData(This,DataSize,Data)	\
    ( (This)->lpVtbl -> SetFormatData(This,DataSize,Data) ) 

#define IltmmMediaTypeDisp_GetFormatData(This,DataSize,Data)	\
    ( (This)->lpVtbl -> GetFormatData(This,DataSize,Data) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmMediaTypeDisp_INTERFACE_DEFINED__ */


#ifndef __IltmmWMMutualExclusion_INTERFACE_DEFINED__
#define __IltmmWMMutualExclusion_INTERFACE_DEFINED__

/* interface IltmmWMMutualExclusion */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmWMMutualExclusion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161056-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmWMMutualExclusion : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStream( 
            /* [in] */ long Index,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddStream( 
            /* [in] */ long StreamNum) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveStream( 
            /* [in] */ long StreamNum) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ BSTR newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmWMMutualExclusionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmWMMutualExclusion * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmWMMutualExclusion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmWMMutualExclusion * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmWMMutualExclusion * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmWMMutualExclusion * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmWMMutualExclusion * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmWMMutualExclusion * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStream )( 
            IltmmWMMutualExclusion * This,
            /* [in] */ long Index,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamCount )( 
            IltmmWMMutualExclusion * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddStream )( 
            IltmmWMMutualExclusion * This,
            /* [in] */ long StreamNum);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveStream )( 
            IltmmWMMutualExclusion * This,
            /* [in] */ long StreamNum);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IltmmWMMutualExclusion * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            IltmmWMMutualExclusion * This,
            /* [in] */ BSTR newVal);
        
        END_INTERFACE
    } IltmmWMMutualExclusionVtbl;

    interface IltmmWMMutualExclusion
    {
        CONST_VTBL struct IltmmWMMutualExclusionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmWMMutualExclusion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmWMMutualExclusion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmWMMutualExclusion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmWMMutualExclusion_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmWMMutualExclusion_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmWMMutualExclusion_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmWMMutualExclusion_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmWMMutualExclusion_GetStream(This,Index,pVal)	\
    ( (This)->lpVtbl -> GetStream(This,Index,pVal) ) 

#define IltmmWMMutualExclusion_get_StreamCount(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamCount(This,pVal) ) 

#define IltmmWMMutualExclusion_AddStream(This,StreamNum)	\
    ( (This)->lpVtbl -> AddStream(This,StreamNum) ) 

#define IltmmWMMutualExclusion_RemoveStream(This,StreamNum)	\
    ( (This)->lpVtbl -> RemoveStream(This,StreamNum) ) 

#define IltmmWMMutualExclusion_get_Type(This,pVal)	\
    ( (This)->lpVtbl -> get_Type(This,pVal) ) 

#define IltmmWMMutualExclusion_put_Type(This,newVal)	\
    ( (This)->lpVtbl -> put_Type(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmWMMutualExclusion_INTERFACE_DEFINED__ */


#ifndef __IltmmWMStreamConfig_INTERFACE_DEFINED__
#define __IltmmWMStreamConfig_INTERFACE_DEFINED__

/* interface IltmmWMStreamConfig */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmWMStreamConfig;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161054-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmWMStreamConfig : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamNumber( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_StreamNumber( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_StreamName( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConnectionName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ConnectionName( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Bitrate( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Bitrate( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_BufferWindow( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_BufferWindow( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMediaType( 
            /* [retval][out] */ IltmmMediaTypeDisp **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetMediaType( 
            /* [in] */ IltmmMediaTypeDisp *MediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_MaxKeyFrameSpacing( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_MaxKeyFrameSpacing( 
            /* [in] */ double newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Quality( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Quality( 
            /* [in] */ long newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmWMStreamConfigVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmWMStreamConfig * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmWMStreamConfig * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmWMStreamConfig * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmWMStreamConfig * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmWMStreamConfig * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmWMStreamConfig * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmWMStreamConfig * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamType )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamNumber )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StreamNumber )( 
            IltmmWMStreamConfig * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamName )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StreamName )( 
            IltmmWMStreamConfig * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionName )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConnectionName )( 
            IltmmWMStreamConfig * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bitrate )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bitrate )( 
            IltmmWMStreamConfig * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BufferWindow )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BufferWindow )( 
            IltmmWMStreamConfig * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMediaType )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ IltmmMediaTypeDisp **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            IltmmWMStreamConfig * This,
            /* [in] */ IltmmMediaTypeDisp *MediaType);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxKeyFrameSpacing )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxKeyFrameSpacing )( 
            IltmmWMStreamConfig * This,
            /* [in] */ double newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Quality )( 
            IltmmWMStreamConfig * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Quality )( 
            IltmmWMStreamConfig * This,
            /* [in] */ long newVal);
        
        END_INTERFACE
    } IltmmWMStreamConfigVtbl;

    interface IltmmWMStreamConfig
    {
        CONST_VTBL struct IltmmWMStreamConfigVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmWMStreamConfig_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmWMStreamConfig_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmWMStreamConfig_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmWMStreamConfig_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmWMStreamConfig_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmWMStreamConfig_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmWMStreamConfig_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmWMStreamConfig_get_StreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamType(This,pVal) ) 

#define IltmmWMStreamConfig_get_StreamNumber(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamNumber(This,pVal) ) 

#define IltmmWMStreamConfig_put_StreamNumber(This,newVal)	\
    ( (This)->lpVtbl -> put_StreamNumber(This,newVal) ) 

#define IltmmWMStreamConfig_get_StreamName(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamName(This,pVal) ) 

#define IltmmWMStreamConfig_put_StreamName(This,newVal)	\
    ( (This)->lpVtbl -> put_StreamName(This,newVal) ) 

#define IltmmWMStreamConfig_get_ConnectionName(This,pVal)	\
    ( (This)->lpVtbl -> get_ConnectionName(This,pVal) ) 

#define IltmmWMStreamConfig_put_ConnectionName(This,newVal)	\
    ( (This)->lpVtbl -> put_ConnectionName(This,newVal) ) 

#define IltmmWMStreamConfig_get_Bitrate(This,pVal)	\
    ( (This)->lpVtbl -> get_Bitrate(This,pVal) ) 

#define IltmmWMStreamConfig_put_Bitrate(This,newVal)	\
    ( (This)->lpVtbl -> put_Bitrate(This,newVal) ) 

#define IltmmWMStreamConfig_get_BufferWindow(This,pVal)	\
    ( (This)->lpVtbl -> get_BufferWindow(This,pVal) ) 

#define IltmmWMStreamConfig_put_BufferWindow(This,newVal)	\
    ( (This)->lpVtbl -> put_BufferWindow(This,newVal) ) 

#define IltmmWMStreamConfig_get_Type(This,pVal)	\
    ( (This)->lpVtbl -> get_Type(This,pVal) ) 

#define IltmmWMStreamConfig_GetMediaType(This,pVal)	\
    ( (This)->lpVtbl -> GetMediaType(This,pVal) ) 

#define IltmmWMStreamConfig_SetMediaType(This,MediaType)	\
    ( (This)->lpVtbl -> SetMediaType(This,MediaType) ) 

#define IltmmWMStreamConfig_get_MaxKeyFrameSpacing(This,pVal)	\
    ( (This)->lpVtbl -> get_MaxKeyFrameSpacing(This,pVal) ) 

#define IltmmWMStreamConfig_put_MaxKeyFrameSpacing(This,newVal)	\
    ( (This)->lpVtbl -> put_MaxKeyFrameSpacing(This,newVal) ) 

#define IltmmWMStreamConfig_get_Quality(This,pVal)	\
    ( (This)->lpVtbl -> get_Quality(This,pVal) ) 

#define IltmmWMStreamConfig_put_Quality(This,newVal)	\
    ( (This)->lpVtbl -> put_Quality(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmWMStreamConfig_INTERFACE_DEFINED__ */


#ifndef __IltmmWMProfile_INTERFACE_DEFINED__
#define __IltmmWMProfile_INTERFACE_DEFINED__

/* interface IltmmWMProfile */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmWMProfile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161052-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmWMProfile : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStream( 
            /* [in] */ long StreamIndex,
            /* [retval][out] */ IltmmWMStreamConfig **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStreamByNumber( 
            /* [in] */ long StreamNum,
            /* [retval][out] */ IltmmWMStreamConfig **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveStream( 
            /* [in] */ IltmmWMStreamConfig *Config) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveStreamByNumber( 
            /* [in] */ long StreamNum) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddStream( 
            /* [in] */ IltmmWMStreamConfig *Config) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReconfigStream( 
            /* [in] */ IltmmWMStreamConfig *Config) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateNewStream( 
            /* [in] */ BSTR StreamType,
            /* [retval][out] */ IltmmWMStreamConfig **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_MutualExclusionCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMutualExclusion( 
            /* [in] */ long MEIndex,
            /* [retval][out] */ IltmmWMMutualExclusion **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveMutualExclusion( 
            /* [in] */ IltmmWMMutualExclusion *ME) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddMutualExclusion( 
            /* [in] */ IltmmWMMutualExclusion *ME) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateNewMutualExclusion( 
            /* [retval][out] */ IltmmWMMutualExclusion **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmWMProfileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmWMProfile * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmWMProfile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmWMProfile * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmWMProfile * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmWMProfile * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmWMProfile * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmWMProfile * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            IltmmWMProfile * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IltmmWMProfile * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IltmmWMProfile * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmWMProfile * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IltmmWMProfile * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamCount )( 
            IltmmWMProfile * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStream )( 
            IltmmWMProfile * This,
            /* [in] */ long StreamIndex,
            /* [retval][out] */ IltmmWMStreamConfig **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStreamByNumber )( 
            IltmmWMProfile * This,
            /* [in] */ long StreamNum,
            /* [retval][out] */ IltmmWMStreamConfig **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveStream )( 
            IltmmWMProfile * This,
            /* [in] */ IltmmWMStreamConfig *Config);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveStreamByNumber )( 
            IltmmWMProfile * This,
            /* [in] */ long StreamNum);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddStream )( 
            IltmmWMProfile * This,
            /* [in] */ IltmmWMStreamConfig *Config);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReconfigStream )( 
            IltmmWMProfile * This,
            /* [in] */ IltmmWMStreamConfig *Config);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateNewStream )( 
            IltmmWMProfile * This,
            /* [in] */ BSTR StreamType,
            /* [retval][out] */ IltmmWMStreamConfig **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MutualExclusionCount )( 
            IltmmWMProfile * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMutualExclusion )( 
            IltmmWMProfile * This,
            /* [in] */ long MEIndex,
            /* [retval][out] */ IltmmWMMutualExclusion **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveMutualExclusion )( 
            IltmmWMProfile * This,
            /* [in] */ IltmmWMMutualExclusion *ME);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddMutualExclusion )( 
            IltmmWMProfile * This,
            /* [in] */ IltmmWMMutualExclusion *ME);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateNewMutualExclusion )( 
            IltmmWMProfile * This,
            /* [retval][out] */ IltmmWMMutualExclusion **pVal);
        
        END_INTERFACE
    } IltmmWMProfileVtbl;

    interface IltmmWMProfile
    {
        CONST_VTBL struct IltmmWMProfileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmWMProfile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmWMProfile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmWMProfile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmWMProfile_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmWMProfile_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmWMProfile_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmWMProfile_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmWMProfile_get_Version(This,pVal)	\
    ( (This)->lpVtbl -> get_Version(This,pVal) ) 

#define IltmmWMProfile_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IltmmWMProfile_put_Name(This,newVal)	\
    ( (This)->lpVtbl -> put_Name(This,newVal) ) 

#define IltmmWMProfile_get_Description(This,pVal)	\
    ( (This)->lpVtbl -> get_Description(This,pVal) ) 

#define IltmmWMProfile_put_Description(This,newVal)	\
    ( (This)->lpVtbl -> put_Description(This,newVal) ) 

#define IltmmWMProfile_get_StreamCount(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamCount(This,pVal) ) 

#define IltmmWMProfile_GetStream(This,StreamIndex,pVal)	\
    ( (This)->lpVtbl -> GetStream(This,StreamIndex,pVal) ) 

#define IltmmWMProfile_GetStreamByNumber(This,StreamNum,pVal)	\
    ( (This)->lpVtbl -> GetStreamByNumber(This,StreamNum,pVal) ) 

#define IltmmWMProfile_RemoveStream(This,Config)	\
    ( (This)->lpVtbl -> RemoveStream(This,Config) ) 

#define IltmmWMProfile_RemoveStreamByNumber(This,StreamNum)	\
    ( (This)->lpVtbl -> RemoveStreamByNumber(This,StreamNum) ) 

#define IltmmWMProfile_AddStream(This,Config)	\
    ( (This)->lpVtbl -> AddStream(This,Config) ) 

#define IltmmWMProfile_ReconfigStream(This,Config)	\
    ( (This)->lpVtbl -> ReconfigStream(This,Config) ) 

#define IltmmWMProfile_CreateNewStream(This,StreamType,pVal)	\
    ( (This)->lpVtbl -> CreateNewStream(This,StreamType,pVal) ) 

#define IltmmWMProfile_get_MutualExclusionCount(This,pVal)	\
    ( (This)->lpVtbl -> get_MutualExclusionCount(This,pVal) ) 

#define IltmmWMProfile_GetMutualExclusion(This,MEIndex,pVal)	\
    ( (This)->lpVtbl -> GetMutualExclusion(This,MEIndex,pVal) ) 

#define IltmmWMProfile_RemoveMutualExclusion(This,ME)	\
    ( (This)->lpVtbl -> RemoveMutualExclusion(This,ME) ) 

#define IltmmWMProfile_AddMutualExclusion(This,ME)	\
    ( (This)->lpVtbl -> AddMutualExclusion(This,ME) ) 

#define IltmmWMProfile_CreateNewMutualExclusion(This,pVal)	\
    ( (This)->lpVtbl -> CreateNewMutualExclusion(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmWMProfile_INTERFACE_DEFINED__ */


#ifndef __IltmmWMProfileManager1_INTERFACE_DEFINED__
#define __IltmmWMProfileManager1_INTERFACE_DEFINED__

/* interface IltmmWMProfileManager1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmWMProfileManager1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161050-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmWMProfileManager1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CreateEmptyProfile( 
            /* [in] */ long Version,
            /* [retval][out] */ IltmmWMProfile **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadProfileByID( 
            /* [in] */ BSTR ProfileID,
            /* [retval][out] */ IltmmWMProfile **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadProfileByData( 
            /* [in] */ BSTR Profile,
            /* [retval][out] */ IltmmWMProfile **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveProfile( 
            /* [in] */ IltmmWMProfile *Profile,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SystemProfileCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadSystemProfile( 
            /* [in] */ long ProfileIndex,
            /* [retval][out] */ IltmmWMProfile **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SystemProfileVersion( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SystemProfileVersion( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCodecInfoCount( 
            /* [in] */ BSTR Type,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCodecFormatCount( 
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCodecFormat( 
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [in] */ long FormatIndex,
            /* [retval][out] */ IltmmWMStreamConfig **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCodecName( 
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCodecFormatDesc( 
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [in] */ long FormatIndex,
            /* [retval][out] */ BSTR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmWMProfileManager1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmWMProfileManager1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmWMProfileManager1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmWMProfileManager1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateEmptyProfile )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ long Version,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadProfileByID )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ BSTR ProfileID,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadProfileByData )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ BSTR Profile,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveProfile )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ IltmmWMProfile *Profile,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SystemProfileCount )( 
            IltmmWMProfileManager1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSystemProfile )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ long ProfileIndex,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SystemProfileVersion )( 
            IltmmWMProfileManager1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SystemProfileVersion )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecInfoCount )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ BSTR Type,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecFormatCount )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecFormat )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [in] */ long FormatIndex,
            /* [retval][out] */ IltmmWMStreamConfig **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecName )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecFormatDesc )( 
            IltmmWMProfileManager1 * This,
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [in] */ long FormatIndex,
            /* [retval][out] */ BSTR *pVal);
        
        END_INTERFACE
    } IltmmWMProfileManager1Vtbl;

    interface IltmmWMProfileManager1
    {
        CONST_VTBL struct IltmmWMProfileManager1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmWMProfileManager1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmWMProfileManager1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmWMProfileManager1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmWMProfileManager1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmWMProfileManager1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmWMProfileManager1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmWMProfileManager1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmWMProfileManager1_CreateEmptyProfile(This,Version,pVal)	\
    ( (This)->lpVtbl -> CreateEmptyProfile(This,Version,pVal) ) 

#define IltmmWMProfileManager1_LoadProfileByID(This,ProfileID,pVal)	\
    ( (This)->lpVtbl -> LoadProfileByID(This,ProfileID,pVal) ) 

#define IltmmWMProfileManager1_LoadProfileByData(This,Profile,pVal)	\
    ( (This)->lpVtbl -> LoadProfileByData(This,Profile,pVal) ) 

#define IltmmWMProfileManager1_SaveProfile(This,Profile,pVal)	\
    ( (This)->lpVtbl -> SaveProfile(This,Profile,pVal) ) 

#define IltmmWMProfileManager1_get_SystemProfileCount(This,pVal)	\
    ( (This)->lpVtbl -> get_SystemProfileCount(This,pVal) ) 

#define IltmmWMProfileManager1_LoadSystemProfile(This,ProfileIndex,pVal)	\
    ( (This)->lpVtbl -> LoadSystemProfile(This,ProfileIndex,pVal) ) 

#define IltmmWMProfileManager1_get_SystemProfileVersion(This,pVal)	\
    ( (This)->lpVtbl -> get_SystemProfileVersion(This,pVal) ) 

#define IltmmWMProfileManager1_put_SystemProfileVersion(This,newVal)	\
    ( (This)->lpVtbl -> put_SystemProfileVersion(This,newVal) ) 

#define IltmmWMProfileManager1_GetCodecInfoCount(This,Type,pVal)	\
    ( (This)->lpVtbl -> GetCodecInfoCount(This,Type,pVal) ) 

#define IltmmWMProfileManager1_GetCodecFormatCount(This,Type,CodecIndex,pVal)	\
    ( (This)->lpVtbl -> GetCodecFormatCount(This,Type,CodecIndex,pVal) ) 

#define IltmmWMProfileManager1_GetCodecFormat(This,Type,CodecIndex,FormatIndex,pVal)	\
    ( (This)->lpVtbl -> GetCodecFormat(This,Type,CodecIndex,FormatIndex,pVal) ) 

#define IltmmWMProfileManager1_GetCodecName(This,Type,CodecIndex,pVal)	\
    ( (This)->lpVtbl -> GetCodecName(This,Type,CodecIndex,pVal) ) 

#define IltmmWMProfileManager1_GetCodecFormatDesc(This,Type,CodecIndex,FormatIndex,pVal)	\
    ( (This)->lpVtbl -> GetCodecFormatDesc(This,Type,CodecIndex,FormatIndex,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmWMProfileManager1_INTERFACE_DEFINED__ */


#ifndef __IltmmWMProfileManager_INTERFACE_DEFINED__
#define __IltmmWMProfileManager_INTERFACE_DEFINED__

/* interface IltmmWMProfileManager */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmWMProfileManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B9-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmWMProfileManager : public IltmmWMProfileManager1
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveProfileEx( 
            /* [in] */ IltmmWMProfile *Profile,
            long Flags,
            /* [retval][out] */ BSTR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmWMProfileManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmWMProfileManager * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmWMProfileManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmWMProfileManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmWMProfileManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmWMProfileManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmWMProfileManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmWMProfileManager * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CreateEmptyProfile )( 
            IltmmWMProfileManager * This,
            /* [in] */ long Version,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadProfileByID )( 
            IltmmWMProfileManager * This,
            /* [in] */ BSTR ProfileID,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadProfileByData )( 
            IltmmWMProfileManager * This,
            /* [in] */ BSTR Profile,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveProfile )( 
            IltmmWMProfileManager * This,
            /* [in] */ IltmmWMProfile *Profile,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SystemProfileCount )( 
            IltmmWMProfileManager * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSystemProfile )( 
            IltmmWMProfileManager * This,
            /* [in] */ long ProfileIndex,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SystemProfileVersion )( 
            IltmmWMProfileManager * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SystemProfileVersion )( 
            IltmmWMProfileManager * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecInfoCount )( 
            IltmmWMProfileManager * This,
            /* [in] */ BSTR Type,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecFormatCount )( 
            IltmmWMProfileManager * This,
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecFormat )( 
            IltmmWMProfileManager * This,
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [in] */ long FormatIndex,
            /* [retval][out] */ IltmmWMStreamConfig **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecName )( 
            IltmmWMProfileManager * This,
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCodecFormatDesc )( 
            IltmmWMProfileManager * This,
            /* [in] */ BSTR Type,
            /* [in] */ long CodecIndex,
            /* [in] */ long FormatIndex,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveProfileEx )( 
            IltmmWMProfileManager * This,
            /* [in] */ IltmmWMProfile *Profile,
            long Flags,
            /* [retval][out] */ BSTR *pVal);
        
        END_INTERFACE
    } IltmmWMProfileManagerVtbl;

    interface IltmmWMProfileManager
    {
        CONST_VTBL struct IltmmWMProfileManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmWMProfileManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmWMProfileManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmWMProfileManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmWMProfileManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmWMProfileManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmWMProfileManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmWMProfileManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmWMProfileManager_CreateEmptyProfile(This,Version,pVal)	\
    ( (This)->lpVtbl -> CreateEmptyProfile(This,Version,pVal) ) 

#define IltmmWMProfileManager_LoadProfileByID(This,ProfileID,pVal)	\
    ( (This)->lpVtbl -> LoadProfileByID(This,ProfileID,pVal) ) 

#define IltmmWMProfileManager_LoadProfileByData(This,Profile,pVal)	\
    ( (This)->lpVtbl -> LoadProfileByData(This,Profile,pVal) ) 

#define IltmmWMProfileManager_SaveProfile(This,Profile,pVal)	\
    ( (This)->lpVtbl -> SaveProfile(This,Profile,pVal) ) 

#define IltmmWMProfileManager_get_SystemProfileCount(This,pVal)	\
    ( (This)->lpVtbl -> get_SystemProfileCount(This,pVal) ) 

#define IltmmWMProfileManager_LoadSystemProfile(This,ProfileIndex,pVal)	\
    ( (This)->lpVtbl -> LoadSystemProfile(This,ProfileIndex,pVal) ) 

#define IltmmWMProfileManager_get_SystemProfileVersion(This,pVal)	\
    ( (This)->lpVtbl -> get_SystemProfileVersion(This,pVal) ) 

#define IltmmWMProfileManager_put_SystemProfileVersion(This,newVal)	\
    ( (This)->lpVtbl -> put_SystemProfileVersion(This,newVal) ) 

#define IltmmWMProfileManager_GetCodecInfoCount(This,Type,pVal)	\
    ( (This)->lpVtbl -> GetCodecInfoCount(This,Type,pVal) ) 

#define IltmmWMProfileManager_GetCodecFormatCount(This,Type,CodecIndex,pVal)	\
    ( (This)->lpVtbl -> GetCodecFormatCount(This,Type,CodecIndex,pVal) ) 

#define IltmmWMProfileManager_GetCodecFormat(This,Type,CodecIndex,FormatIndex,pVal)	\
    ( (This)->lpVtbl -> GetCodecFormat(This,Type,CodecIndex,FormatIndex,pVal) ) 

#define IltmmWMProfileManager_GetCodecName(This,Type,CodecIndex,pVal)	\
    ( (This)->lpVtbl -> GetCodecName(This,Type,CodecIndex,pVal) ) 

#define IltmmWMProfileManager_GetCodecFormatDesc(This,Type,CodecIndex,FormatIndex,pVal)	\
    ( (This)->lpVtbl -> GetCodecFormatDesc(This,Type,CodecIndex,FormatIndex,pVal) ) 


#define IltmmWMProfileManager_SaveProfileEx(This,Profile,Flags,pVal)	\
    ( (This)->lpVtbl -> SaveProfileEx(This,Profile,Flags,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmWMProfileManager_INTERFACE_DEFINED__ */


#ifndef __IltmmObjectWrapper_INTERFACE_DEFINED__
#define __IltmmObjectWrapper_INTERFACE_DEFINED__

/* interface IltmmObjectWrapper */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IltmmObjectWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161009-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmObjectWrapper : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetWrappedObject( 
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetWrappedObject( 
            /* [in] */ IUnknown *pObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmObjectWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmObjectWrapper * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmObjectWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmObjectWrapper * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetWrappedObject )( 
            IltmmObjectWrapper * This,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetWrappedObject )( 
            IltmmObjectWrapper * This,
            /* [in] */ IUnknown *pObject);
        
        END_INTERFACE
    } IltmmObjectWrapperVtbl;

    interface IltmmObjectWrapper
    {
        CONST_VTBL struct IltmmObjectWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmObjectWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmObjectWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmObjectWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmObjectWrapper_GetWrappedObject(This,ppObject)	\
    ( (This)->lpVtbl -> GetWrappedObject(This,ppObject) ) 

#define IltmmObjectWrapper_SetWrappedObject(This,pObject)	\
    ( (This)->lpVtbl -> SetWrappedObject(This,pObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmObjectWrapper_INTERFACE_DEFINED__ */


#ifndef __IltmmMediaSampleDisp_INTERFACE_DEFINED__
#define __IltmmMediaSampleDisp_INTERFACE_DEFINED__

/* interface IltmmMediaSampleDisp */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmMediaSampleDisp;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016100C-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmMediaSampleDisp : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SyncPoint( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SyncPoint( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Preroll( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Preroll( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ActualDataLength( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ActualDataLength( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Discontinuity( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Discontinuity( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_BufferSize( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMediaType( 
            /* [retval][out] */ IltmmMediaTypeDisp **pMediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetMediaType( 
            /* [in] */ IltmmMediaTypeDisp *MediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetData( 
            /* [in] */ long DataSize,
            /* [in] */ VARIANT Data) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetData( 
            /* [in] */ long DataSize,
            /* [retval][out] */ VARIANT *Data) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetTime( 
            /* [in] */ long TimeStartHi,
            /* [in] */ long TimeStartLo,
            /* [in] */ long TimeStopHi,
            /* [in] */ long TimeStopLo) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetTime( 
            /* [out] */ long *TimeStartHi,
            /* [out] */ long *TimeStartLo,
            /* [out] */ long *TimeStopHi,
            /* [out] */ long *TimeStopLo) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetMediaTime( 
            /* [in] */ long TimeStartHi,
            /* [in] */ long TimeStartLo,
            /* [in] */ long TimeStopHi,
            /* [in] */ long TimeStopLo) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMediaTime( 
            /* [out] */ long *TimeStartHi,
            /* [out] */ long *TimeStartLo,
            /* [out] */ long *TimeStopHi,
            /* [out] */ long *TimeStopLo) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetTime( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetMediaTime( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Buffer( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmMediaSampleDispVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmMediaSampleDisp * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmMediaSampleDisp * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmMediaSampleDisp * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SyncPoint )( 
            IltmmMediaSampleDisp * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SyncPoint )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preroll )( 
            IltmmMediaSampleDisp * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preroll )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualDataLength )( 
            IltmmMediaSampleDisp * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ActualDataLength )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Discontinuity )( 
            IltmmMediaSampleDisp * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Discontinuity )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BufferSize )( 
            IltmmMediaSampleDisp * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMediaType )( 
            IltmmMediaSampleDisp * This,
            /* [retval][out] */ IltmmMediaTypeDisp **pMediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ IltmmMediaTypeDisp *MediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetData )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ long DataSize,
            /* [in] */ VARIANT Data);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetData )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ long DataSize,
            /* [retval][out] */ VARIANT *Data);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetTime )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ long TimeStartHi,
            /* [in] */ long TimeStartLo,
            /* [in] */ long TimeStopHi,
            /* [in] */ long TimeStopLo);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetTime )( 
            IltmmMediaSampleDisp * This,
            /* [out] */ long *TimeStartHi,
            /* [out] */ long *TimeStartLo,
            /* [out] */ long *TimeStopHi,
            /* [out] */ long *TimeStopLo);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetMediaTime )( 
            IltmmMediaSampleDisp * This,
            /* [in] */ long TimeStartHi,
            /* [in] */ long TimeStartLo,
            /* [in] */ long TimeStopHi,
            /* [in] */ long TimeStopLo);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMediaTime )( 
            IltmmMediaSampleDisp * This,
            /* [out] */ long *TimeStartHi,
            /* [out] */ long *TimeStartLo,
            /* [out] */ long *TimeStopHi,
            /* [out] */ long *TimeStopLo);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTime )( 
            IltmmMediaSampleDisp * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetMediaTime )( 
            IltmmMediaSampleDisp * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Buffer )( 
            IltmmMediaSampleDisp * This,
            /* [retval][out] */ VARIANT *pVal);
        
        END_INTERFACE
    } IltmmMediaSampleDispVtbl;

    interface IltmmMediaSampleDisp
    {
        CONST_VTBL struct IltmmMediaSampleDispVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmMediaSampleDisp_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmMediaSampleDisp_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmMediaSampleDisp_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmMediaSampleDisp_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmMediaSampleDisp_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmMediaSampleDisp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmMediaSampleDisp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmMediaSampleDisp_get_SyncPoint(This,pVal)	\
    ( (This)->lpVtbl -> get_SyncPoint(This,pVal) ) 

#define IltmmMediaSampleDisp_put_SyncPoint(This,newVal)	\
    ( (This)->lpVtbl -> put_SyncPoint(This,newVal) ) 

#define IltmmMediaSampleDisp_get_Preroll(This,pVal)	\
    ( (This)->lpVtbl -> get_Preroll(This,pVal) ) 

#define IltmmMediaSampleDisp_put_Preroll(This,newVal)	\
    ( (This)->lpVtbl -> put_Preroll(This,newVal) ) 

#define IltmmMediaSampleDisp_get_ActualDataLength(This,pVal)	\
    ( (This)->lpVtbl -> get_ActualDataLength(This,pVal) ) 

#define IltmmMediaSampleDisp_put_ActualDataLength(This,newVal)	\
    ( (This)->lpVtbl -> put_ActualDataLength(This,newVal) ) 

#define IltmmMediaSampleDisp_get_Discontinuity(This,pVal)	\
    ( (This)->lpVtbl -> get_Discontinuity(This,pVal) ) 

#define IltmmMediaSampleDisp_put_Discontinuity(This,newVal)	\
    ( (This)->lpVtbl -> put_Discontinuity(This,newVal) ) 

#define IltmmMediaSampleDisp_get_BufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_BufferSize(This,pVal) ) 

#define IltmmMediaSampleDisp_GetMediaType(This,pMediaType)	\
    ( (This)->lpVtbl -> GetMediaType(This,pMediaType) ) 

#define IltmmMediaSampleDisp_SetMediaType(This,MediaType)	\
    ( (This)->lpVtbl -> SetMediaType(This,MediaType) ) 

#define IltmmMediaSampleDisp_SetData(This,DataSize,Data)	\
    ( (This)->lpVtbl -> SetData(This,DataSize,Data) ) 

#define IltmmMediaSampleDisp_GetData(This,DataSize,Data)	\
    ( (This)->lpVtbl -> GetData(This,DataSize,Data) ) 

#define IltmmMediaSampleDisp_SetTime(This,TimeStartHi,TimeStartLo,TimeStopHi,TimeStopLo)	\
    ( (This)->lpVtbl -> SetTime(This,TimeStartHi,TimeStartLo,TimeStopHi,TimeStopLo) ) 

#define IltmmMediaSampleDisp_GetTime(This,TimeStartHi,TimeStartLo,TimeStopHi,TimeStopLo)	\
    ( (This)->lpVtbl -> GetTime(This,TimeStartHi,TimeStartLo,TimeStopHi,TimeStopLo) ) 

#define IltmmMediaSampleDisp_SetMediaTime(This,TimeStartHi,TimeStartLo,TimeStopHi,TimeStopLo)	\
    ( (This)->lpVtbl -> SetMediaTime(This,TimeStartHi,TimeStartLo,TimeStopHi,TimeStopLo) ) 

#define IltmmMediaSampleDisp_GetMediaTime(This,TimeStartHi,TimeStartLo,TimeStopHi,TimeStopLo)	\
    ( (This)->lpVtbl -> GetMediaTime(This,TimeStartHi,TimeStartLo,TimeStopHi,TimeStopLo) ) 

#define IltmmMediaSampleDisp_ResetTime(This)	\
    ( (This)->lpVtbl -> ResetTime(This) ) 

#define IltmmMediaSampleDisp_ResetMediaTime(This)	\
    ( (This)->lpVtbl -> ResetMediaTime(This) ) 

#define IltmmMediaSampleDisp_get_Buffer(This,pVal)	\
    ( (This)->lpVtbl -> get_Buffer(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmMediaSampleDisp_INTERFACE_DEFINED__ */


#ifndef __IltmmSampleSource_INTERFACE_DEFINED__
#define __IltmmSampleSource_INTERFACE_DEFINED__

/* interface IltmmSampleSource */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmSampleSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016100D-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmSampleSource : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMediaType( 
            /* [retval][out] */ IltmmMediaTypeDisp **MediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetMediaType( 
            /* [in] */ IltmmMediaTypeDisp *MediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSampleBuffer( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ IltmmMediaSampleDisp **MediaSample) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeliverSample( 
            /* [in] */ long TimeOut,
            IltmmMediaSampleDisp *MediaSample) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeliverEndOfStream( 
            /* [in] */ long TimeOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmSampleSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmSampleSource * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmSampleSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmSampleSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmSampleSource * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmSampleSource * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmSampleSource * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmSampleSource * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMediaType )( 
            IltmmSampleSource * This,
            /* [retval][out] */ IltmmMediaTypeDisp **MediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            IltmmSampleSource * This,
            /* [in] */ IltmmMediaTypeDisp *MediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSampleBuffer )( 
            IltmmSampleSource * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IltmmMediaSampleDisp **MediaSample);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeliverSample )( 
            IltmmSampleSource * This,
            /* [in] */ long TimeOut,
            IltmmMediaSampleDisp *MediaSample);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeliverEndOfStream )( 
            IltmmSampleSource * This,
            /* [in] */ long TimeOut);
        
        END_INTERFACE
    } IltmmSampleSourceVtbl;

    interface IltmmSampleSource
    {
        CONST_VTBL struct IltmmSampleSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmSampleSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmSampleSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmSampleSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmSampleSource_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmSampleSource_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmSampleSource_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmSampleSource_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmSampleSource_GetMediaType(This,MediaType)	\
    ( (This)->lpVtbl -> GetMediaType(This,MediaType) ) 

#define IltmmSampleSource_SetMediaType(This,MediaType)	\
    ( (This)->lpVtbl -> SetMediaType(This,MediaType) ) 

#define IltmmSampleSource_GetSampleBuffer(This,TimeOut,MediaSample)	\
    ( (This)->lpVtbl -> GetSampleBuffer(This,TimeOut,MediaSample) ) 

#define IltmmSampleSource_DeliverSample(This,TimeOut,MediaSample)	\
    ( (This)->lpVtbl -> DeliverSample(This,TimeOut,MediaSample) ) 

#define IltmmSampleSource_DeliverEndOfStream(This,TimeOut)	\
    ( (This)->lpVtbl -> DeliverEndOfStream(This,TimeOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmSampleSource_INTERFACE_DEFINED__ */


#ifndef __IltmmMultiStreamSource_INTERFACE_DEFINED__
#define __IltmmMultiStreamSource_INTERFACE_DEFINED__

/* interface IltmmMultiStreamSource */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmMultiStreamSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161063-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmMultiStreamSource : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamCount( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_StreamCount( 
            /* [in] */ long Count) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetMediaType( 
            /* [in] */ long Stream,
            /* [in] */ IltmmMediaTypeDisp *MediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetMediaType( 
            /* [in] */ long Stream,
            /* [retval][out] */ IltmmMediaTypeDisp **MediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSampleBuffer( 
            /* [in] */ long Stream,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IltmmMediaSampleDisp **MediaSample) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeliverSample( 
            /* [in] */ long Stream,
            /* [in] */ long TimeOut,
            IltmmMediaSampleDisp *MediaSample) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeliverEndOfStream( 
            /* [in] */ long Stream,
            /* [in] */ long TimeOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmMultiStreamSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmMultiStreamSource * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmMultiStreamSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmMultiStreamSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmMultiStreamSource * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmMultiStreamSource * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmMultiStreamSource * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmMultiStreamSource * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamCount )( 
            IltmmMultiStreamSource * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StreamCount )( 
            IltmmMultiStreamSource * This,
            /* [in] */ long Count);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            IltmmMultiStreamSource * This,
            /* [in] */ long Stream,
            /* [in] */ IltmmMediaTypeDisp *MediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetMediaType )( 
            IltmmMultiStreamSource * This,
            /* [in] */ long Stream,
            /* [retval][out] */ IltmmMediaTypeDisp **MediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSampleBuffer )( 
            IltmmMultiStreamSource * This,
            /* [in] */ long Stream,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IltmmMediaSampleDisp **MediaSample);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeliverSample )( 
            IltmmMultiStreamSource * This,
            /* [in] */ long Stream,
            /* [in] */ long TimeOut,
            IltmmMediaSampleDisp *MediaSample);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeliverEndOfStream )( 
            IltmmMultiStreamSource * This,
            /* [in] */ long Stream,
            /* [in] */ long TimeOut);
        
        END_INTERFACE
    } IltmmMultiStreamSourceVtbl;

    interface IltmmMultiStreamSource
    {
        CONST_VTBL struct IltmmMultiStreamSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmMultiStreamSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmMultiStreamSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmMultiStreamSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmMultiStreamSource_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmMultiStreamSource_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmMultiStreamSource_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmMultiStreamSource_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmMultiStreamSource_get_StreamCount(This,Count)	\
    ( (This)->lpVtbl -> get_StreamCount(This,Count) ) 

#define IltmmMultiStreamSource_put_StreamCount(This,Count)	\
    ( (This)->lpVtbl -> put_StreamCount(This,Count) ) 

#define IltmmMultiStreamSource_SetMediaType(This,Stream,MediaType)	\
    ( (This)->lpVtbl -> SetMediaType(This,Stream,MediaType) ) 

#define IltmmMultiStreamSource_GetMediaType(This,Stream,MediaType)	\
    ( (This)->lpVtbl -> GetMediaType(This,Stream,MediaType) ) 

#define IltmmMultiStreamSource_GetSampleBuffer(This,Stream,TimeOut,MediaSample)	\
    ( (This)->lpVtbl -> GetSampleBuffer(This,Stream,TimeOut,MediaSample) ) 

#define IltmmMultiStreamSource_DeliverSample(This,Stream,TimeOut,MediaSample)	\
    ( (This)->lpVtbl -> DeliverSample(This,Stream,TimeOut,MediaSample) ) 

#define IltmmMultiStreamSource_DeliverEndOfStream(This,Stream,TimeOut)	\
    ( (This)->lpVtbl -> DeliverEndOfStream(This,Stream,TimeOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmMultiStreamSource_INTERFACE_DEFINED__ */


#ifndef __IltmmSampleTarget_INTERFACE_DEFINED__
#define __IltmmSampleTarget_INTERFACE_DEFINED__

/* interface IltmmSampleTarget */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmSampleTarget;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016100E-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmSampleTarget : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetAcceptedMediaType( 
            /* [in] */ IltmmMediaTypeDisp *pMediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAcceptedMediaType( 
            /* [retval][out] */ IltmmMediaTypeDisp **ppMediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConnectedMediaType( 
            /* [retval][out] */ IltmmMediaTypeDisp **ppMediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSample( 
            /* [in] */ long lTimeout,
            /* [retval][out] */ IltmmMediaSampleDisp **ppMediaSample) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmSampleTargetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmSampleTarget * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmSampleTarget * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmSampleTarget * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmSampleTarget * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmSampleTarget * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmSampleTarget * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmSampleTarget * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetAcceptedMediaType )( 
            IltmmSampleTarget * This,
            /* [in] */ IltmmMediaTypeDisp *pMediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAcceptedMediaType )( 
            IltmmSampleTarget * This,
            /* [retval][out] */ IltmmMediaTypeDisp **ppMediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnectedMediaType )( 
            IltmmSampleTarget * This,
            /* [retval][out] */ IltmmMediaTypeDisp **ppMediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSample )( 
            IltmmSampleTarget * This,
            /* [in] */ long lTimeout,
            /* [retval][out] */ IltmmMediaSampleDisp **ppMediaSample);
        
        END_INTERFACE
    } IltmmSampleTargetVtbl;

    interface IltmmSampleTarget
    {
        CONST_VTBL struct IltmmSampleTargetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmSampleTarget_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmSampleTarget_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmSampleTarget_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmSampleTarget_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmSampleTarget_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmSampleTarget_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmSampleTarget_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmSampleTarget_SetAcceptedMediaType(This,pMediaType)	\
    ( (This)->lpVtbl -> SetAcceptedMediaType(This,pMediaType) ) 

#define IltmmSampleTarget_GetAcceptedMediaType(This,ppMediaType)	\
    ( (This)->lpVtbl -> GetAcceptedMediaType(This,ppMediaType) ) 

#define IltmmSampleTarget_GetConnectedMediaType(This,ppMediaType)	\
    ( (This)->lpVtbl -> GetConnectedMediaType(This,ppMediaType) ) 

#define IltmmSampleTarget_GetSample(This,lTimeout,ppMediaSample)	\
    ( (This)->lpVtbl -> GetSample(This,lTimeout,ppMediaSample) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmSampleTarget_INTERFACE_DEFINED__ */


#ifndef __IltmmMultiStreamTarget_INTERFACE_DEFINED__
#define __IltmmMultiStreamTarget_INTERFACE_DEFINED__

/* interface IltmmMultiStreamTarget */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmMultiStreamTarget;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161065-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmMultiStreamTarget : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamCount( 
            /* [retval][out] */ long *Count) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_StreamCount( 
            /* [in] */ long Count) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetAcceptedMediaType( 
            /* [in] */ long Stream,
            /* [in] */ IltmmMediaTypeDisp *pMediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAcceptedMediaType( 
            /* [in] */ long Stream,
            /* [retval][out] */ IltmmMediaTypeDisp **ppMediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetConnectedMediaType( 
            /* [in] */ long Stream,
            /* [retval][out] */ IltmmMediaTypeDisp **ppMediaType) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSample( 
            /* [in] */ long Stream,
            /* [in] */ long lTimeout,
            /* [retval][out] */ IltmmMediaSampleDisp **ppMediaSample) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE WaitForSample( 
            /* [in] */ long lTimeout,
            /* [retval][out] */ long *Stream) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmMultiStreamTargetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmMultiStreamTarget * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmMultiStreamTarget * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmMultiStreamTarget * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamCount )( 
            IltmmMultiStreamTarget * This,
            /* [retval][out] */ long *Count);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StreamCount )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ long Count);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetAcceptedMediaType )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ long Stream,
            /* [in] */ IltmmMediaTypeDisp *pMediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAcceptedMediaType )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ long Stream,
            /* [retval][out] */ IltmmMediaTypeDisp **ppMediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnectedMediaType )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ long Stream,
            /* [retval][out] */ IltmmMediaTypeDisp **ppMediaType);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSample )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ long Stream,
            /* [in] */ long lTimeout,
            /* [retval][out] */ IltmmMediaSampleDisp **ppMediaSample);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *WaitForSample )( 
            IltmmMultiStreamTarget * This,
            /* [in] */ long lTimeout,
            /* [retval][out] */ long *Stream);
        
        END_INTERFACE
    } IltmmMultiStreamTargetVtbl;

    interface IltmmMultiStreamTarget
    {
        CONST_VTBL struct IltmmMultiStreamTargetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmMultiStreamTarget_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmMultiStreamTarget_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmMultiStreamTarget_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmMultiStreamTarget_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmMultiStreamTarget_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmMultiStreamTarget_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmMultiStreamTarget_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmMultiStreamTarget_get_StreamCount(This,Count)	\
    ( (This)->lpVtbl -> get_StreamCount(This,Count) ) 

#define IltmmMultiStreamTarget_put_StreamCount(This,Count)	\
    ( (This)->lpVtbl -> put_StreamCount(This,Count) ) 

#define IltmmMultiStreamTarget_SetAcceptedMediaType(This,Stream,pMediaType)	\
    ( (This)->lpVtbl -> SetAcceptedMediaType(This,Stream,pMediaType) ) 

#define IltmmMultiStreamTarget_GetAcceptedMediaType(This,Stream,ppMediaType)	\
    ( (This)->lpVtbl -> GetAcceptedMediaType(This,Stream,ppMediaType) ) 

#define IltmmMultiStreamTarget_GetConnectedMediaType(This,Stream,ppMediaType)	\
    ( (This)->lpVtbl -> GetConnectedMediaType(This,Stream,ppMediaType) ) 

#define IltmmMultiStreamTarget_GetSample(This,Stream,lTimeout,ppMediaSample)	\
    ( (This)->lpVtbl -> GetSample(This,Stream,lTimeout,ppMediaSample) ) 

#define IltmmMultiStreamTarget_WaitForSample(This,lTimeout,Stream)	\
    ( (This)->lpVtbl -> WaitForSample(This,lTimeout,Stream) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmMultiStreamTarget_INTERFACE_DEFINED__ */


#ifndef __IltmmVCRControl_INTERFACE_DEFINED__
#define __IltmmVCRControl_INTERFACE_DEFINED__

/* interface IltmmVCRControl */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmVCRControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016103E-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmVCRControl : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Play( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Pause( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE FastForward( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Rewind( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Record( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PauseRecording( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StepForward( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StepBackward( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE FastestForward( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SlowestForward( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE FastestReverse( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SlowestReverse( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReadTimecode( 
            /* [retval][out] */ long *Timecode) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SeekTimecode( 
            /* [in] */ long Timecode) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DeviceType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_MediaType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmVCRControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmVCRControl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmVCRControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmVCRControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmVCRControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmVCRControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmVCRControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmVCRControl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Play )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FastForward )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Rewind )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Record )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseRecording )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StepForward )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StepBackward )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FastestForward )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SlowestForward )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FastestReverse )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SlowestReverse )( 
            IltmmVCRControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadTimecode )( 
            IltmmVCRControl * This,
            /* [retval][out] */ long *Timecode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekTimecode )( 
            IltmmVCRControl * This,
            /* [in] */ long Timecode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DeviceType )( 
            IltmmVCRControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MediaType )( 
            IltmmVCRControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmVCRControl * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmVCRControlVtbl;

    interface IltmmVCRControl
    {
        CONST_VTBL struct IltmmVCRControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmVCRControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmVCRControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmVCRControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmVCRControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmVCRControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmVCRControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmVCRControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmVCRControl_Play(This)	\
    ( (This)->lpVtbl -> Play(This) ) 

#define IltmmVCRControl_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmVCRControl_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmVCRControl_FastForward(This)	\
    ( (This)->lpVtbl -> FastForward(This) ) 

#define IltmmVCRControl_Rewind(This)	\
    ( (This)->lpVtbl -> Rewind(This) ) 

#define IltmmVCRControl_Record(This)	\
    ( (This)->lpVtbl -> Record(This) ) 

#define IltmmVCRControl_PauseRecording(This)	\
    ( (This)->lpVtbl -> PauseRecording(This) ) 

#define IltmmVCRControl_StepForward(This)	\
    ( (This)->lpVtbl -> StepForward(This) ) 

#define IltmmVCRControl_StepBackward(This)	\
    ( (This)->lpVtbl -> StepBackward(This) ) 

#define IltmmVCRControl_FastestForward(This)	\
    ( (This)->lpVtbl -> FastestForward(This) ) 

#define IltmmVCRControl_SlowestForward(This)	\
    ( (This)->lpVtbl -> SlowestForward(This) ) 

#define IltmmVCRControl_FastestReverse(This)	\
    ( (This)->lpVtbl -> FastestReverse(This) ) 

#define IltmmVCRControl_SlowestReverse(This)	\
    ( (This)->lpVtbl -> SlowestReverse(This) ) 

#define IltmmVCRControl_ReadTimecode(This,Timecode)	\
    ( (This)->lpVtbl -> ReadTimecode(This,Timecode) ) 

#define IltmmVCRControl_SeekTimecode(This,Timecode)	\
    ( (This)->lpVtbl -> SeekTimecode(This,Timecode) ) 

#define IltmmVCRControl_get_DeviceType(This,pVal)	\
    ( (This)->lpVtbl -> get_DeviceType(This,pVal) ) 

#define IltmmVCRControl_get_MediaType(This,pVal)	\
    ( (This)->lpVtbl -> get_MediaType(This,pVal) ) 

#define IltmmVCRControl_get_Mode(This,pVal)	\
    ( (This)->lpVtbl -> get_Mode(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmVCRControl_INTERFACE_DEFINED__ */


#ifndef __IltmmDVDControl_INTERFACE_DEFINED__
#define __IltmmDVDControl_INTERFACE_DEFINED__

/* interface IltmmDVDControl */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmDVDControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016107E-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmDVDControl : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetButtonAtPosition( 
            /* [in] */ long x,
            /* [in] */ long y,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetButtonTop( 
            /* [in] */ long button,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetButtonLeft( 
            /* [in] */ long button,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetButtonWidth( 
            /* [in] */ long button,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetButtonHeight( 
            /* [in] */ long button,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentButton( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ButtonsAvailable( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultMenuLanguage( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_DefaultMenuLanguage( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetNumberOfChapters( 
            /* [in] */ long title,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TotalTitleTime( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TitleTimecodeFlags( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentAngle( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentAngle( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AnglesAvailable( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentUOPS( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetAudioLanguage( 
            /* [in] */ long stream,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentAudioStream( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentAudioStream( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioStreamsAvailable( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultAudioLanguage( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultAudioLanguageExt( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsAudioStreamEnabled( 
            /* [in] */ long stream,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentSubpictureStream( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentSubpictureStream( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubpictureStreamsAvailable( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultSubpictureLanguage( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultSubpictureLanguageExt( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSubpictureLanguage( 
            /* [in] */ long stream,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsSubpictureStreamEnabled( 
            /* [in] */ long stream,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PlayerParentalLevel( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PlayerParentalCountry( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetTitleParentalLevels( 
            /* [in] */ long title,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentDomain( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Pause( 
            /* [in] */ VARIANT_BOOL State) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayAtTime( 
            /* [in] */ long timecode) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayAtTimeInTitle( 
            /* [in] */ long title,
            /* [in] */ long timecode) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayBackwards( 
            /* [in] */ double speed) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayChapter( 
            /* [in] */ long chapter) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayChapterInTitle( 
            /* [in] */ long title,
            /* [in] */ long chapter) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayChaptersAutoStop( 
            /* [in] */ long title,
            /* [in] */ long chapter,
            /* [in] */ long chapterstoplay) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayForwards( 
            /* [in] */ double speed) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayNextChapter( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayPeriodInTitleAutoStop( 
            /* [in] */ long title,
            /* [in] */ long starttime,
            /* [in] */ long stoptime) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayPrevChapter( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PlayTitle( 
            /* [in] */ long title) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplayChapter( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ActivateAtPosition( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ActivateButton( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Resume( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReturnFromSubmenu( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectAtPosition( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectAndActivateButton( 
            /* [in] */ long button) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectButton( 
            /* [in] */ long button) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectRelativeButton( 
            /* [in] */ long dir) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowMenu( 
            /* [in] */ long menu) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StillOff( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectDefaultAudioLanguage( 
            /* [in] */ long language,
            /* [in] */ long ext) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectDefaultSubpictureLanguage( 
            /* [in] */ long language,
            /* [in] */ long ext) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentTitle( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentChapter( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentDiscSide( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentTime( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentVolume( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VolumesAvailable( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TitlesAvailable( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDDirectory( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_DVDDirectory( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetGPRM( 
            /* [in] */ long index,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSPRM( 
            /* [in] */ long index,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetGPRM( 
            /* [in] */ long index,
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDUniqueID( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetDVDTextLanguageLCID( 
            /* [in] */ long index,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDTextNumberOfLanguages( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetDVDTextNumberOfStrings( 
            /* [in] */ long index,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetDVDTextString( 
            /* [in] */ long langindex,
            /* [in] */ long strindex,
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetDVDTextStringType( 
            /* [in] */ long langindex,
            /* [in] */ long strindex,
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectParentalCountry( 
            /* [in] */ long country,
            /* [in] */ BSTR username,
            /* [in] */ BSTR password) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SelectParentalLevel( 
            /* [in] */ long level,
            /* [in] */ BSTR username,
            /* [in] */ BSTR password) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AcceptParentalLevelChange( 
            /* [in] */ VARIANT_BOOL accept) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE NotifyParentalLevelChange( 
            /* [in] */ VARIANT_BOOL notify) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubpictureOn( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubpictureOn( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ChangeDVDRegion( 
            /* [in] */ long hWnd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmDVDControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmDVDControl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmDVDControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmDVDControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmDVDControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmDVDControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmDVDControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmDVDControl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetButtonAtPosition )( 
            IltmmDVDControl * This,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetButtonTop )( 
            IltmmDVDControl * This,
            /* [in] */ long button,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetButtonLeft )( 
            IltmmDVDControl * This,
            /* [in] */ long button,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetButtonWidth )( 
            IltmmDVDControl * This,
            /* [in] */ long button,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetButtonHeight )( 
            IltmmDVDControl * This,
            /* [in] */ long button,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentButton )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ButtonsAvailable )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultMenuLanguage )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultMenuLanguage )( 
            IltmmDVDControl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetNumberOfChapters )( 
            IltmmDVDControl * This,
            /* [in] */ long title,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TotalTitleTime )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TitleTimecodeFlags )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAngle )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentAngle )( 
            IltmmDVDControl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnglesAvailable )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentUOPS )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetAudioLanguage )( 
            IltmmDVDControl * This,
            /* [in] */ long stream,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentAudioStream )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentAudioStream )( 
            IltmmDVDControl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioStreamsAvailable )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultAudioLanguage )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultAudioLanguageExt )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsAudioStreamEnabled )( 
            IltmmDVDControl * This,
            /* [in] */ long stream,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentSubpictureStream )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentSubpictureStream )( 
            IltmmDVDControl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubpictureStreamsAvailable )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultSubpictureLanguage )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultSubpictureLanguageExt )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubpictureLanguage )( 
            IltmmDVDControl * This,
            /* [in] */ long stream,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsSubpictureStreamEnabled )( 
            IltmmDVDControl * This,
            /* [in] */ long stream,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayerParentalLevel )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayerParentalCountry )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetTitleParentalLevels )( 
            IltmmDVDControl * This,
            /* [in] */ long title,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentDomain )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmDVDControl * This,
            /* [in] */ VARIANT_BOOL State);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayAtTime )( 
            IltmmDVDControl * This,
            /* [in] */ long timecode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayAtTimeInTitle )( 
            IltmmDVDControl * This,
            /* [in] */ long title,
            /* [in] */ long timecode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayBackwards )( 
            IltmmDVDControl * This,
            /* [in] */ double speed);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayChapter )( 
            IltmmDVDControl * This,
            /* [in] */ long chapter);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayChapterInTitle )( 
            IltmmDVDControl * This,
            /* [in] */ long title,
            /* [in] */ long chapter);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayChaptersAutoStop )( 
            IltmmDVDControl * This,
            /* [in] */ long title,
            /* [in] */ long chapter,
            /* [in] */ long chapterstoplay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayForwards )( 
            IltmmDVDControl * This,
            /* [in] */ double speed);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayNextChapter )( 
            IltmmDVDControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayPeriodInTitleAutoStop )( 
            IltmmDVDControl * This,
            /* [in] */ long title,
            /* [in] */ long starttime,
            /* [in] */ long stoptime);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayPrevChapter )( 
            IltmmDVDControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PlayTitle )( 
            IltmmDVDControl * This,
            /* [in] */ long title);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplayChapter )( 
            IltmmDVDControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmDVDControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ActivateAtPosition )( 
            IltmmDVDControl * This,
            /* [in] */ long x,
            /* [in] */ long y);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ActivateButton )( 
            IltmmDVDControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Resume )( 
            IltmmDVDControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReturnFromSubmenu )( 
            IltmmDVDControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectAtPosition )( 
            IltmmDVDControl * This,
            /* [in] */ long x,
            /* [in] */ long y);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectAndActivateButton )( 
            IltmmDVDControl * This,
            /* [in] */ long button);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectButton )( 
            IltmmDVDControl * This,
            /* [in] */ long button);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectRelativeButton )( 
            IltmmDVDControl * This,
            /* [in] */ long dir);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowMenu )( 
            IltmmDVDControl * This,
            /* [in] */ long menu);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StillOff )( 
            IltmmDVDControl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectDefaultAudioLanguage )( 
            IltmmDVDControl * This,
            /* [in] */ long language,
            /* [in] */ long ext);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectDefaultSubpictureLanguage )( 
            IltmmDVDControl * This,
            /* [in] */ long language,
            /* [in] */ long ext);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTitle )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentChapter )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentDiscSide )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTime )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentVolume )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VolumesAvailable )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TitlesAvailable )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDDirectory )( 
            IltmmDVDControl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDDirectory )( 
            IltmmDVDControl * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetGPRM )( 
            IltmmDVDControl * This,
            /* [in] */ long index,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSPRM )( 
            IltmmDVDControl * This,
            /* [in] */ long index,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetGPRM )( 
            IltmmDVDControl * This,
            /* [in] */ long index,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDUniqueID )( 
            IltmmDVDControl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetDVDTextLanguageLCID )( 
            IltmmDVDControl * This,
            /* [in] */ long index,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDTextNumberOfLanguages )( 
            IltmmDVDControl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetDVDTextNumberOfStrings )( 
            IltmmDVDControl * This,
            /* [in] */ long index,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetDVDTextString )( 
            IltmmDVDControl * This,
            /* [in] */ long langindex,
            /* [in] */ long strindex,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetDVDTextStringType )( 
            IltmmDVDControl * This,
            /* [in] */ long langindex,
            /* [in] */ long strindex,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectParentalCountry )( 
            IltmmDVDControl * This,
            /* [in] */ long country,
            /* [in] */ BSTR username,
            /* [in] */ BSTR password);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SelectParentalLevel )( 
            IltmmDVDControl * This,
            /* [in] */ long level,
            /* [in] */ BSTR username,
            /* [in] */ BSTR password);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AcceptParentalLevelChange )( 
            IltmmDVDControl * This,
            /* [in] */ VARIANT_BOOL accept);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NotifyParentalLevelChange )( 
            IltmmDVDControl * This,
            /* [in] */ VARIANT_BOOL notify);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubpictureOn )( 
            IltmmDVDControl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SubpictureOn )( 
            IltmmDVDControl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ChangeDVDRegion )( 
            IltmmDVDControl * This,
            /* [in] */ long hWnd);
        
        END_INTERFACE
    } IltmmDVDControlVtbl;

    interface IltmmDVDControl
    {
        CONST_VTBL struct IltmmDVDControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmDVDControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmDVDControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmDVDControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmDVDControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmDVDControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmDVDControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmDVDControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmDVDControl_GetButtonAtPosition(This,x,y,pVal)	\
    ( (This)->lpVtbl -> GetButtonAtPosition(This,x,y,pVal) ) 

#define IltmmDVDControl_GetButtonTop(This,button,pVal)	\
    ( (This)->lpVtbl -> GetButtonTop(This,button,pVal) ) 

#define IltmmDVDControl_GetButtonLeft(This,button,pVal)	\
    ( (This)->lpVtbl -> GetButtonLeft(This,button,pVal) ) 

#define IltmmDVDControl_GetButtonWidth(This,button,pVal)	\
    ( (This)->lpVtbl -> GetButtonWidth(This,button,pVal) ) 

#define IltmmDVDControl_GetButtonHeight(This,button,pVal)	\
    ( (This)->lpVtbl -> GetButtonHeight(This,button,pVal) ) 

#define IltmmDVDControl_get_CurrentButton(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentButton(This,pVal) ) 

#define IltmmDVDControl_get_ButtonsAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_ButtonsAvailable(This,pVal) ) 

#define IltmmDVDControl_get_DefaultMenuLanguage(This,pVal)	\
    ( (This)->lpVtbl -> get_DefaultMenuLanguage(This,pVal) ) 

#define IltmmDVDControl_put_DefaultMenuLanguage(This,newVal)	\
    ( (This)->lpVtbl -> put_DefaultMenuLanguage(This,newVal) ) 

#define IltmmDVDControl_GetNumberOfChapters(This,title,pVal)	\
    ( (This)->lpVtbl -> GetNumberOfChapters(This,title,pVal) ) 

#define IltmmDVDControl_get_TotalTitleTime(This,pVal)	\
    ( (This)->lpVtbl -> get_TotalTitleTime(This,pVal) ) 

#define IltmmDVDControl_get_TitleTimecodeFlags(This,pVal)	\
    ( (This)->lpVtbl -> get_TitleTimecodeFlags(This,pVal) ) 

#define IltmmDVDControl_get_CurrentAngle(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentAngle(This,pVal) ) 

#define IltmmDVDControl_put_CurrentAngle(This,newVal)	\
    ( (This)->lpVtbl -> put_CurrentAngle(This,newVal) ) 

#define IltmmDVDControl_get_AnglesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_AnglesAvailable(This,pVal) ) 

#define IltmmDVDControl_get_CurrentUOPS(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentUOPS(This,pVal) ) 

#define IltmmDVDControl_GetAudioLanguage(This,stream,pVal)	\
    ( (This)->lpVtbl -> GetAudioLanguage(This,stream,pVal) ) 

#define IltmmDVDControl_get_CurrentAudioStream(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentAudioStream(This,pVal) ) 

#define IltmmDVDControl_put_CurrentAudioStream(This,newVal)	\
    ( (This)->lpVtbl -> put_CurrentAudioStream(This,newVal) ) 

#define IltmmDVDControl_get_AudioStreamsAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioStreamsAvailable(This,pVal) ) 

#define IltmmDVDControl_get_DefaultAudioLanguage(This,pVal)	\
    ( (This)->lpVtbl -> get_DefaultAudioLanguage(This,pVal) ) 

#define IltmmDVDControl_get_DefaultAudioLanguageExt(This,pVal)	\
    ( (This)->lpVtbl -> get_DefaultAudioLanguageExt(This,pVal) ) 

#define IltmmDVDControl_IsAudioStreamEnabled(This,stream,pVal)	\
    ( (This)->lpVtbl -> IsAudioStreamEnabled(This,stream,pVal) ) 

#define IltmmDVDControl_get_CurrentSubpictureStream(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentSubpictureStream(This,pVal) ) 

#define IltmmDVDControl_put_CurrentSubpictureStream(This,newVal)	\
    ( (This)->lpVtbl -> put_CurrentSubpictureStream(This,newVal) ) 

#define IltmmDVDControl_get_SubpictureStreamsAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_SubpictureStreamsAvailable(This,pVal) ) 

#define IltmmDVDControl_get_DefaultSubpictureLanguage(This,pVal)	\
    ( (This)->lpVtbl -> get_DefaultSubpictureLanguage(This,pVal) ) 

#define IltmmDVDControl_get_DefaultSubpictureLanguageExt(This,pVal)	\
    ( (This)->lpVtbl -> get_DefaultSubpictureLanguageExt(This,pVal) ) 

#define IltmmDVDControl_GetSubpictureLanguage(This,stream,pVal)	\
    ( (This)->lpVtbl -> GetSubpictureLanguage(This,stream,pVal) ) 

#define IltmmDVDControl_IsSubpictureStreamEnabled(This,stream,pVal)	\
    ( (This)->lpVtbl -> IsSubpictureStreamEnabled(This,stream,pVal) ) 

#define IltmmDVDControl_get_PlayerParentalLevel(This,pVal)	\
    ( (This)->lpVtbl -> get_PlayerParentalLevel(This,pVal) ) 

#define IltmmDVDControl_get_PlayerParentalCountry(This,pVal)	\
    ( (This)->lpVtbl -> get_PlayerParentalCountry(This,pVal) ) 

#define IltmmDVDControl_GetTitleParentalLevels(This,title,pVal)	\
    ( (This)->lpVtbl -> GetTitleParentalLevels(This,title,pVal) ) 

#define IltmmDVDControl_get_CurrentDomain(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentDomain(This,pVal) ) 

#define IltmmDVDControl_Pause(This,State)	\
    ( (This)->lpVtbl -> Pause(This,State) ) 

#define IltmmDVDControl_PlayAtTime(This,timecode)	\
    ( (This)->lpVtbl -> PlayAtTime(This,timecode) ) 

#define IltmmDVDControl_PlayAtTimeInTitle(This,title,timecode)	\
    ( (This)->lpVtbl -> PlayAtTimeInTitle(This,title,timecode) ) 

#define IltmmDVDControl_PlayBackwards(This,speed)	\
    ( (This)->lpVtbl -> PlayBackwards(This,speed) ) 

#define IltmmDVDControl_PlayChapter(This,chapter)	\
    ( (This)->lpVtbl -> PlayChapter(This,chapter) ) 

#define IltmmDVDControl_PlayChapterInTitle(This,title,chapter)	\
    ( (This)->lpVtbl -> PlayChapterInTitle(This,title,chapter) ) 

#define IltmmDVDControl_PlayChaptersAutoStop(This,title,chapter,chapterstoplay)	\
    ( (This)->lpVtbl -> PlayChaptersAutoStop(This,title,chapter,chapterstoplay) ) 

#define IltmmDVDControl_PlayForwards(This,speed)	\
    ( (This)->lpVtbl -> PlayForwards(This,speed) ) 

#define IltmmDVDControl_PlayNextChapter(This)	\
    ( (This)->lpVtbl -> PlayNextChapter(This) ) 

#define IltmmDVDControl_PlayPeriodInTitleAutoStop(This,title,starttime,stoptime)	\
    ( (This)->lpVtbl -> PlayPeriodInTitleAutoStop(This,title,starttime,stoptime) ) 

#define IltmmDVDControl_PlayPrevChapter(This)	\
    ( (This)->lpVtbl -> PlayPrevChapter(This) ) 

#define IltmmDVDControl_PlayTitle(This,title)	\
    ( (This)->lpVtbl -> PlayTitle(This,title) ) 

#define IltmmDVDControl_ReplayChapter(This)	\
    ( (This)->lpVtbl -> ReplayChapter(This) ) 

#define IltmmDVDControl_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmDVDControl_ActivateAtPosition(This,x,y)	\
    ( (This)->lpVtbl -> ActivateAtPosition(This,x,y) ) 

#define IltmmDVDControl_ActivateButton(This)	\
    ( (This)->lpVtbl -> ActivateButton(This) ) 

#define IltmmDVDControl_Resume(This)	\
    ( (This)->lpVtbl -> Resume(This) ) 

#define IltmmDVDControl_ReturnFromSubmenu(This)	\
    ( (This)->lpVtbl -> ReturnFromSubmenu(This) ) 

#define IltmmDVDControl_SelectAtPosition(This,x,y)	\
    ( (This)->lpVtbl -> SelectAtPosition(This,x,y) ) 

#define IltmmDVDControl_SelectAndActivateButton(This,button)	\
    ( (This)->lpVtbl -> SelectAndActivateButton(This,button) ) 

#define IltmmDVDControl_SelectButton(This,button)	\
    ( (This)->lpVtbl -> SelectButton(This,button) ) 

#define IltmmDVDControl_SelectRelativeButton(This,dir)	\
    ( (This)->lpVtbl -> SelectRelativeButton(This,dir) ) 

#define IltmmDVDControl_ShowMenu(This,menu)	\
    ( (This)->lpVtbl -> ShowMenu(This,menu) ) 

#define IltmmDVDControl_StillOff(This)	\
    ( (This)->lpVtbl -> StillOff(This) ) 

#define IltmmDVDControl_SelectDefaultAudioLanguage(This,language,ext)	\
    ( (This)->lpVtbl -> SelectDefaultAudioLanguage(This,language,ext) ) 

#define IltmmDVDControl_SelectDefaultSubpictureLanguage(This,language,ext)	\
    ( (This)->lpVtbl -> SelectDefaultSubpictureLanguage(This,language,ext) ) 

#define IltmmDVDControl_get_CurrentTitle(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentTitle(This,pVal) ) 

#define IltmmDVDControl_get_CurrentChapter(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentChapter(This,pVal) ) 

#define IltmmDVDControl_get_CurrentDiscSide(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentDiscSide(This,pVal) ) 

#define IltmmDVDControl_get_CurrentTime(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentTime(This,pVal) ) 

#define IltmmDVDControl_get_CurrentVolume(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentVolume(This,pVal) ) 

#define IltmmDVDControl_get_VolumesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_VolumesAvailable(This,pVal) ) 

#define IltmmDVDControl_get_TitlesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_TitlesAvailable(This,pVal) ) 

#define IltmmDVDControl_get_DVDDirectory(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDDirectory(This,pVal) ) 

#define IltmmDVDControl_put_DVDDirectory(This,newVal)	\
    ( (This)->lpVtbl -> put_DVDDirectory(This,newVal) ) 

#define IltmmDVDControl_GetGPRM(This,index,pVal)	\
    ( (This)->lpVtbl -> GetGPRM(This,index,pVal) ) 

#define IltmmDVDControl_GetSPRM(This,index,pVal)	\
    ( (This)->lpVtbl -> GetSPRM(This,index,pVal) ) 

#define IltmmDVDControl_SetGPRM(This,index,newVal)	\
    ( (This)->lpVtbl -> SetGPRM(This,index,newVal) ) 

#define IltmmDVDControl_get_DVDUniqueID(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDUniqueID(This,pVal) ) 

#define IltmmDVDControl_GetDVDTextLanguageLCID(This,index,pVal)	\
    ( (This)->lpVtbl -> GetDVDTextLanguageLCID(This,index,pVal) ) 

#define IltmmDVDControl_get_DVDTextNumberOfLanguages(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDTextNumberOfLanguages(This,pVal) ) 

#define IltmmDVDControl_GetDVDTextNumberOfStrings(This,index,pVal)	\
    ( (This)->lpVtbl -> GetDVDTextNumberOfStrings(This,index,pVal) ) 

#define IltmmDVDControl_GetDVDTextString(This,langindex,strindex,pVal)	\
    ( (This)->lpVtbl -> GetDVDTextString(This,langindex,strindex,pVal) ) 

#define IltmmDVDControl_GetDVDTextStringType(This,langindex,strindex,pVal)	\
    ( (This)->lpVtbl -> GetDVDTextStringType(This,langindex,strindex,pVal) ) 

#define IltmmDVDControl_SelectParentalCountry(This,country,username,password)	\
    ( (This)->lpVtbl -> SelectParentalCountry(This,country,username,password) ) 

#define IltmmDVDControl_SelectParentalLevel(This,level,username,password)	\
    ( (This)->lpVtbl -> SelectParentalLevel(This,level,username,password) ) 

#define IltmmDVDControl_AcceptParentalLevelChange(This,accept)	\
    ( (This)->lpVtbl -> AcceptParentalLevelChange(This,accept) ) 

#define IltmmDVDControl_NotifyParentalLevelChange(This,notify)	\
    ( (This)->lpVtbl -> NotifyParentalLevelChange(This,notify) ) 

#define IltmmDVDControl_get_SubpictureOn(This,pVal)	\
    ( (This)->lpVtbl -> get_SubpictureOn(This,pVal) ) 

#define IltmmDVDControl_put_SubpictureOn(This,newVal)	\
    ( (This)->lpVtbl -> put_SubpictureOn(This,newVal) ) 

#define IltmmDVDControl_ChangeDVDRegion(This,hWnd)	\
    ( (This)->lpVtbl -> ChangeDVDRegion(This,hWnd) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmDVDControl_INTERFACE_DEFINED__ */


#ifndef __IltmmCameraControl_INTERFACE_DEFINED__
#define __IltmmCameraControl_INTERFACE_DEFINED__

/* interface IltmmCameraControl */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCameraControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016106A-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCameraControl : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRange( 
            /* [in] */ long property,
            /* [out] */ long *pMin,
            /* [out] */ long *pMax,
            /* [out] */ long *pSteppingDelta,
            /* [out] */ long *pDefault,
            /* [out] */ long *pCapsFlags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Set( 
            /* [in] */ long Property,
            /* [in] */ long lValue,
            /* [in] */ long Flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Get( 
            /* [in] */ long Property,
            /* [out] */ long *lValue,
            /* [out] */ long *Flags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCameraControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCameraControl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCameraControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCameraControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCameraControl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCameraControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCameraControl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCameraControl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRange )( 
            IltmmCameraControl * This,
            /* [in] */ long property,
            /* [out] */ long *pMin,
            /* [out] */ long *pMax,
            /* [out] */ long *pSteppingDelta,
            /* [out] */ long *pDefault,
            /* [out] */ long *pCapsFlags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Set )( 
            IltmmCameraControl * This,
            /* [in] */ long Property,
            /* [in] */ long lValue,
            /* [in] */ long Flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Get )( 
            IltmmCameraControl * This,
            /* [in] */ long Property,
            /* [out] */ long *lValue,
            /* [out] */ long *Flags);
        
        END_INTERFACE
    } IltmmCameraControlVtbl;

    interface IltmmCameraControl
    {
        CONST_VTBL struct IltmmCameraControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCameraControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCameraControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCameraControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCameraControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCameraControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCameraControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCameraControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCameraControl_GetRange(This,property,pMin,pMax,pSteppingDelta,pDefault,pCapsFlags)	\
    ( (This)->lpVtbl -> GetRange(This,property,pMin,pMax,pSteppingDelta,pDefault,pCapsFlags) ) 

#define IltmmCameraControl_Set(This,Property,lValue,Flags)	\
    ( (This)->lpVtbl -> Set(This,Property,lValue,Flags) ) 

#define IltmmCameraControl_Get(This,Property,lValue,Flags)	\
    ( (This)->lpVtbl -> Get(This,Property,lValue,Flags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCameraControl_INTERFACE_DEFINED__ */


#ifndef __IltmmVideoProcAmp_INTERFACE_DEFINED__
#define __IltmmVideoProcAmp_INTERFACE_DEFINED__

/* interface IltmmVideoProcAmp */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmVideoProcAmp;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161082-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmVideoProcAmp : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetRange( 
            /* [in] */ long property,
            /* [out] */ long *pMin,
            /* [out] */ long *pMax,
            /* [out] */ long *pSteppingDelta,
            /* [out] */ long *pDefault,
            /* [out] */ long *pCapsFlags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Set( 
            /* [in] */ long Property,
            /* [in] */ long lValue,
            /* [in] */ long Flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Get( 
            /* [in] */ long Property,
            /* [out] */ long *lValue,
            /* [out] */ long *Flags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmVideoProcAmpVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmVideoProcAmp * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmVideoProcAmp * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmVideoProcAmp * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmVideoProcAmp * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmVideoProcAmp * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmVideoProcAmp * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmVideoProcAmp * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetRange )( 
            IltmmVideoProcAmp * This,
            /* [in] */ long property,
            /* [out] */ long *pMin,
            /* [out] */ long *pMax,
            /* [out] */ long *pSteppingDelta,
            /* [out] */ long *pDefault,
            /* [out] */ long *pCapsFlags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Set )( 
            IltmmVideoProcAmp * This,
            /* [in] */ long Property,
            /* [in] */ long lValue,
            /* [in] */ long Flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Get )( 
            IltmmVideoProcAmp * This,
            /* [in] */ long Property,
            /* [out] */ long *lValue,
            /* [out] */ long *Flags);
        
        END_INTERFACE
    } IltmmVideoProcAmpVtbl;

    interface IltmmVideoProcAmp
    {
        CONST_VTBL struct IltmmVideoProcAmpVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmVideoProcAmp_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmVideoProcAmp_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmVideoProcAmp_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmVideoProcAmp_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmVideoProcAmp_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmVideoProcAmp_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmVideoProcAmp_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmVideoProcAmp_GetRange(This,property,pMin,pMax,pSteppingDelta,pDefault,pCapsFlags)	\
    ( (This)->lpVtbl -> GetRange(This,property,pMin,pMax,pSteppingDelta,pDefault,pCapsFlags) ) 

#define IltmmVideoProcAmp_Set(This,Property,lValue,Flags)	\
    ( (This)->lpVtbl -> Set(This,Property,lValue,Flags) ) 

#define IltmmVideoProcAmp_Get(This,Property,lValue,Flags)	\
    ( (This)->lpVtbl -> Get(This,Property,lValue,Flags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmVideoProcAmp_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture1_INTERFACE_DEFINED__
#define __IltmmCapture1_INTERFACE_DEFINED__

/* interface IltmmCapture1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016100F-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture1 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE StartCapture( 
            /* [in] */ long Mode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE StopCapture( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Preview( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Preview( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MasterStream( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_MasterStream( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CloseCaptioning( 
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CloseCaptioning( 
            /* [in] */ VARIANT_BOOL CloseCaptioning) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseFrameRate( 
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseFrameRate( 
            /* [in] */ VARIANT_BOOL UseFrameRate) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FrameRate( 
            /* [retval][out] */ double *pFrameRate) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FrameRate( 
            /* [in] */ double FrameRate) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseTimeLimit( 
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseTimeLimit( 
            /* [in] */ VARIANT_BOOL UseTimeLimit) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TimeLimit( 
            /* [retval][out] */ double *pTimeLimit) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TimeLimit( 
            /* [in] */ double TimeLimit) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFile( 
            /* [retval][out] */ BSTR *pCaptureFile) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetFile( 
            /* [in] */ BSTR CaptureFile) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ long *pState) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CloseCaptionAvailable( 
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE HasDialog( 
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ShowDialog( 
            /* [in] */ long Dialog,
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioDevices( 
            /* [retval][out] */ IltmmDevices **ppAudioDevices) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoDevices( 
            /* [retval][out] */ IltmmDevices **ppVideoDevices) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowFrame( 
            /* [retval][out] */ long *phWnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowFrame( 
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoInputs( 
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CopyTarget( 
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AllocTarget( 
            /* [in] */ long Size) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ReadyCapture( 
            /* [in] */ long lMode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CaptureDIB( 
            /* [retval][out] */ long *phDIB) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioCompressors( 
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCompressors( 
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ long *pMode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_NumDropped( 
            /* [retval][out] */ long *pNumDropped) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_NumNotDropped( 
            /* [retval][out] */ long *pNumNotDropped) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AverageFrameSize( 
            /* [retval][out] */ long *pAverageFrameSize) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CaptureTime( 
            /* [retval][out] */ double *pCaptureTime) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMCertificate( 
            /* [retval][out] */ IUnknown **pWMCertificate) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMCertificate( 
            /* [in] */ IUnknown *pWMCertificate) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewSource( 
            /* [retval][out] */ long *pPreviewSource) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreviewSource( 
            /* [in] */ long PreviewSource) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CaptureFrame( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FrameDelay( 
            /* [retval][out] */ double *pFrameDelay) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FrameDelay( 
            /* [in] */ double FrameDelay) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsModeAvailable( 
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetNotifyWindow( 
            /* [in] */ long hWnd,
            /* [in] */ long Msg) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CapturePicture( 
            /* [retval][out] */ IPictureDisp **ppPicture) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetStillPicture( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetStillDIB( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowSizeMode( 
            /* [retval][out] */ ltmmSizeMode *pSizeMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowSizeMode( 
            /* [in] */ ltmmSizeMode SizeMode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FullScreenMode( 
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FullScreenMode( 
            /* [in] */ VARIANT_BOOL FullScreenMode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ToggleFullScreenMode( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowWidth( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHeight( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE TogglePreview( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ToggleCloseCaptioning( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWidth( 
            /* [retval][out] */ long *pWidth) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoHeight( 
            /* [retval][out] */ long *pHeight) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowLeft( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowTop( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedAudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedVideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetFormat( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetType( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetArray( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetArray( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetObject( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetObject( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ResetTarget( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture1 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture1 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture1 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture1 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture1 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture1 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture1 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture1 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture1 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture1 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture1 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture1 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture1 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture1 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture1 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture1 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture1 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture1 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture1 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture1 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture1 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture1 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture1 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture1 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture1 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture1 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture1 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture1 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture1 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture1 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture1 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture1 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture1 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture1 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture1 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture1 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture1 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture1 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture1 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmCapture1Vtbl;

    interface IltmmCapture1
    {
        CONST_VTBL struct IltmmCapture1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture1_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture1_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture1_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture1_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture1_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture1_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture1_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture1_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture1_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture1_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture1_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture1_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture1_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture1_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture1_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture1_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture1_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture1_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture1_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture1_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture1_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture1_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture1_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture1_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture1_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture1_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture1_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture1_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture1_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture1_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture1_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture1_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture1_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture1_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture1_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture1_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture1_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture1_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture1_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture1_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture1_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture1_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture1_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture1_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture1_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture1_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture1_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture1_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture1_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture1_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture1_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture1_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture1_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture1_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture1_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture1_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture1_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture1_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture1_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture1_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture1_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture1_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture1_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture1_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture1_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture1_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture1_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture1_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture1_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture1_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture1_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture1_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture1_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture1_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture1_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture1_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture1_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture1_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCapture1_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture2_INTERFACE_DEFINED__
#define __IltmmCapture2_INTERFACE_DEFINED__

/* interface IltmmCapture2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016102B-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture2 : public IltmmCapture1
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PauseCapture( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RunCapture( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioRenderers( 
            /* [retval][out] */ IltmmRenderers **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubObject( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EditGraph( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture2 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture2 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture2 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture2 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture2 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture2 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture2 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture2 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture2 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture2 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture2 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture2 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture2 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture2 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture2 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture2 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture2 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture2 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture2 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture2 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture2 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture2 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture2 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture2 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture2 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture2 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture2 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture2 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture2 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture2 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture2 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture2 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture2 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture2 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture2 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture2 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture2 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture2 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture2 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture2 * This);
        
        END_INTERFACE
    } IltmmCapture2Vtbl;

    interface IltmmCapture2
    {
        CONST_VTBL struct IltmmCapture2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture2_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture2_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture2_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture2_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture2_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture2_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture2_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture2_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture2_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture2_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture2_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture2_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture2_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture2_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture2_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture2_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture2_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture2_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture2_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture2_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture2_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture2_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture2_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture2_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture2_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture2_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture2_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture2_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture2_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture2_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture2_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture2_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture2_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture2_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture2_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture2_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture2_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture2_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture2_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture2_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture2_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture2_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture2_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture2_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture2_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture2_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture2_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture2_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture2_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture2_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture2_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture2_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture2_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture2_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture2_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture2_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture2_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture2_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture2_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture2_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture2_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture2_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture2_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture2_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture2_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture2_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture2_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture2_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture2_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture2_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture2_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture2_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture2_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture2_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture2_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture2_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture2_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture2_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture2_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture2_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture2_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture2_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture2_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCapture2_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture3_INTERFACE_DEFINED__
#define __IltmmCapture3_INTERFACE_DEFINED__

/* interface IltmmCapture3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161035-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture3 : public IltmmCapture2
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowDialogPreview( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowDialogPreview( 
            /* [in] */ VARIANT_BOOL Val) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioBufferSize( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AudioBufferSize( 
            /* [in] */ double Val) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewTap( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreviewTap( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCaptureSizes( 
            /* [retval][out] */ IltmmCaptureSizes **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetDevices( 
            /* [retval][out] */ IltmmTargetDevices **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CaptureVCRControl( 
            /* [retval][out] */ IltmmVCRControl **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetVCRControl( 
            /* [retval][out] */ IltmmVCRControl **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFormats( 
            /* [retval][out] */ IltmmTargetFormats **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture3 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture3 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture3 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture3 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture3 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture3 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture3 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture3 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture3 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture3 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture3 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture3 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture3 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture3 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture3 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture3 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture3 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture3 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture3 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture3 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture3 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture3 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture3 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture3 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture3 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture3 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture3 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture3 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture3 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture3 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture3 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture3 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCapture3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCapture3 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCapture3 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCapture3 * This,
            /* [in] */ double Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCapture3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCapture3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCapture3 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        END_INTERFACE
    } IltmmCapture3Vtbl;

    interface IltmmCapture3
    {
        CONST_VTBL struct IltmmCapture3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture3_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture3_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture3_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture3_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture3_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture3_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture3_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture3_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture3_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture3_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture3_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture3_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture3_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture3_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture3_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture3_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture3_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture3_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture3_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture3_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture3_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture3_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture3_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture3_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture3_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture3_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture3_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture3_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture3_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture3_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture3_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture3_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture3_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture3_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture3_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture3_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture3_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture3_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture3_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture3_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture3_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture3_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture3_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture3_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture3_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture3_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture3_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture3_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture3_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture3_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture3_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture3_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture3_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture3_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture3_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture3_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture3_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture3_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture3_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture3_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture3_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture3_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture3_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture3_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture3_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture3_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture3_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture3_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture3_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture3_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture3_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture3_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture3_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture3_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture3_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture3_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture3_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture3_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture3_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture3_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture3_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture3_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture3_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCapture3_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCapture3_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCapture3_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCapture3_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCapture3_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCapture3_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCapture3_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCapture3_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCapture3_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCapture3_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCapture3_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCapture3_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture4_INTERFACE_DEFINED__
#define __IltmmCapture4_INTERFACE_DEFINED__

/* interface IltmmCapture4 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016104B-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture4 : public IltmmCapture3
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHandle( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TVTuner( 
            /* [retval][out] */ IltmmTVTuner **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubObjectDispatch( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMProfile( 
            /* [retval][out] */ IltmmWMProfile **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMProfile( 
            /* [in] */ IltmmWMProfile *Val) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDecoderResolution( 
            /* [retval][out] */ ltmmDVResolution *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DVDecoderResolution( 
            /* [in] */ ltmmDVResolution Val) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetVideoWindowPos( 
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetStream( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetStream( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsPreviewTapSupported( 
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveStillDIB( 
            /* [in] */ BSTR filename,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Volume( 
            /* [retval][out] */ long *pVolume) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Volume( 
            /* [in] */ long Volume) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Balance( 
            /* [retval][out] */ long *pBalance) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Balance( 
            /* [in] */ long Balance) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mute( 
            /* [retval][out] */ VARIANT_BOOL *pMute) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Mute( 
            /* [in] */ VARIANT_BOOL Mute) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioInputs( 
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UsingDVDecoder( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture4 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture4 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture4 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture4 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture4 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture4 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture4 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture4 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture4 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture4 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture4 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture4 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture4 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture4 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture4 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture4 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture4 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture4 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture4 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture4 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture4 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture4 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture4 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture4 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCapture4 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCapture4 * This,
            /* [in] */ double Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCapture4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCapture4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCapture4 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCapture4 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCapture4 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCapture4 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCapture4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCapture4 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCapture4 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCapture4 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCapture4 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCapture4 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCapture4 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCapture4 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCapture4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmCapture4Vtbl;

    interface IltmmCapture4
    {
        CONST_VTBL struct IltmmCapture4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture4_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture4_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture4_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture4_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture4_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture4_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture4_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture4_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture4_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture4_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture4_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture4_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture4_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture4_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture4_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture4_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture4_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture4_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture4_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture4_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture4_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture4_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture4_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture4_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture4_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture4_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture4_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture4_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture4_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture4_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture4_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture4_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture4_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture4_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture4_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture4_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture4_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture4_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture4_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture4_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture4_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture4_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture4_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture4_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture4_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture4_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture4_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture4_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture4_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture4_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture4_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture4_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture4_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture4_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture4_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture4_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture4_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture4_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture4_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture4_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture4_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture4_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture4_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture4_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture4_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture4_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture4_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture4_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture4_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture4_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture4_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture4_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture4_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture4_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture4_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture4_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture4_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture4_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture4_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture4_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture4_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture4_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture4_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCapture4_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCapture4_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCapture4_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCapture4_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCapture4_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCapture4_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCapture4_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCapture4_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCapture4_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCapture4_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCapture4_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCapture4_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCapture4_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCapture4_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCapture4_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCapture4_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCapture4_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCapture4_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCapture4_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCapture4_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCapture4_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCapture4_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCapture4_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCapture4_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCapture4_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCapture4_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCapture4_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCapture4_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCapture4_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCapture4_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCapture4_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCapture4_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture5_INTERFACE_DEFINED__
#define __IltmmCapture5_INTERFACE_DEFINED__

/* interface IltmmCapture5 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161067-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture5 : public IltmmCapture4
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CameraControl( 
            /* [retval][out] */ IltmmCameraControl **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InterleaveMode( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_InterleaveMode( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveStillBitmap( 
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EnterEdit( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LeaveEdit( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCaptureSubTypes( 
            /* [retval][out] */ IltmmCaptureSubTypes **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToStream( 
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToFile( 
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromStream( 
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromFile( 
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CanSaveObjectSettings( 
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewingCloseCaption( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCaptureStreamType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture5 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture5 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture5 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture5 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture5 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture5 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture5 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture5 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture5 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture5 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture5 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture5 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture5 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture5 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture5 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture5 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture5 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture5 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture5 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture5 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture5 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture5 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture5 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture5 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture5 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCapture5 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCapture5 * This,
            /* [in] */ double Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCapture5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCapture5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCapture5 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCapture5 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCapture5 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCapture5 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCapture5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCapture5 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCapture5 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCapture5 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCapture5 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCapture5 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCapture5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCapture5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCapture5 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCapture5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCapture5 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCapture5 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCapture5 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCapture5 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCapture5 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCapture5 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCapture5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCapture5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        END_INTERFACE
    } IltmmCapture5Vtbl;

    interface IltmmCapture5
    {
        CONST_VTBL struct IltmmCapture5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture5_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture5_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture5_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture5_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture5_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture5_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture5_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture5_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture5_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture5_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture5_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture5_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture5_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture5_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture5_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture5_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture5_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture5_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture5_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture5_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture5_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture5_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture5_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture5_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture5_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture5_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture5_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture5_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture5_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture5_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture5_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture5_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture5_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture5_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture5_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture5_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture5_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture5_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture5_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture5_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture5_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture5_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture5_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture5_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture5_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture5_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture5_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture5_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture5_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture5_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture5_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture5_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture5_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture5_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture5_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture5_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture5_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture5_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture5_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture5_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture5_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture5_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture5_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture5_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture5_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture5_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture5_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture5_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture5_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture5_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture5_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture5_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture5_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture5_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture5_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture5_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture5_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture5_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture5_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture5_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture5_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture5_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture5_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCapture5_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCapture5_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCapture5_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCapture5_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCapture5_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCapture5_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCapture5_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCapture5_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCapture5_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCapture5_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCapture5_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCapture5_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCapture5_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCapture5_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCapture5_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCapture5_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCapture5_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCapture5_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCapture5_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCapture5_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCapture5_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCapture5_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCapture5_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCapture5_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCapture5_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCapture5_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCapture5_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCapture5_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCapture5_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCapture5_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCapture5_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCapture5_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCapture5_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCapture5_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCapture5_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCapture5_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCapture5_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCapture5_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCapture5_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCapture5_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCapture5_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCapture5_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCapture5_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCapture5_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCapture5_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCapture5_SaveSettingsToStream_Proxy( 
    IltmmCapture5 * This,
    /* [in] */ IUnknown *targetstream,
    /* [in] */ long flags);


void __RPC_STUB IltmmCapture5_SaveSettingsToStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCapture5_SaveSettingsToFile_Proxy( 
    IltmmCapture5 * This,
    /* [in] */ BSTR targetfile,
    /* [in] */ long flags);


void __RPC_STUB IltmmCapture5_SaveSettingsToFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCapture5_LoadSettingsFromStream_Proxy( 
    IltmmCapture5 * This,
    /* [in] */ IUnknown *sourcestream,
    /* [in] */ long flags);


void __RPC_STUB IltmmCapture5_LoadSettingsFromStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCapture5_LoadSettingsFromFile_Proxy( 
    IltmmCapture5 * This,
    /* [in] */ BSTR sourcefile,
    /* [in] */ long flags);


void __RPC_STUB IltmmCapture5_LoadSettingsFromFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCapture5_CanSaveObjectSettings_Proxy( 
    IltmmCapture5 * This,
    /* [in] */ long flags,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCapture5_CanSaveObjectSettings_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture5_get_PreviewingCloseCaption_Proxy( 
    IltmmCapture5 * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCapture5_get_PreviewingCloseCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture5_get_VideoCaptureStreamType_Proxy( 
    IltmmCapture5 * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IltmmCapture5_get_VideoCaptureStreamType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCapture5_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture6_INTERFACE_DEFINED__
#define __IltmmCapture6_INTERFACE_DEFINED__

/* interface IltmmCapture6 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161076-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture6 : public IltmmCapture5
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioCaptureFormats( 
            /* [retval][out] */ IltmmAudioFormats **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture6 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture6 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture6 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture6 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture6 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture6 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture6 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture6 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture6 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture6 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture6 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture6 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture6 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture6 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture6 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture6 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture6 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture6 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture6 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture6 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture6 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture6 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture6 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture6 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture6 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture6 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCapture6 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCapture6 * This,
            /* [in] */ double Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCapture6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCapture6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCapture6 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCapture6 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCapture6 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCapture6 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCapture6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCapture6 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCapture6 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCapture6 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCapture6 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCapture6 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCapture6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCapture6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCapture6 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCapture6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCapture6 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCapture6 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCapture6 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCapture6 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCapture6 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCapture6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCapture6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCapture6 * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        END_INTERFACE
    } IltmmCapture6Vtbl;

    interface IltmmCapture6
    {
        CONST_VTBL struct IltmmCapture6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture6_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture6_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture6_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture6_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture6_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture6_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture6_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture6_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture6_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture6_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture6_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture6_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture6_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture6_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture6_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture6_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture6_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture6_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture6_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture6_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture6_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture6_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture6_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture6_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture6_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture6_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture6_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture6_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture6_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture6_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture6_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture6_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture6_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture6_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture6_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture6_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture6_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture6_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture6_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture6_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture6_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture6_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture6_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture6_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture6_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture6_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture6_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture6_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture6_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture6_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture6_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture6_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture6_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture6_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture6_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture6_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture6_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture6_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture6_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture6_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture6_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture6_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture6_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture6_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture6_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture6_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture6_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture6_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture6_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture6_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture6_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture6_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture6_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture6_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture6_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture6_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture6_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture6_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture6_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture6_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture6_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture6_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture6_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCapture6_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCapture6_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCapture6_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCapture6_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCapture6_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCapture6_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCapture6_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCapture6_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCapture6_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCapture6_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCapture6_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCapture6_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCapture6_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCapture6_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCapture6_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCapture6_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCapture6_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCapture6_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCapture6_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCapture6_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCapture6_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCapture6_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCapture6_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCapture6_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCapture6_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCapture6_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCapture6_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCapture6_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCapture6_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCapture6_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCapture6_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCapture6_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCapture6_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCapture6_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCapture6_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCapture6_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCapture6_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCapture6_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCapture6_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCapture6_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCapture6_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCapture6_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCapture6_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCapture6_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCapture6_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCapture6_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture6_get_AudioCaptureFormats_Proxy( 
    IltmmCapture6 * This,
    /* [retval][out] */ IltmmAudioFormats **pVal);


void __RPC_STUB IltmmCapture6_get_AudioCaptureFormats_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCapture6_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture7_INTERFACE_DEFINED__
#define __IltmmCapture7_INTERFACE_DEFINED__

/* interface IltmmCapture7 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161083-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture7 : public IltmmCapture6
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoProcAmp( 
            /* [retval][out] */ IltmmVideoProcAmp **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CaptureStillDelay( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CaptureStillDelay( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCaptureFormats( 
            /* [retval][out] */ IltmmVideoFormats **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseVideoDeviceAudio( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseVideoDeviceAudio( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AnalogVideoDecoder( 
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture7 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture7 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture7 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture7 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture7 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture7 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture7 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture7 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture7 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture7 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture7 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture7 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture7 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture7 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture7 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture7 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture7 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture7 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture7 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture7 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture7 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture7 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture7 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture7 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture7 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture7 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCapture7 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCapture7 * This,
            /* [in] */ double Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCapture7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCapture7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCapture7 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCapture7 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCapture7 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCapture7 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCapture7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCapture7 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCapture7 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCapture7 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCapture7 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCapture7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCapture7 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCapture7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCapture7 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCapture7 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCapture7 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCapture7 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCapture7 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCapture7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcAmp )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmVideoProcAmp **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureStillDelay )( 
            IltmmCapture7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CaptureStillDelay )( 
            IltmmCapture7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureFormats )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmVideoFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseVideoDeviceAudio )( 
            IltmmCapture7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseVideoDeviceAudio )( 
            IltmmCapture7 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnalogVideoDecoder )( 
            IltmmCapture7 * This,
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);
        
        END_INTERFACE
    } IltmmCapture7Vtbl;

    interface IltmmCapture7
    {
        CONST_VTBL struct IltmmCapture7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture7_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture7_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture7_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture7_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture7_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture7_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture7_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture7_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture7_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture7_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture7_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture7_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture7_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture7_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture7_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture7_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture7_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture7_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture7_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture7_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture7_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture7_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture7_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture7_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture7_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture7_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture7_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture7_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture7_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture7_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture7_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture7_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture7_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture7_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture7_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture7_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture7_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture7_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture7_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture7_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture7_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture7_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture7_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture7_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture7_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture7_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture7_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture7_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture7_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture7_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture7_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture7_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture7_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture7_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture7_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture7_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture7_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture7_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture7_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture7_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture7_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture7_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture7_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture7_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture7_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture7_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture7_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture7_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture7_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture7_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture7_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture7_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture7_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture7_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture7_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture7_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture7_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture7_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture7_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture7_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture7_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture7_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture7_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCapture7_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCapture7_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCapture7_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCapture7_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCapture7_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCapture7_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCapture7_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCapture7_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCapture7_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCapture7_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCapture7_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCapture7_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCapture7_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCapture7_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCapture7_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCapture7_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCapture7_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCapture7_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCapture7_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCapture7_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCapture7_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCapture7_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCapture7_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCapture7_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCapture7_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCapture7_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCapture7_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCapture7_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCapture7_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCapture7_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCapture7_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCapture7_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCapture7_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCapture7_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCapture7_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCapture7_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCapture7_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCapture7_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCapture7_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCapture7_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCapture7_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCapture7_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCapture7_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCapture7_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCapture7_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCapture7_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 


#define IltmmCapture7_get_VideoProcAmp(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcAmp(This,pVal) ) 

#define IltmmCapture7_get_CaptureStillDelay(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureStillDelay(This,pVal) ) 

#define IltmmCapture7_put_CaptureStillDelay(This,newVal)	\
    ( (This)->lpVtbl -> put_CaptureStillDelay(This,newVal) ) 

#define IltmmCapture7_get_VideoCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureFormats(This,pVal) ) 

#define IltmmCapture7_get_UseVideoDeviceAudio(This,pVal)	\
    ( (This)->lpVtbl -> get_UseVideoDeviceAudio(This,pVal) ) 

#define IltmmCapture7_put_UseVideoDeviceAudio(This,newVal)	\
    ( (This)->lpVtbl -> put_UseVideoDeviceAudio(This,newVal) ) 

#define IltmmCapture7_get_AnalogVideoDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_AnalogVideoDecoder(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture7_get_VideoProcAmp_Proxy( 
    IltmmCapture7 * This,
    /* [retval][out] */ IltmmVideoProcAmp **pVal);


void __RPC_STUB IltmmCapture7_get_VideoProcAmp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture7_get_CaptureStillDelay_Proxy( 
    IltmmCapture7 * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IltmmCapture7_get_CaptureStillDelay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCapture7_put_CaptureStillDelay_Proxy( 
    IltmmCapture7 * This,
    /* [in] */ long newVal);


void __RPC_STUB IltmmCapture7_put_CaptureStillDelay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture7_get_VideoCaptureFormats_Proxy( 
    IltmmCapture7 * This,
    /* [retval][out] */ IltmmVideoFormats **pVal);


void __RPC_STUB IltmmCapture7_get_VideoCaptureFormats_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture7_get_UseVideoDeviceAudio_Proxy( 
    IltmmCapture7 * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCapture7_get_UseVideoDeviceAudio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCapture7_put_UseVideoDeviceAudio_Proxy( 
    IltmmCapture7 * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IltmmCapture7_put_UseVideoDeviceAudio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture7_get_AnalogVideoDecoder_Proxy( 
    IltmmCapture7 * This,
    /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);


void __RPC_STUB IltmmCapture7_get_AnalogVideoDecoder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCapture7_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture8_INTERFACE_DEFINED__
#define __IltmmCapture8_INTERFACE_DEFINED__

/* interface IltmmCapture8 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture8;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161099-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture8 : public IltmmCapture7
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EstimateOutputSize( 
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EstimateOutputBitRate( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture8Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture8 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture8 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture8 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture8 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture8 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture8 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture8 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture8 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture8 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture8 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture8 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture8 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture8 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture8 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture8 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture8 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture8 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture8 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture8 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture8 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture8 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture8 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture8 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture8 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture8 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture8 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture8 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture8 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture8 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture8 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture8 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture8 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCapture8 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCapture8 * This,
            /* [in] */ double Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCapture8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCapture8 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCapture8 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCapture8 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCapture8 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCapture8 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCapture8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCapture8 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCapture8 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCapture8 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCapture8 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCapture8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCapture8 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCapture8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCapture8 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCapture8 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCapture8 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCapture8 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCapture8 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCapture8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcAmp )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmVideoProcAmp **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureStillDelay )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CaptureStillDelay )( 
            IltmmCapture8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureFormats )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmVideoFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseVideoDeviceAudio )( 
            IltmmCapture8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseVideoDeviceAudio )( 
            IltmmCapture8 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnalogVideoDecoder )( 
            IltmmCapture8 * This,
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmCapture8 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmCapture8 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmCapture8Vtbl;

    interface IltmmCapture8
    {
        CONST_VTBL struct IltmmCapture8Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture8_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture8_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture8_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture8_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture8_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture8_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture8_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture8_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture8_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture8_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture8_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture8_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture8_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture8_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture8_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture8_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture8_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture8_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture8_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture8_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture8_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture8_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture8_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture8_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture8_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture8_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture8_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture8_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture8_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture8_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture8_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture8_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture8_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture8_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture8_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture8_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture8_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture8_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture8_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture8_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture8_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture8_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture8_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture8_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture8_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture8_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture8_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture8_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture8_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture8_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture8_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture8_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture8_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture8_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture8_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture8_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture8_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture8_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture8_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture8_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture8_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture8_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture8_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture8_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture8_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture8_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture8_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture8_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture8_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture8_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture8_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture8_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture8_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture8_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture8_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture8_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture8_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture8_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture8_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture8_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture8_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture8_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture8_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture8_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture8_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture8_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture8_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture8_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture8_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture8_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCapture8_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCapture8_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCapture8_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCapture8_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCapture8_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCapture8_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCapture8_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCapture8_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCapture8_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCapture8_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCapture8_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCapture8_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCapture8_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCapture8_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCapture8_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCapture8_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCapture8_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCapture8_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCapture8_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCapture8_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCapture8_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCapture8_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCapture8_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCapture8_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCapture8_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCapture8_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCapture8_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCapture8_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCapture8_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCapture8_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCapture8_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCapture8_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCapture8_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCapture8_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCapture8_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCapture8_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCapture8_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCapture8_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCapture8_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCapture8_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCapture8_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCapture8_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCapture8_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCapture8_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCapture8_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCapture8_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 


#define IltmmCapture8_get_VideoProcAmp(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcAmp(This,pVal) ) 

#define IltmmCapture8_get_CaptureStillDelay(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureStillDelay(This,pVal) ) 

#define IltmmCapture8_put_CaptureStillDelay(This,newVal)	\
    ( (This)->lpVtbl -> put_CaptureStillDelay(This,newVal) ) 

#define IltmmCapture8_get_VideoCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureFormats(This,pVal) ) 

#define IltmmCapture8_get_UseVideoDeviceAudio(This,pVal)	\
    ( (This)->lpVtbl -> get_UseVideoDeviceAudio(This,pVal) ) 

#define IltmmCapture8_put_UseVideoDeviceAudio(This,newVal)	\
    ( (This)->lpVtbl -> put_UseVideoDeviceAudio(This,newVal) ) 

#define IltmmCapture8_get_AnalogVideoDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_AnalogVideoDecoder(This,pVal) ) 


#define IltmmCapture8_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmCapture8_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCapture8_EstimateOutputSize_Proxy( 
    IltmmCapture8 * This,
    /* [in] */ double Duration,
    /* [retval][out] */ double *pVal);


void __RPC_STUB IltmmCapture8_EstimateOutputSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCapture8_EstimateOutputBitRate_Proxy( 
    IltmmCapture8 * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IltmmCapture8_EstimateOutputBitRate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCapture8_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture9_INTERFACE_DEFINED__
#define __IltmmCapture9_INTERFACE_DEFINED__

/* interface IltmmCapture9 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture9;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B7-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture9 : public IltmmCapture8
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IndexMode( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IndexMode( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCapture9Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture9 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture9 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture9 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture9 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture9 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture9 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture9 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture9 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture9 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture9 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture9 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture9 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture9 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture9 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture9 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture9 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture9 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture9 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture9 * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture9 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture9 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture9 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture9 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture9 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture9 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture9 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture9 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture9 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture9 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture9 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture9 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture9 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCapture9 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCapture9 * This,
            /* [in] */ double Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCapture9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCapture9 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCapture9 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCapture9 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCapture9 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCapture9 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCapture9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCapture9 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCapture9 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCapture9 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCapture9 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCapture9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCapture9 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCapture9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCapture9 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCapture9 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCapture9 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCapture9 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCapture9 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCapture9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcAmp )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmVideoProcAmp **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureStillDelay )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CaptureStillDelay )( 
            IltmmCapture9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureFormats )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmVideoFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseVideoDeviceAudio )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseVideoDeviceAudio )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnalogVideoDecoder )( 
            IltmmCapture9 * This,
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmCapture9 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmCapture9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IndexMode )( 
            IltmmCapture9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IndexMode )( 
            IltmmCapture9 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmCapture9Vtbl;

    interface IltmmCapture9
    {
        CONST_VTBL struct IltmmCapture9Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture9_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture9_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture9_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture9_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture9_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture9_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture9_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture9_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture9_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture9_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture9_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture9_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture9_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture9_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture9_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture9_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture9_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture9_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture9_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture9_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture9_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture9_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture9_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture9_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture9_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture9_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture9_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture9_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture9_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture9_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture9_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture9_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture9_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture9_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture9_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture9_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture9_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture9_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture9_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture9_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture9_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture9_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture9_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture9_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture9_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture9_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture9_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture9_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture9_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture9_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture9_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture9_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture9_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture9_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture9_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture9_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture9_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture9_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture9_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture9_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture9_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture9_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture9_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture9_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture9_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture9_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture9_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture9_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture9_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture9_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture9_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture9_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture9_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture9_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture9_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture9_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture9_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture9_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture9_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture9_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture9_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture9_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture9_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture9_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture9_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture9_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture9_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture9_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture9_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture9_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCapture9_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCapture9_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCapture9_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCapture9_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCapture9_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCapture9_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCapture9_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCapture9_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCapture9_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCapture9_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCapture9_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCapture9_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCapture9_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCapture9_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCapture9_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCapture9_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCapture9_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCapture9_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCapture9_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCapture9_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCapture9_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCapture9_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCapture9_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCapture9_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCapture9_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCapture9_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCapture9_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCapture9_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCapture9_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCapture9_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCapture9_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCapture9_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCapture9_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCapture9_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCapture9_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCapture9_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCapture9_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCapture9_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCapture9_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCapture9_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCapture9_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCapture9_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCapture9_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCapture9_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCapture9_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCapture9_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 


#define IltmmCapture9_get_VideoProcAmp(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcAmp(This,pVal) ) 

#define IltmmCapture9_get_CaptureStillDelay(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureStillDelay(This,pVal) ) 

#define IltmmCapture9_put_CaptureStillDelay(This,newVal)	\
    ( (This)->lpVtbl -> put_CaptureStillDelay(This,newVal) ) 

#define IltmmCapture9_get_VideoCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureFormats(This,pVal) ) 

#define IltmmCapture9_get_UseVideoDeviceAudio(This,pVal)	\
    ( (This)->lpVtbl -> get_UseVideoDeviceAudio(This,pVal) ) 

#define IltmmCapture9_put_UseVideoDeviceAudio(This,newVal)	\
    ( (This)->lpVtbl -> put_UseVideoDeviceAudio(This,newVal) ) 

#define IltmmCapture9_get_AnalogVideoDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_AnalogVideoDecoder(This,pVal) ) 


#define IltmmCapture9_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmCapture9_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmCapture9_get_IndexMode(This,pVal)	\
    ( (This)->lpVtbl -> get_IndexMode(This,pVal) ) 

#define IltmmCapture9_put_IndexMode(This,newVal)	\
    ( (This)->lpVtbl -> put_IndexMode(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture9_get_IndexMode_Proxy( 
    IltmmCapture9 * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCapture9_get_IndexMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCapture9_put_IndexMode_Proxy( 
    IltmmCapture9 * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IltmmCapture9_put_IndexMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCapture9_INTERFACE_DEFINED__ */


#ifndef __IltmmCapture_INTERFACE_DEFINED__
#define __IltmmCapture_INTERFACE_DEFINED__

/* interface IltmmCapture */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCapture;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610BA-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCapture : public IltmmCapture9
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewAudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewVideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCapture * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCapture * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCapture * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCapture * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCapture * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCapture * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCapture * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCapture * This,
            /* [in] */ long Mode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCapture * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCapture * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCapture * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCapture * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCapture * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCapture * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCapture * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCapture * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCapture * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCapture * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmCapture * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmCapture * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCapture * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCapture * This,
            /* [in] */ long Size);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCapture * This,
            /* [in] */ long lMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCapture * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCapture * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCapture * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCapture * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCapture * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCapture * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCapture * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCapture * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCapture * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmCapture * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCapture * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCapture * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCapture * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCapture * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCapture * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCapture * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCapture * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCapture * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCapture * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCapture * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCapture * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCapture * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCapture * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCapture * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCapture * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCapture * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCapture * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCapture * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCapture * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCapture * This,
            /* [in] */ double Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCapture * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCapture * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCapture * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCapture * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCapture * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCapture * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCapture * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCapture * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCapture * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCapture * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCapture * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCapture * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCapture * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCapture * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCapture * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCapture * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCapture * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCapture * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCapture * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCapture * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCapture * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCapture * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcAmp )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmVideoProcAmp **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureStillDelay )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CaptureStillDelay )( 
            IltmmCapture * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureFormats )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmVideoFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseVideoDeviceAudio )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseVideoDeviceAudio )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnalogVideoDecoder )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmCapture * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmCapture * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IndexMode )( 
            IltmmCapture * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IndexMode )( 
            IltmmCapture * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewAudioProcessors )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVideoProcessors )( 
            IltmmCapture * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        END_INTERFACE
    } IltmmCaptureVtbl;

    interface IltmmCapture
    {
        CONST_VTBL struct IltmmCaptureVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCapture_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCapture_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCapture_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCapture_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCapture_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCapture_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCapture_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCapture_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCapture_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCapture_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmCapture_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmCapture_get_MasterStream(This,pVal)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pVal) ) 

#define IltmmCapture_put_MasterStream(This,newVal)	\
    ( (This)->lpVtbl -> put_MasterStream(This,newVal) ) 

#define IltmmCapture_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCapture_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCapture_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCapture_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCapture_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCapture_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCapture_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCapture_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCapture_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCapture_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCapture_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCapture_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCapture_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCapture_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCapture_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCapture_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCapture_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCapture_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCapture_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmCapture_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmCapture_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCapture_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCapture_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCapture_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCapture_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCapture_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCapture_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCapture_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCapture_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCapture_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCapture_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCapture_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCapture_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCapture_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCapture_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCapture_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCapture_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCapture_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCapture_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCapture_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmCapture_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCapture_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCapture_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCapture_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCapture_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCapture_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCapture_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCapture_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCapture_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCapture_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCapture_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCapture_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCapture_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCapture_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCapture_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCapture_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCapture_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCapture_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCapture_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCapture_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCapture_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCapture_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCapture_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCapture_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCapture_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCapture_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCapture_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCapture_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCapture_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCapture_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCapture_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCapture_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCapture_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCapture_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCapture_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCapture_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCapture_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCapture_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCapture_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCapture_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCapture_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCapture_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCapture_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCapture_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCapture_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCapture_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCapture_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCapture_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCapture_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCapture_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCapture_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCapture_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCapture_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCapture_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCapture_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCapture_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCapture_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCapture_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCapture_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCapture_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCapture_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCapture_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCapture_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCapture_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCapture_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCapture_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCapture_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCapture_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCapture_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCapture_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCapture_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCapture_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCapture_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCapture_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCapture_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCapture_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCapture_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCapture_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCapture_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCapture_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCapture_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCapture_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 


#define IltmmCapture_get_VideoProcAmp(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcAmp(This,pVal) ) 

#define IltmmCapture_get_CaptureStillDelay(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureStillDelay(This,pVal) ) 

#define IltmmCapture_put_CaptureStillDelay(This,newVal)	\
    ( (This)->lpVtbl -> put_CaptureStillDelay(This,newVal) ) 

#define IltmmCapture_get_VideoCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureFormats(This,pVal) ) 

#define IltmmCapture_get_UseVideoDeviceAudio(This,pVal)	\
    ( (This)->lpVtbl -> get_UseVideoDeviceAudio(This,pVal) ) 

#define IltmmCapture_put_UseVideoDeviceAudio(This,newVal)	\
    ( (This)->lpVtbl -> put_UseVideoDeviceAudio(This,newVal) ) 

#define IltmmCapture_get_AnalogVideoDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_AnalogVideoDecoder(This,pVal) ) 


#define IltmmCapture_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmCapture_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmCapture_get_IndexMode(This,pVal)	\
    ( (This)->lpVtbl -> get_IndexMode(This,pVal) ) 

#define IltmmCapture_put_IndexMode(This,newVal)	\
    ( (This)->lpVtbl -> put_IndexMode(This,newVal) ) 


#define IltmmCapture_get_PreviewAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewAudioProcessors(This,pVal) ) 

#define IltmmCapture_get_PreviewVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVideoProcessors(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture_get_PreviewAudioProcessors_Proxy( 
    IltmmCapture * This,
    /* [retval][out] */ IltmmProcessors **pVal);


void __RPC_STUB IltmmCapture_get_PreviewAudioProcessors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCapture_get_PreviewVideoProcessors_Proxy( 
    IltmmCapture * This,
    /* [retval][out] */ IltmmProcessors **pVal);


void __RPC_STUB IltmmCapture_get_PreviewVideoProcessors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCapture_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert1_INTERFACE_DEFINED__
#define __IltmmConvert1_INTERFACE_DEFINED__

/* interface IltmmConvert1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161010-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert1 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFile( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceFile( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFile( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetFile( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioCompressors( 
            /* [retval][out] */ IltmmCompressors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCompressors( 
            /* [retval][out] */ IltmmCompressors **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE HasDialog( 
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ShowDialog( 
            /* [in] */ long Dialog,
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE StartConvert( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMCertificate( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMCertificate( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetFormat( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetNotifyWindow( 
            /* [in] */ long hWnd,
            /* [in] */ long Msg) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE StopConvert( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PercentComplete( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceHGlobal( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceHGlobal( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedAudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedVideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceArray( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceArray( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetType( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetArray( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetArray( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceObject( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceObject( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetObject( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetObject( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ResetSource( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ResetTarget( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConvertError( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert1 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert1 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert1 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert1 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert1 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert1 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert1 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert1 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert1 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert1 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmConvert1Vtbl;

    interface IltmmConvert1
    {
        CONST_VTBL struct IltmmConvert1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert1_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert1_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert1_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert1_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert1_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert1_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert1_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert1_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert1_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert1_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert1_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert1_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert1_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert1_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert1_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert1_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert1_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert1_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert1_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert1_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert1_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert1_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert1_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert1_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert1_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert1_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert1_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert1_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert1_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert1_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert1_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert1_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert1_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert1_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert1_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert1_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert1_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert1_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert2_INTERFACE_DEFINED__
#define __IltmmConvert2_INTERFACE_DEFINED__

/* interface IltmmConvert2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161033-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert2 : public IltmmConvert1
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubObject( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EditGraph( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert2 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert2 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert2 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert2 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert2 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert2 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert2 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert2 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert2 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert2 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert2 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert2 * This);
        
        END_INTERFACE
    } IltmmConvert2Vtbl;

    interface IltmmConvert2
    {
        CONST_VTBL struct IltmmConvert2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert2_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert2_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert2_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert2_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert2_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert2_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert2_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert2_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert2_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert2_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert2_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert2_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert2_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert2_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert2_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert2_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert2_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert2_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert2_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert2_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert2_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert2_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert2_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert2_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert2_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert2_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert2_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert2_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert2_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert2_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert2_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert2_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert2_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert2_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert2_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert2_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert2_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert2_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert2_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert2_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert3_INTERFACE_DEFINED__
#define __IltmmConvert3_INTERFACE_DEFINED__

/* interface IltmmConvert3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016103F-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert3 : public IltmmConvert2
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetDevices( 
            /* [retval][out] */ IltmmTargetDevices **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetVCRControl( 
            /* [retval][out] */ IltmmVCRControl **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFormats( 
            /* [retval][out] */ IltmmTargetFormats **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
            /* [retval][out] */ double *pDuration) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionStart( 
            /* [retval][out] */ double *pStart) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectionStart( 
            /* [in] */ double Start) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionEnd( 
            /* [retval][out] */ double *pEnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectionEnd( 
            /* [in] */ double End) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RenderedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UnrenderedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert3 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert3 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert3 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert3 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert3 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert3 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert3 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert3 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert3 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert3 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert3 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert3 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert3 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert3 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert3 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert3 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert3 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert3 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert3 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmConvert3Vtbl;

    interface IltmmConvert3
    {
        CONST_VTBL struct IltmmConvert3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert3_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert3_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert3_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert3_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert3_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert3_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert3_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert3_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert3_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert3_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert3_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert3_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert3_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert3_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert3_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert3_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert3_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert3_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert3_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert3_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert3_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert3_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert3_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert3_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert3_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert3_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert3_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert3_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert3_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert3_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert3_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert3_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert3_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert3_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert3_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert3_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert3_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert3_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert3_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert3_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert3_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert3_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert3_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert3_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert3_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert3_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert3_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert3_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert3_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert3_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert4_INTERFACE_DEFINED__
#define __IltmmConvert4_INTERFACE_DEFINED__

/* interface IltmmConvert4 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016104D-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert4 : public IltmmConvert3
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceVideoType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceAudioType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceVideoFOURCC( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceAudioFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AllowedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AllowedStreams( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubObjectDispatch( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMProfile( 
            /* [retval][out] */ IltmmWMProfile **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMProfile( 
            /* [in] */ IltmmWMProfile *Val) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDecoderResolution( 
            /* [retval][out] */ ltmmDVResolution *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DVDecoderResolution( 
            /* [in] */ ltmmDVResolution Val) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceStream( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceStream( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetStream( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetStream( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UsingDVDecoder( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert4 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert4 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert4 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert4 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert4 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert4 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert4 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert4 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert4 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert4 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert4 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert4 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert4 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert4 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert4 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert4 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert4 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmConvert4Vtbl;

    interface IltmmConvert4
    {
        CONST_VTBL struct IltmmConvert4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert4_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert4_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert4_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert4_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert4_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert4_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert4_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert4_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert4_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert4_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert4_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert4_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert4_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert4_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert4_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert4_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert4_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert4_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert4_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert4_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert4_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert4_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert4_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert4_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert4_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert4_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert4_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert4_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert4_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert4_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert4_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert4_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert4_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert4_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert4_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert4_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert4_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert4_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert4_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert4_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert4_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert4_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert4_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert4_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert4_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert4_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert4_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert4_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert4_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert4_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert4_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert4_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert4_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert4_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert4_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert4_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert4_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert4_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert4_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert4_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert4_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert4_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert4_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert4_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert4_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert4_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert5_INTERFACE_DEFINED__
#define __IltmmConvert5_INTERFACE_DEFINED__

/* interface IltmmConvert5 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016106B-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert5 : public IltmmConvert4
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InterleaveMode( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_InterleaveMode( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToStream( 
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToFile( 
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromStream( 
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromFile( 
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CanSaveObjectSettings( 
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert5 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert5 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert5 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert5 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert5 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert5 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert5 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert5 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert5 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert5 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert5 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert5 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert5 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert5 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert5 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert5 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert5 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert5 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert5 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert5 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert5 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert5 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert5 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmConvert5Vtbl;

    interface IltmmConvert5
    {
        CONST_VTBL struct IltmmConvert5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert5_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert5_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert5_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert5_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert5_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert5_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert5_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert5_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert5_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert5_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert5_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert5_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert5_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert5_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert5_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert5_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert5_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert5_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert5_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert5_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert5_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert5_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert5_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert5_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert5_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert5_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert5_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert5_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert5_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert5_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert5_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert5_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert5_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert5_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert5_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert5_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert5_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert5_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert5_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert5_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert5_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert5_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert5_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert5_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert5_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert5_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert5_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert5_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert5_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert5_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert5_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert5_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert5_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert5_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert5_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert5_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert5_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert5_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert5_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert5_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert5_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert5_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert5_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert5_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert5_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert5_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert5_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert5_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert5_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert5_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert5_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert5_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert5_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert6_INTERFACE_DEFINED__
#define __IltmmConvert6_INTERFACE_DEFINED__

/* interface IltmmConvert6 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161085-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert6 : public IltmmConvert5
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDControl( 
            /* [retval][out] */ IltmmDVDControl **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PercentCompleteScalar( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PercentCompleteScalar( 
            /* [in] */ long newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert6 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert6 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert6 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert6 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert6 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert6 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert6 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert6 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert6 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert6 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert6 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert6 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert6 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert6 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert6 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert6 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert6 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert6 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert6 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert6 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert6 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert6 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert6 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert6 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvert6 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvert6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvert6 * This,
            /* [in] */ long newVal);
        
        END_INTERFACE
    } IltmmConvert6Vtbl;

    interface IltmmConvert6
    {
        CONST_VTBL struct IltmmConvert6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert6_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert6_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert6_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert6_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert6_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert6_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert6_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert6_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert6_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert6_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert6_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert6_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert6_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert6_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert6_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert6_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert6_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert6_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert6_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert6_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert6_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert6_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert6_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert6_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert6_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert6_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert6_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert6_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert6_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert6_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert6_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert6_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert6_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert6_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert6_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert6_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert6_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert6_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert6_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert6_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert6_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert6_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert6_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert6_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert6_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert6_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert6_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert6_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert6_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert6_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert6_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert6_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert6_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert6_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert6_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert6_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert6_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert6_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert6_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert6_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert6_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert6_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert6_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert6_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert6_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert6_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert6_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert6_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert6_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert6_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert6_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert6_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvert6_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvert6_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvert6_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert6_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert7_INTERFACE_DEFINED__
#define __IltmmConvert7_INTERFACE_DEFINED__

/* interface IltmmConvert7 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016108F-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert7 : public IltmmConvert6
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreferredMPEG2Splitter( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreferredMPEG2Splitter( 
            /* [in] */ BSTR newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert7 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert7 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert7 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert7 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert7 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert7 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert7 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert7 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert7 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert7 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert7 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert7 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert7 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert7 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert7 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert7 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert7 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert7 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert7 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert7 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert7 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert7 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert7 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert7 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvert7 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvert7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvert7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvert7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvert7 * This,
            /* [in] */ BSTR newVal);
        
        END_INTERFACE
    } IltmmConvert7Vtbl;

    interface IltmmConvert7
    {
        CONST_VTBL struct IltmmConvert7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert7_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert7_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert7_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert7_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert7_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert7_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert7_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert7_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert7_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert7_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert7_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert7_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert7_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert7_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert7_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert7_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert7_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert7_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert7_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert7_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert7_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert7_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert7_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert7_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert7_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert7_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert7_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert7_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert7_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert7_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert7_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert7_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert7_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert7_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert7_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert7_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert7_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert7_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert7_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert7_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert7_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert7_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert7_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert7_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert7_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert7_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert7_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert7_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert7_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert7_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert7_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert7_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert7_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert7_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert7_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert7_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert7_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert7_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert7_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert7_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert7_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert7_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert7_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert7_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert7_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert7_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert7_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert7_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert7_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert7_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert7_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert7_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvert7_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvert7_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvert7_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvert7_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvert7_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert7_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert8_INTERFACE_DEFINED__
#define __IltmmConvert8_INTERFACE_DEFINED__

/* interface IltmmConvert8 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert8;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161097-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert8 : public IltmmConvert7
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EstimateOutputSize( 
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EstimateOutputBitRate( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert8Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert8 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert8 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert8 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert8 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert8 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert8 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert8 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert8 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert8 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert8 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert8 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert8 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert8 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert8 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert8 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert8 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert8 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert8 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert8 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert8 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert8 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert8 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert8 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert8 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert8 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert8 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert8 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert8 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert8 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert8 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert8 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert8 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert8 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvert8 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvert8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvert8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvert8 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvert8 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvert8 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmConvert8Vtbl;

    interface IltmmConvert8
    {
        CONST_VTBL struct IltmmConvert8Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert8_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert8_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert8_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert8_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert8_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert8_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert8_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert8_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert8_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert8_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert8_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert8_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert8_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert8_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert8_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert8_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert8_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert8_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert8_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert8_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert8_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert8_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert8_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert8_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert8_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert8_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert8_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert8_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert8_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert8_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert8_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert8_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert8_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert8_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert8_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert8_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert8_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert8_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert8_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert8_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert8_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert8_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert8_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert8_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert8_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert8_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert8_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert8_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert8_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert8_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert8_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert8_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert8_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert8_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert8_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert8_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert8_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert8_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert8_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert8_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert8_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert8_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert8_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert8_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert8_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert8_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert8_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert8_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert8_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert8_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert8_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert8_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert8_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert8_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert8_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert8_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert8_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert8_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert8_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvert8_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvert8_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvert8_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvert8_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvert8_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvert8_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvert8_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert8_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert9_INTERFACE_DEFINED__
#define __IltmmConvert9_INTERFACE_DEFINED__

/* interface IltmmConvert9 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert9;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016109D-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert9 : public IltmmConvert8
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PauseConvert( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RunConvert( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert9Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert9 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert9 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert9 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert9 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert9 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert9 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert9 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert9 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert9 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert9 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert9 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert9 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert9 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert9 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert9 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert9 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert9 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert9 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert9 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert9 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert9 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert9 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert9 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert9 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert9 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert9 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert9 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert9 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert9 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert9 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert9 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert9 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert9 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvert9 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvert9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvert9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvert9 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvert9 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvert9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvert9 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvert9 * This);
        
        END_INTERFACE
    } IltmmConvert9Vtbl;

    interface IltmmConvert9
    {
        CONST_VTBL struct IltmmConvert9Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert9_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert9_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert9_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert9_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert9_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert9_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert9_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert9_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert9_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert9_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert9_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert9_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert9_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert9_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert9_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert9_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert9_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert9_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert9_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert9_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert9_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert9_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert9_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert9_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert9_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert9_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert9_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert9_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert9_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert9_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert9_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert9_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert9_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert9_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert9_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert9_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert9_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert9_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert9_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert9_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert9_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert9_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert9_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert9_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert9_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert9_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert9_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert9_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert9_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert9_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert9_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert9_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert9_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert9_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert9_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert9_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert9_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert9_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert9_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert9_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert9_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert9_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert9_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert9_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert9_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert9_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert9_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert9_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert9_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert9_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert9_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert9_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert9_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert9_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert9_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert9_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert9_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert9_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert9_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvert9_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvert9_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvert9_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvert9_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvert9_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvert9_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvert9_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvert9_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvert9_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert9_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert10_INTERFACE_DEFINED__
#define __IltmmConvert10_INTERFACE_DEFINED__

/* interface IltmmConvert10 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert10;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016109F-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert10 : public IltmmConvert9
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowFrame( 
            /* [retval][out] */ long *phWnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowFrame( 
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowSizeMode( 
            /* [retval][out] */ ltmmSizeMode *pSizeMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowSizeMode( 
            /* [in] */ ltmmSizeMode SizeMode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FullScreenMode( 
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FullScreenMode( 
            /* [in] */ VARIANT_BOOL FullScreenMode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ToggleFullScreenMode( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowWidth( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHeight( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWidth( 
            /* [retval][out] */ long *pWidth) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoHeight( 
            /* [retval][out] */ long *pHeight) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowLeft( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowTop( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetVideoWindowPos( 
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHandle( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EnableStillCapture( 
            /* [retval][out] */ VARIANT_BOOL *phWnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EnableStillCapture( 
            /* [in] */ VARIANT_BOOL hWnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StillCaptureLimit( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StillCaptureLimit( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveStillBitmap( 
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Preview( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Preview( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewVisible( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreviewVisible( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert10Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert10 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert10 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert10 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert10 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert10 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert10 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert10 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert10 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert10 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert10 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert10 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert10 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert10 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert10 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert10 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert10 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert10 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert10 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert10 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert10 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert10 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert10 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert10 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert10 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert10 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert10 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert10 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert10 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert10 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert10 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert10 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert10 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert10 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert10 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert10 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert10 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert10 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert10 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert10 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert10 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert10 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvert10 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvert10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvert10 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvert10 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvert10 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvert10 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvert10 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmConvert10 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmConvert10 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmConvert10 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmConvert10 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmConvert10 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmConvert10 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmConvert10 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableStillCapture )( 
            IltmmConvert10 * This,
            /* [retval][out] */ VARIANT_BOOL *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableStillCapture )( 
            IltmmConvert10 * This,
            /* [in] */ VARIANT_BOOL hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillCaptureLimit )( 
            IltmmConvert10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillCaptureLimit )( 
            IltmmConvert10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmConvert10 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmConvert10 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmConvert10 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVisible )( 
            IltmmConvert10 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewVisible )( 
            IltmmConvert10 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmConvert10Vtbl;

    interface IltmmConvert10
    {
        CONST_VTBL struct IltmmConvert10Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert10_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert10_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert10_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert10_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert10_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert10_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert10_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert10_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert10_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert10_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert10_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert10_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert10_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert10_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert10_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert10_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert10_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert10_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert10_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert10_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert10_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert10_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert10_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert10_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert10_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert10_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert10_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert10_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert10_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert10_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert10_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert10_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert10_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert10_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert10_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert10_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert10_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert10_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert10_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert10_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert10_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert10_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert10_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert10_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert10_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert10_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert10_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert10_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert10_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert10_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert10_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert10_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert10_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert10_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert10_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert10_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert10_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert10_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert10_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert10_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert10_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert10_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert10_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert10_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert10_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert10_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert10_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert10_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert10_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert10_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert10_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert10_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert10_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert10_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert10_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert10_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert10_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert10_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert10_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvert10_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvert10_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvert10_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvert10_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvert10_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvert10_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvert10_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvert10_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvert10_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 


#define IltmmConvert10_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmConvert10_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmConvert10_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmConvert10_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmConvert10_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmConvert10_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmConvert10_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmConvert10_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmConvert10_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmConvert10_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmConvert10_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmConvert10_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmConvert10_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmConvert10_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmConvert10_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmConvert10_get_EnableStillCapture(This,phWnd)	\
    ( (This)->lpVtbl -> get_EnableStillCapture(This,phWnd) ) 

#define IltmmConvert10_put_EnableStillCapture(This,hWnd)	\
    ( (This)->lpVtbl -> put_EnableStillCapture(This,hWnd) ) 

#define IltmmConvert10_get_StillCaptureLimit(This,pVal)	\
    ( (This)->lpVtbl -> get_StillCaptureLimit(This,pVal) ) 

#define IltmmConvert10_put_StillCaptureLimit(This,newVal)	\
    ( (This)->lpVtbl -> put_StillCaptureLimit(This,newVal) ) 

#define IltmmConvert10_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmConvert10_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmConvert10_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmConvert10_get_PreviewVisible(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVisible(This,pVal) ) 

#define IltmmConvert10_put_PreviewVisible(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewVisible(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert10_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert11_INTERFACE_DEFINED__
#define __IltmmConvert11_INTERFACE_DEFINED__

/* interface IltmmConvert11 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert11;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610A3-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert11 : public IltmmConvert10
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenLogFile( 
            /* [in] */ BSTR filename,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseLogFile( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert11Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert11 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert11 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert11 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert11 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert11 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert11 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert11 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert11 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert11 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert11 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert11 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert11 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert11 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert11 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert11 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert11 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert11 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert11 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert11 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert11 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert11 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert11 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert11 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert11 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert11 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert11 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert11 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert11 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert11 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert11 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert11 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert11 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert11 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert11 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert11 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert11 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert11 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert11 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert11 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert11 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert11 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvert11 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvert11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvert11 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvert11 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvert11 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvert11 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvert11 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmConvert11 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmConvert11 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmConvert11 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmConvert11 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmConvert11 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmConvert11 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmConvert11 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableStillCapture )( 
            IltmmConvert11 * This,
            /* [retval][out] */ VARIANT_BOOL *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableStillCapture )( 
            IltmmConvert11 * This,
            /* [in] */ VARIANT_BOOL hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillCaptureLimit )( 
            IltmmConvert11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillCaptureLimit )( 
            IltmmConvert11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmConvert11 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmConvert11 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmConvert11 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVisible )( 
            IltmmConvert11 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewVisible )( 
            IltmmConvert11 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenLogFile )( 
            IltmmConvert11 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CloseLogFile )( 
            IltmmConvert11 * This);
        
        END_INTERFACE
    } IltmmConvert11Vtbl;

    interface IltmmConvert11
    {
        CONST_VTBL struct IltmmConvert11Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert11_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert11_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert11_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert11_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert11_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert11_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert11_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert11_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert11_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert11_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert11_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert11_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert11_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert11_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert11_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert11_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert11_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert11_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert11_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert11_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert11_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert11_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert11_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert11_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert11_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert11_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert11_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert11_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert11_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert11_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert11_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert11_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert11_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert11_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert11_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert11_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert11_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert11_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert11_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert11_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert11_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert11_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert11_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert11_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert11_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert11_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert11_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert11_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert11_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert11_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert11_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert11_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert11_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert11_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert11_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert11_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert11_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert11_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert11_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert11_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert11_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert11_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert11_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert11_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert11_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert11_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert11_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert11_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert11_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert11_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert11_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert11_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert11_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert11_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert11_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert11_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert11_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert11_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert11_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvert11_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvert11_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvert11_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvert11_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvert11_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvert11_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvert11_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvert11_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvert11_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 


#define IltmmConvert11_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmConvert11_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmConvert11_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmConvert11_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmConvert11_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmConvert11_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmConvert11_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmConvert11_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmConvert11_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmConvert11_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmConvert11_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmConvert11_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmConvert11_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmConvert11_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmConvert11_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmConvert11_get_EnableStillCapture(This,phWnd)	\
    ( (This)->lpVtbl -> get_EnableStillCapture(This,phWnd) ) 

#define IltmmConvert11_put_EnableStillCapture(This,hWnd)	\
    ( (This)->lpVtbl -> put_EnableStillCapture(This,hWnd) ) 

#define IltmmConvert11_get_StillCaptureLimit(This,pVal)	\
    ( (This)->lpVtbl -> get_StillCaptureLimit(This,pVal) ) 

#define IltmmConvert11_put_StillCaptureLimit(This,newVal)	\
    ( (This)->lpVtbl -> put_StillCaptureLimit(This,newVal) ) 

#define IltmmConvert11_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmConvert11_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmConvert11_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmConvert11_get_PreviewVisible(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVisible(This,pVal) ) 

#define IltmmConvert11_put_PreviewVisible(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewVisible(This,newVal) ) 


#define IltmmConvert11_OpenLogFile(This,filename,flags)	\
    ( (This)->lpVtbl -> OpenLogFile(This,filename,flags) ) 

#define IltmmConvert11_CloseLogFile(This)	\
    ( (This)->lpVtbl -> CloseLogFile(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert11_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert12_INTERFACE_DEFINED__
#define __IltmmConvert12_INTERFACE_DEFINED__

/* interface IltmmConvert12 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert12;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610AF-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert12 : public IltmmConvert11
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseDVDSource( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseDVDSource( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvert12Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert12 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert12 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert12 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert12 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert12 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert12 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert12 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert12 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert12 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert12 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert12 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert12 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert12 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert12 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert12 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert12 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert12 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert12 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert12 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert12 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert12 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert12 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert12 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert12 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert12 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert12 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert12 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert12 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert12 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert12 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert12 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert12 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert12 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert12 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert12 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert12 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvert12 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvert12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvert12 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvert12 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvert12 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmConvert12 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmConvert12 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmConvert12 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmConvert12 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmConvert12 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmConvert12 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableStillCapture )( 
            IltmmConvert12 * This,
            /* [retval][out] */ VARIANT_BOOL *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableStillCapture )( 
            IltmmConvert12 * This,
            /* [in] */ VARIANT_BOOL hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillCaptureLimit )( 
            IltmmConvert12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillCaptureLimit )( 
            IltmmConvert12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmConvert12 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmConvert12 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmConvert12 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVisible )( 
            IltmmConvert12 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewVisible )( 
            IltmmConvert12 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenLogFile )( 
            IltmmConvert12 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CloseLogFile )( 
            IltmmConvert12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseDVDSource )( 
            IltmmConvert12 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseDVDSource )( 
            IltmmConvert12 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmConvert12Vtbl;

    interface IltmmConvert12
    {
        CONST_VTBL struct IltmmConvert12Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert12_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert12_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert12_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert12_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert12_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert12_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert12_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert12_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert12_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert12_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert12_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert12_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert12_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert12_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert12_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert12_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert12_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert12_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert12_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert12_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert12_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert12_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert12_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert12_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert12_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert12_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert12_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert12_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert12_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert12_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert12_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert12_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert12_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert12_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert12_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert12_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert12_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert12_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert12_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert12_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert12_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert12_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert12_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert12_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert12_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert12_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert12_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert12_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert12_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert12_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert12_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert12_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert12_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert12_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert12_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert12_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert12_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert12_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert12_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert12_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert12_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert12_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert12_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert12_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert12_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert12_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert12_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert12_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert12_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert12_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert12_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert12_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert12_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert12_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert12_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert12_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert12_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert12_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert12_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvert12_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvert12_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvert12_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvert12_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvert12_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvert12_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvert12_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvert12_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvert12_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 


#define IltmmConvert12_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmConvert12_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmConvert12_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmConvert12_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmConvert12_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmConvert12_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmConvert12_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmConvert12_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmConvert12_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmConvert12_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmConvert12_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmConvert12_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmConvert12_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmConvert12_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmConvert12_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmConvert12_get_EnableStillCapture(This,phWnd)	\
    ( (This)->lpVtbl -> get_EnableStillCapture(This,phWnd) ) 

#define IltmmConvert12_put_EnableStillCapture(This,hWnd)	\
    ( (This)->lpVtbl -> put_EnableStillCapture(This,hWnd) ) 

#define IltmmConvert12_get_StillCaptureLimit(This,pVal)	\
    ( (This)->lpVtbl -> get_StillCaptureLimit(This,pVal) ) 

#define IltmmConvert12_put_StillCaptureLimit(This,newVal)	\
    ( (This)->lpVtbl -> put_StillCaptureLimit(This,newVal) ) 

#define IltmmConvert12_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmConvert12_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmConvert12_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmConvert12_get_PreviewVisible(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVisible(This,pVal) ) 

#define IltmmConvert12_put_PreviewVisible(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewVisible(This,newVal) ) 


#define IltmmConvert12_OpenLogFile(This,filename,flags)	\
    ( (This)->lpVtbl -> OpenLogFile(This,filename,flags) ) 

#define IltmmConvert12_CloseLogFile(This)	\
    ( (This)->lpVtbl -> CloseLogFile(This) ) 


#define IltmmConvert12_get_UseDVDSource(This,pVal)	\
    ( (This)->lpVtbl -> get_UseDVDSource(This,pVal) ) 

#define IltmmConvert12_put_UseDVDSource(This,newVal)	\
    ( (This)->lpVtbl -> put_UseDVDSource(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert12_INTERFACE_DEFINED__ */


#ifndef __IltmmConvert_INTERFACE_DEFINED__
#define __IltmmConvert_INTERFACE_DEFINED__

/* interface IltmmConvert */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvert;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B5-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvert : public IltmmConvert12
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IndexMode( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IndexMode( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvert * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvert * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvert * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvert * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvert * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvert * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvert * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvert * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvert * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvert * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvert * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmCompressors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvert * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *HasDlg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvert * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvert * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvert * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvert * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvert * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmConvert * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvert * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvert * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvert * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvert * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvert * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvert * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvert * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvert * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvert * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvert * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvert * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvert * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvert * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvert * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvert * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvert * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvert * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvert * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvert * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvert * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvert * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvert * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvert * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvert * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvert * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvert * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvert * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvert * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvert * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvert * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvert * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvert * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvert * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvert * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvert * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvert * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvert * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvert * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvert * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvert * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvert * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvert * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmConvert * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmConvert * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmConvert * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmConvert * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmConvert * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmConvert * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmConvert * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableStillCapture )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT_BOOL *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableStillCapture )( 
            IltmmConvert * This,
            /* [in] */ VARIANT_BOOL hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillCaptureLimit )( 
            IltmmConvert * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillCaptureLimit )( 
            IltmmConvert * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmConvert * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmConvert * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVisible )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewVisible )( 
            IltmmConvert * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenLogFile )( 
            IltmmConvert * This,
            /* [in] */ BSTR filename,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CloseLogFile )( 
            IltmmConvert * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseDVDSource )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseDVDSource )( 
            IltmmConvert * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IndexMode )( 
            IltmmConvert * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IndexMode )( 
            IltmmConvert * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmConvertVtbl;

    interface IltmmConvert
    {
        CONST_VTBL struct IltmmConvertVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvert_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvert_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvert_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvert_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvert_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvert_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvert_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvert_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmConvert_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmConvert_get_TargetFile(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pVal) ) 

#define IltmmConvert_put_TargetFile(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFile(This,newVal) ) 

#define IltmmConvert_get_AudioCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,pVal) ) 

#define IltmmConvert_get_VideoCompressors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,pVal) ) 

#define IltmmConvert_HasDialog(This,Dialog,HasDlg)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,HasDlg) ) 

#define IltmmConvert_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvert_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvert_get_WMCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pVal) ) 

#define IltmmConvert_put_WMCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,newVal) ) 

#define IltmmConvert_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmConvert_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmConvert_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmConvert_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvert_get_State(This,pVal)	\
    ( (This)->lpVtbl -> get_State(This,pVal) ) 

#define IltmmConvert_get_PercentComplete(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pVal) ) 

#define IltmmConvert_get_SourceHGlobal(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pVal) ) 

#define IltmmConvert_put_SourceHGlobal(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,newVal) ) 

#define IltmmConvert_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvert_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvert_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvert_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvert_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvert_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvert_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvert_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvert_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvert_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvert_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvert_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvert_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvert_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvert_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvert_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvert_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvert_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvert_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvert_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvert_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvert_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvert_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvert_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvert_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvert_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvert_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvert_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvert_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvert_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvert_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvert_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvert_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvert_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvert_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvert_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvert_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvert_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvert_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvert_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvert_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvert_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvert_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvert_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvert_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvert_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvert_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvert_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvert_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvert_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvert_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvert_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvert_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvert_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvert_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvert_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvert_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvert_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvert_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvert_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvert_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvert_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 


#define IltmmConvert_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmConvert_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmConvert_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmConvert_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmConvert_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmConvert_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmConvert_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmConvert_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmConvert_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmConvert_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmConvert_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmConvert_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmConvert_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmConvert_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmConvert_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmConvert_get_EnableStillCapture(This,phWnd)	\
    ( (This)->lpVtbl -> get_EnableStillCapture(This,phWnd) ) 

#define IltmmConvert_put_EnableStillCapture(This,hWnd)	\
    ( (This)->lpVtbl -> put_EnableStillCapture(This,hWnd) ) 

#define IltmmConvert_get_StillCaptureLimit(This,pVal)	\
    ( (This)->lpVtbl -> get_StillCaptureLimit(This,pVal) ) 

#define IltmmConvert_put_StillCaptureLimit(This,newVal)	\
    ( (This)->lpVtbl -> put_StillCaptureLimit(This,newVal) ) 

#define IltmmConvert_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmConvert_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmConvert_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmConvert_get_PreviewVisible(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVisible(This,pVal) ) 

#define IltmmConvert_put_PreviewVisible(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewVisible(This,newVal) ) 


#define IltmmConvert_OpenLogFile(This,filename,flags)	\
    ( (This)->lpVtbl -> OpenLogFile(This,filename,flags) ) 

#define IltmmConvert_CloseLogFile(This)	\
    ( (This)->lpVtbl -> CloseLogFile(This) ) 


#define IltmmConvert_get_UseDVDSource(This,pVal)	\
    ( (This)->lpVtbl -> get_UseDVDSource(This,pVal) ) 

#define IltmmConvert_put_UseDVDSource(This,newVal)	\
    ( (This)->lpVtbl -> put_UseDVDSource(This,newVal) ) 


#define IltmmConvert_get_IndexMode(This,pVal)	\
    ( (This)->lpVtbl -> get_IndexMode(This,pVal) ) 

#define IltmmConvert_put_IndexMode(This,newVal)	\
    ( (This)->lpVtbl -> put_IndexMode(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvert_INTERFACE_DEFINED__ */


#ifndef __IltmmPlay1_INTERFACE_DEFINED__
#define __IltmmPlay1_INTERFACE_DEFINED__

/* interface IltmmPlay1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlay1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161011-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlay1 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFile( 
            /* [retval][out] */ BSTR *pFileName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceFile( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Run( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Pause( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Rate( 
            /* [retval][out] */ double *pRate) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Rate( 
            /* [in] */ double Rate) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Volume( 
            /* [retval][out] */ long *pVolume) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Volume( 
            /* [in] */ long Volume) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Balance( 
            /* [retval][out] */ long *pBalance) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Balance( 
            /* [in] */ long Balance) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ long *pState) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentPosition( 
            /* [retval][out] */ double *pPosition) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentPosition( 
            /* [in] */ double Position) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
            /* [retval][out] */ double *pDuration) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowFrame( 
            /* [retval][out] */ long *phWnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowFrame( 
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentFramePosition( 
            /* [retval][out] */ long *pPosition) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentFramePosition( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FrameDuration( 
            /* [retval][out] */ long *pDuration) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mute( 
            /* [retval][out] */ VARIANT_BOOL *pMute) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Mute( 
            /* [in] */ VARIANT_BOOL Mute) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FullScreenMode( 
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FullScreenMode( 
            /* [in] */ VARIANT_BOOL FullScreenMode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [retval][out] */ BSTR *pAuthor) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *pTitle) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Copyright( 
            /* [retval][out] */ BSTR *pCopyright) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pDescription) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Rating( 
            /* [retval][out] */ BSTR *pRating) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMCertificate( 
            /* [retval][out] */ IUnknown **ppWMCertificate) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMCertificate( 
            /* [in] */ IUnknown *pWMCertificate) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetNotifyWindow( 
            /* [in] */ long hWnd,
            /* [in] */ long Msg) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentTrackingPosition( 
            /* [retval][out] */ long *pPosition) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentTrackingPosition( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PlayCount( 
            /* [retval][out] */ long *pPlayCount) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PlayCount( 
            /* [in] */ long PlayCount) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWidth( 
            /* [retval][out] */ long *pWidth) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoHeight( 
            /* [retval][out] */ long *pHeight) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionStart( 
            /* [retval][out] */ double *pStart) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectionStart( 
            /* [in] */ double Start) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionEnd( 
            /* [retval][out] */ double *pEnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectionEnd( 
            /* [in] */ double End) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoStart( 
            /* [retval][out] */ VARIANT_BOOL *pAutoStart) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoStart( 
            /* [in] */ VARIANT_BOOL AutoStart) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoRewind( 
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoRewind( 
            /* [in] */ VARIANT_BOOL AutoRewind) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TrackingSelectionStart( 
            /* [retval][out] */ long *pStart) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TrackingSelectionEnd( 
            /* [retval][out] */ long *pEnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowSizeMode( 
            /* [retval][out] */ ltmmSizeMode *pSizeMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowSizeMode( 
            /* [in] */ ltmmSizeMode SizeMode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE NextFrame( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PreviousFrame( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CheckSeekingCapabilities( 
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SeekSelectionStart( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SeekSelectionEnd( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MarkSelectionStart( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MarkSelectionEnd( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SeekStart( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SeekEnd( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ToggleFullScreenMode( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowWidth( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHeight( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowLeft( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowTop( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedAudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedVideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE HasDialog( 
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ShowDialog( 
            /* [in] */ long Dialog,
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceHGlobal( 
            /* [retval][out] */ long *pHGlobal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceHGlobal( 
            /* [in] */ long HGlobal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceArray( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceArray( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceObject( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceObject( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ResetSource( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlay1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlay1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlay1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlay1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlay1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlay1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlay1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlay1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlay1 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlay1 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlay1 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlay1 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlay1 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlay1 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlay1 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlay1 * This,
            /* [in] */ double Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlay1 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmPlay1 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlay1 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlay1 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlay1 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlay1 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlay1 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlay1 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlay1 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlay1 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlay1 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlay1 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlay1 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlay1 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmPlay1 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlay1 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlay1 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlay1 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlay1 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlay1 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlay1 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlay1 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlay1 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlay1 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlay1 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlay1 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlay1 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlay1 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlay1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlay1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlay1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlay1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlay1 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlay1 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlay1 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlay1 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlay1 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlay1 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlay1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlay1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlay1 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlay1 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlay1 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmPlay1Vtbl;

    interface IltmmPlay1
    {
        CONST_VTBL struct IltmmPlay1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlay1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlay1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlay1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlay1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlay1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlay1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlay1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlay1_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlay1_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlay1_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlay1_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlay1_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlay1_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlay1_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlay1_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlay1_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlay1_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlay1_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlay1_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlay1_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlay1_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlay1_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlay1_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmPlay1_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmPlay1_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlay1_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlay1_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlay1_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlay1_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlay1_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlay1_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlay1_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlay1_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlay1_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlay1_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlay1_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlay1_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlay1_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlay1_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmPlay1_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlay1_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlay1_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlay1_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlay1_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlay1_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlay1_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlay1_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlay1_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlay1_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlay1_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlay1_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlay1_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlay1_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlay1_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlay1_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlay1_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlay1_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlay1_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlay1_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlay1_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlay1_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlay1_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlay1_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlay1_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlay1_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlay1_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlay1_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlay1_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlay1_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlay1_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlay1_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlay1_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlay1_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlay1_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlay1_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlay1_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlay1_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlay1_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlay1_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlay1_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlay1_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlay1_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlay1_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlay1_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlay1_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlay1_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlay1_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlay1_INTERFACE_DEFINED__ */


#ifndef __IltmmPlay2_INTERFACE_DEFINED__
#define __IltmmPlay2_INTERFACE_DEFINED__

/* interface IltmmPlay2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlay2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161031-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlay2 : public IltmmPlay1
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioRenderers( 
            /* [retval][out] */ IltmmRenderers **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubObject( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EditGraph( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlay2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlay2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlay2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlay2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlay2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlay2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlay2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlay2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlay2 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlay2 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlay2 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlay2 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlay2 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlay2 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlay2 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlay2 * This,
            /* [in] */ double Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlay2 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmPlay2 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlay2 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlay2 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlay2 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlay2 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlay2 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlay2 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlay2 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlay2 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlay2 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlay2 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlay2 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlay2 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmPlay2 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlay2 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlay2 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlay2 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlay2 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlay2 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlay2 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlay2 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlay2 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlay2 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlay2 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlay2 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlay2 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlay2 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlay2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlay2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlay2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlay2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlay2 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlay2 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlay2 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlay2 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlay2 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlay2 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlay2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlay2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlay2 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlay2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlay2 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlay2 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlay2 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlay2 * This);
        
        END_INTERFACE
    } IltmmPlay2Vtbl;

    interface IltmmPlay2
    {
        CONST_VTBL struct IltmmPlay2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlay2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlay2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlay2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlay2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlay2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlay2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlay2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlay2_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlay2_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlay2_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlay2_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlay2_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlay2_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlay2_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlay2_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlay2_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlay2_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlay2_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlay2_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlay2_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlay2_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlay2_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlay2_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmPlay2_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmPlay2_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlay2_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlay2_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlay2_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlay2_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlay2_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlay2_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlay2_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlay2_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlay2_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlay2_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlay2_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlay2_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlay2_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlay2_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmPlay2_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlay2_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlay2_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlay2_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlay2_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlay2_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlay2_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlay2_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlay2_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlay2_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlay2_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlay2_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlay2_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlay2_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlay2_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlay2_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlay2_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlay2_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlay2_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlay2_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlay2_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlay2_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlay2_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlay2_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlay2_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlay2_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlay2_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlay2_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlay2_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlay2_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlay2_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlay2_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlay2_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlay2_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlay2_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlay2_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlay2_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlay2_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlay2_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlay2_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlay2_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlay2_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlay2_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlay2_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlay2_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlay2_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlay2_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlay2_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlay2_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlay2_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlay2_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlay2_INTERFACE_DEFINED__ */


#ifndef __IltmmPlay3_INTERFACE_DEFINED__
#define __IltmmPlay3_INTERFACE_DEFINED__

/* interface IltmmPlay3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlay3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016103B-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlay3 : public IltmmPlay2
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetStillPicture( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetStillDIB( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RenderedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UnrenderedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlay3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlay3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlay3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlay3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlay3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlay3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlay3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlay3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlay3 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlay3 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlay3 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlay3 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlay3 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlay3 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlay3 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlay3 * This,
            /* [in] */ double Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlay3 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmPlay3 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlay3 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlay3 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlay3 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlay3 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlay3 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlay3 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlay3 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlay3 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlay3 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlay3 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlay3 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlay3 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmPlay3 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlay3 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlay3 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlay3 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlay3 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlay3 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlay3 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlay3 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlay3 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlay3 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlay3 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlay3 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlay3 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlay3 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlay3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlay3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlay3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlay3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlay3 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlay3 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlay3 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlay3 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlay3 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlay3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlay3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlay3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlay3 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlay3 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlay3 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlay3 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlay3 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlay3 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlay3 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmPlay3Vtbl;

    interface IltmmPlay3
    {
        CONST_VTBL struct IltmmPlay3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlay3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlay3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlay3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlay3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlay3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlay3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlay3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlay3_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlay3_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlay3_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlay3_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlay3_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlay3_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlay3_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlay3_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlay3_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlay3_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlay3_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlay3_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlay3_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlay3_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlay3_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlay3_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmPlay3_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmPlay3_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlay3_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlay3_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlay3_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlay3_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlay3_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlay3_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlay3_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlay3_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlay3_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlay3_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlay3_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlay3_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlay3_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlay3_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmPlay3_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlay3_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlay3_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlay3_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlay3_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlay3_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlay3_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlay3_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlay3_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlay3_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlay3_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlay3_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlay3_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlay3_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlay3_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlay3_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlay3_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlay3_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlay3_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlay3_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlay3_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlay3_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlay3_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlay3_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlay3_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlay3_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlay3_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlay3_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlay3_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlay3_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlay3_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlay3_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlay3_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlay3_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlay3_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlay3_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlay3_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlay3_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlay3_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlay3_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlay3_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlay3_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlay3_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlay3_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlay3_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlay3_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlay3_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlay3_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlay3_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlay3_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlay3_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlay3_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlay3_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlay3_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlay3_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlay3_INTERFACE_DEFINED__ */


#ifndef __IltmmPlay4_INTERFACE_DEFINED__
#define __IltmmPlay4_INTERFACE_DEFINED__

/* interface IltmmPlay4 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlay4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161049-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlay4 : public IltmmPlay3
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CloseCaptioning( 
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CloseCaptioning( 
            /* [in] */ VARIANT_BOOL CloseCaptioning) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ToggleCloseCaptioning( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHandle( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceVideoType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceAudioType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceVideoFOURCC( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceAudioFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AllowedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AllowedStreams( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubObjectDispatch( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MidiRenderers( 
            /* [retval][out] */ IltmmRenderers **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDecoderResolution( 
            /* [retval][out] */ ltmmDVResolution *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DVDecoderResolution( 
            /* [in] */ ltmmDVResolution Val) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetVideoWindowPos( 
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceStream( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceStream( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsRateSupported( 
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveStillDIB( 
            /* [in] */ BSTR filename,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UsingDVDecoder( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlay4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlay4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlay4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlay4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlay4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlay4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlay4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlay4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlay4 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlay4 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlay4 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlay4 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlay4 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlay4 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlay4 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlay4 * This,
            /* [in] */ double Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlay4 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmPlay4 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlay4 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlay4 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlay4 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlay4 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlay4 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlay4 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlay4 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlay4 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlay4 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlay4 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlay4 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmPlay4 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlay4 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlay4 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlay4 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlay4 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlay4 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlay4 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlay4 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlay4 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlay4 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlay4 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlay4 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlay4 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlay4 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlay4 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlay4 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlay4 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlay4 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlay4 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlay4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlay4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlay4 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlay4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlay4 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlay4 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlay4 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlay4 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlay4 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlay4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlay4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlay4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlay4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlay4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlay4 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlay4 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlay4 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlay4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlay4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlay4 * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlay4 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlay4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmPlay4Vtbl;

    interface IltmmPlay4
    {
        CONST_VTBL struct IltmmPlay4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlay4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlay4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlay4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlay4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlay4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlay4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlay4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlay4_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlay4_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlay4_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlay4_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlay4_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlay4_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlay4_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlay4_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlay4_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlay4_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlay4_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlay4_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlay4_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlay4_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlay4_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlay4_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmPlay4_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmPlay4_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlay4_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlay4_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlay4_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlay4_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlay4_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlay4_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlay4_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlay4_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlay4_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlay4_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlay4_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlay4_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlay4_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlay4_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmPlay4_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlay4_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlay4_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlay4_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlay4_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlay4_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlay4_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlay4_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlay4_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlay4_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlay4_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlay4_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlay4_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlay4_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlay4_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlay4_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlay4_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlay4_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlay4_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlay4_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlay4_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlay4_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlay4_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlay4_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlay4_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlay4_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlay4_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlay4_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlay4_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlay4_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlay4_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlay4_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlay4_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlay4_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlay4_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlay4_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlay4_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlay4_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlay4_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlay4_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlay4_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlay4_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlay4_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlay4_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlay4_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlay4_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlay4_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlay4_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlay4_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlay4_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlay4_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlay4_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlay4_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlay4_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlay4_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlay4_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlay4_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlay4_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlay4_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlay4_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlay4_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlay4_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlay4_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlay4_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlay4_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlay4_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlay4_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlay4_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlay4_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlay4_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlay4_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlay4_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlay4_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlay4_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlay4_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlay4_INTERFACE_DEFINED__ */


#ifndef __IltmmPlay5_INTERFACE_DEFINED__
#define __IltmmPlay5_INTERFACE_DEFINED__

/* interface IltmmPlay5 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlay5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016106F-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlay5 : public IltmmPlay4
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StillTap( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StillTap( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveStillBitmap( 
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToStream( 
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToFile( 
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromStream( 
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromFile( 
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CanSaveObjectSettings( 
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlay5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlay5 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlay5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlay5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlay5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlay5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlay5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlay5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlay5 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlay5 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlay5 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlay5 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlay5 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlay5 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlay5 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlay5 * This,
            /* [in] */ double Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlay5 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmPlay5 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlay5 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlay5 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlay5 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlay5 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlay5 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlay5 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlay5 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlay5 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlay5 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlay5 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlay5 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmPlay5 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlay5 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlay5 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlay5 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlay5 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlay5 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlay5 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlay5 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlay5 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlay5 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlay5 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlay5 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlay5 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlay5 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlay5 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlay5 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlay5 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlay5 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlay5 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlay5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlay5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlay5 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlay5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlay5 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlay5 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlay5 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlay5 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlay5 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlay5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlay5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlay5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlay5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlay5 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlay5 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlay5 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlay5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlay5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlay5 * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlay5 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlay5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillTap )( 
            IltmmPlay5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillTap )( 
            IltmmPlay5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmPlay5 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmPlay5 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmPlay5 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmPlay5 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmPlay5 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmPlay5 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmPlay5Vtbl;

    interface IltmmPlay5
    {
        CONST_VTBL struct IltmmPlay5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlay5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlay5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlay5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlay5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlay5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlay5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlay5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlay5_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlay5_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlay5_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlay5_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlay5_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlay5_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlay5_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlay5_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlay5_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlay5_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlay5_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlay5_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlay5_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlay5_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlay5_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlay5_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmPlay5_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmPlay5_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlay5_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlay5_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlay5_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlay5_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlay5_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlay5_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlay5_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlay5_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlay5_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlay5_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlay5_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlay5_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlay5_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlay5_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmPlay5_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlay5_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlay5_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlay5_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlay5_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlay5_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlay5_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlay5_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlay5_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlay5_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlay5_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlay5_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlay5_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlay5_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlay5_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlay5_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlay5_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlay5_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlay5_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlay5_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlay5_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlay5_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlay5_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlay5_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlay5_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlay5_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlay5_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlay5_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlay5_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlay5_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlay5_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlay5_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlay5_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlay5_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlay5_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlay5_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlay5_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlay5_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlay5_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlay5_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlay5_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlay5_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlay5_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlay5_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlay5_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlay5_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlay5_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlay5_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlay5_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlay5_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlay5_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlay5_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlay5_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlay5_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlay5_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlay5_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlay5_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlay5_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlay5_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlay5_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlay5_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlay5_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlay5_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlay5_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlay5_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlay5_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlay5_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlay5_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlay5_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlay5_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlay5_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlay5_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlay5_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlay5_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlay5_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmPlay5_get_StillTap(This,pVal)	\
    ( (This)->lpVtbl -> get_StillTap(This,pVal) ) 

#define IltmmPlay5_put_StillTap(This,newVal)	\
    ( (This)->lpVtbl -> put_StillTap(This,newVal) ) 

#define IltmmPlay5_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmPlay5_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmPlay5_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmPlay5_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmPlay5_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmPlay5_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlay5_INTERFACE_DEFINED__ */


#ifndef __IltmmPlay6_INTERFACE_DEFINED__
#define __IltmmPlay6_INTERFACE_DEFINED__

/* interface IltmmPlay6 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlay6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016107F-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlay6 : public IltmmPlay5
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDControl( 
            /* [retval][out] */ IltmmDVDControl **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlay6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlay6 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlay6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlay6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlay6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlay6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlay6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlay6 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlay6 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlay6 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlay6 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlay6 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlay6 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlay6 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlay6 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlay6 * This,
            /* [in] */ double Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlay6 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmPlay6 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlay6 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlay6 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlay6 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlay6 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlay6 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlay6 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlay6 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlay6 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlay6 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlay6 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlay6 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmPlay6 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlay6 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlay6 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlay6 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlay6 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlay6 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlay6 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlay6 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlay6 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlay6 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlay6 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlay6 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlay6 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlay6 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlay6 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlay6 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlay6 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlay6 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlay6 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlay6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlay6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlay6 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlay6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlay6 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlay6 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlay6 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlay6 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlay6 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlay6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlay6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlay6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlay6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlay6 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlay6 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlay6 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlay6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlay6 * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlay6 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlay6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillTap )( 
            IltmmPlay6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillTap )( 
            IltmmPlay6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmPlay6 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmPlay6 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmPlay6 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmPlay6 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmPlay6 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmPlay6 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmPlay6 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        END_INTERFACE
    } IltmmPlay6Vtbl;

    interface IltmmPlay6
    {
        CONST_VTBL struct IltmmPlay6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlay6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlay6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlay6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlay6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlay6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlay6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlay6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlay6_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlay6_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlay6_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlay6_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlay6_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlay6_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlay6_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlay6_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlay6_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlay6_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlay6_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlay6_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlay6_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlay6_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlay6_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlay6_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmPlay6_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmPlay6_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlay6_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlay6_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlay6_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlay6_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlay6_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlay6_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlay6_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlay6_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlay6_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlay6_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlay6_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlay6_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlay6_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlay6_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmPlay6_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlay6_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlay6_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlay6_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlay6_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlay6_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlay6_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlay6_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlay6_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlay6_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlay6_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlay6_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlay6_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlay6_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlay6_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlay6_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlay6_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlay6_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlay6_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlay6_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlay6_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlay6_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlay6_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlay6_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlay6_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlay6_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlay6_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlay6_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlay6_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlay6_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlay6_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlay6_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlay6_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlay6_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlay6_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlay6_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlay6_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlay6_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlay6_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlay6_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlay6_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlay6_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlay6_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlay6_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlay6_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlay6_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlay6_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlay6_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlay6_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlay6_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlay6_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlay6_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlay6_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlay6_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlay6_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlay6_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlay6_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlay6_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlay6_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlay6_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlay6_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlay6_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlay6_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlay6_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlay6_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlay6_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlay6_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlay6_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlay6_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlay6_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlay6_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlay6_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlay6_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlay6_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlay6_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmPlay6_get_StillTap(This,pVal)	\
    ( (This)->lpVtbl -> get_StillTap(This,pVal) ) 

#define IltmmPlay6_put_StillTap(This,newVal)	\
    ( (This)->lpVtbl -> put_StillTap(This,newVal) ) 

#define IltmmPlay6_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmPlay6_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmPlay6_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmPlay6_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmPlay6_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmPlay6_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmPlay6_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlay6_INTERFACE_DEFINED__ */


#ifndef __IltmmPlay7_INTERFACE_DEFINED__
#define __IltmmPlay7_INTERFACE_DEFINED__

/* interface IltmmPlay7 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlay7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161091-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlay7 : public IltmmPlay6
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreferredMPEG2Splitter( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreferredMPEG2Splitter( 
            /* [in] */ BSTR newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlay7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlay7 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlay7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlay7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlay7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlay7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlay7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlay7 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlay7 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlay7 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlay7 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlay7 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlay7 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlay7 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlay7 * This,
            /* [in] */ double Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlay7 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmPlay7 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlay7 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlay7 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlay7 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlay7 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlay7 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlay7 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmPlay7 * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlay7 * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlay7 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlay7 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlay7 * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlay7 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlay7 * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlay7 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlay7 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlay7 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlay7 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlay7 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlay7 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlay7 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlay7 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlay7 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlay7 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlay7 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlay7 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlay7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlay7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlay7 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlay7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlay7 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlay7 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlay7 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlay7 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlay7 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlay7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlay7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlay7 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlay7 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlay7 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlay7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlay7 * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlay7 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlay7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillTap )( 
            IltmmPlay7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillTap )( 
            IltmmPlay7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmPlay7 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmPlay7 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmPlay7 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmPlay7 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmPlay7 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmPlay7 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmPlay7 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmPlay7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmPlay7 * This,
            /* [in] */ BSTR newVal);
        
        END_INTERFACE
    } IltmmPlay7Vtbl;

    interface IltmmPlay7
    {
        CONST_VTBL struct IltmmPlay7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlay7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlay7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlay7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlay7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlay7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlay7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlay7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlay7_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlay7_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlay7_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlay7_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlay7_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlay7_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlay7_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlay7_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlay7_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlay7_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlay7_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlay7_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlay7_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlay7_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlay7_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlay7_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmPlay7_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmPlay7_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlay7_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlay7_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlay7_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlay7_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlay7_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlay7_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlay7_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlay7_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlay7_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlay7_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlay7_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlay7_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlay7_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlay7_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmPlay7_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlay7_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlay7_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlay7_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlay7_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlay7_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlay7_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlay7_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlay7_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlay7_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlay7_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlay7_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlay7_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlay7_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlay7_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlay7_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlay7_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlay7_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlay7_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlay7_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlay7_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlay7_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlay7_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlay7_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlay7_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlay7_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlay7_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlay7_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlay7_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlay7_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlay7_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlay7_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlay7_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlay7_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlay7_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlay7_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlay7_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlay7_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlay7_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlay7_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlay7_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlay7_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlay7_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlay7_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlay7_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlay7_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlay7_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlay7_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlay7_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlay7_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlay7_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlay7_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlay7_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlay7_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlay7_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlay7_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlay7_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlay7_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlay7_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlay7_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlay7_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlay7_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlay7_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlay7_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlay7_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlay7_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlay7_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlay7_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlay7_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlay7_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlay7_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlay7_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlay7_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlay7_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlay7_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmPlay7_get_StillTap(This,pVal)	\
    ( (This)->lpVtbl -> get_StillTap(This,pVal) ) 

#define IltmmPlay7_put_StillTap(This,newVal)	\
    ( (This)->lpVtbl -> put_StillTap(This,newVal) ) 

#define IltmmPlay7_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmPlay7_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmPlay7_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmPlay7_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmPlay7_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmPlay7_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmPlay7_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 


#define IltmmPlay7_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmPlay7_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlay7_INTERFACE_DEFINED__ */


#ifndef __IltmmPlay_INTERFACE_DEFINED__
#define __IltmmPlay_INTERFACE_DEFINED__

/* interface IltmmPlay */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlay;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B1-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlay : public IltmmPlay7
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseDVDSource( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseDVDSource( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlay * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlay * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlay * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlay * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlay * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlay * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlay * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlay * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlay * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlay * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlay * This,
            /* [in] */ double Rate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlay * This,
            /* [in] */ long Volume);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlay * This,
            /* [in] */ long Balance);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlay * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlay * This,
            /* [in] */ double Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlay * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmPlay * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmPlay * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlay * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlay * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlay * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlay * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlay * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetNotifyWindow )( 
            IltmmPlay * This,
            /* [in] */ long hWnd,
            /* [in] */ long Msg);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlay * This,
            /* [in] */ long Position);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlay * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlay * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlay * This,
            /* [in] */ double Start);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlay * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlay * This,
            /* [in] */ double End);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlay * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlay * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlay * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlay * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlay * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlay * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlay * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlay * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlay * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlay * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlay * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlay * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlay * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlay * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlay * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlay * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlay * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlay * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlay * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlay * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlay * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlay * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlay * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlay * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlay * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlay * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlay * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlay * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlay * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlay * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlay * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlay * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlay * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlay * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlay * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillTap )( 
            IltmmPlay * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillTap )( 
            IltmmPlay * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmPlay * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmPlay * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmPlay * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmPlay * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmPlay * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmPlay * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmPlay * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmPlay * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmPlay * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseDVDSource )( 
            IltmmPlay * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseDVDSource )( 
            IltmmPlay * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmPlayVtbl;

    interface IltmmPlay
    {
        CONST_VTBL struct IltmmPlayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlay_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlay_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlay_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlay_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlay_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlay_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlay_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlay_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlay_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlay_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlay_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlay_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlay_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlay_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlay_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlay_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlay_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlay_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlay_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlay_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlay_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlay_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlay_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmPlay_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmPlay_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlay_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlay_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlay_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlay_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlay_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlay_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlay_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlay_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlay_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlay_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlay_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlay_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlay_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlay_SetNotifyWindow(This,hWnd,Msg)	\
    ( (This)->lpVtbl -> SetNotifyWindow(This,hWnd,Msg) ) 

#define IltmmPlay_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlay_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlay_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlay_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlay_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlay_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlay_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlay_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlay_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlay_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlay_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlay_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlay_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlay_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlay_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlay_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlay_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlay_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlay_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlay_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlay_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlay_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlay_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlay_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlay_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlay_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlay_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlay_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlay_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlay_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlay_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlay_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlay_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlay_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlay_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlay_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlay_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlay_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlay_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlay_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlay_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlay_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlay_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlay_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlay_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlay_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlay_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlay_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlay_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlay_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlay_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlay_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlay_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlay_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlay_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlay_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlay_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlay_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlay_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlay_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlay_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlay_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlay_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlay_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlay_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlay_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlay_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlay_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlay_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlay_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlay_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlay_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlay_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlay_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlay_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmPlay_get_StillTap(This,pVal)	\
    ( (This)->lpVtbl -> get_StillTap(This,pVal) ) 

#define IltmmPlay_put_StillTap(This,newVal)	\
    ( (This)->lpVtbl -> put_StillTap(This,newVal) ) 

#define IltmmPlay_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmPlay_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmPlay_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmPlay_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmPlay_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmPlay_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmPlay_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 


#define IltmmPlay_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmPlay_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmPlay_get_UseDVDSource(This,pVal)	\
    ( (This)->lpVtbl -> get_UseDVDSource(This,pVal) ) 

#define IltmmPlay_put_UseDVDSource(This,newVal)	\
    ( (This)->lpVtbl -> put_UseDVDSource(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlay_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl1_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl1_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161012-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl1 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ OLE_COLOR clr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ OLE_COLOR *pclr) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_BorderStyle( 
            /* [in] */ ltmmBorderStyle style) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_BorderStyle( 
            /* [retval][out] */ ltmmBorderStyle *pstyle) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL vbool) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *pbool) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Window( 
            /* [retval][out] */ LONG_PTR *phwnd) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_Appearance( 
            /* [in] */ ltmmAppearance appearance) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Appearance( 
            /* [retval][out] */ ltmmAppearance *pappearance) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ ltmmMousePointer pointer) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ ltmmMousePointer *ppointer) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ IPictureDisp *pMouseIcon) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_MouseIcon( 
            /* [in] */ IPictureDisp *pMouseIcon) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ IPictureDisp **ppMouseIcon) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartCapture( 
            /* [in] */ long Mode) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StopCapture( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Preview( 
            /* [retval][out] */ VARIANT_BOOL *pPreview) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Preview( 
            /* [in] */ VARIANT_BOOL Preview) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_MasterStream( 
            /* [retval][out] */ long *pMasterStream) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_MasterStream( 
            /* [in] */ long MasterStream) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CloseCaptioning( 
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CloseCaptioning( 
            /* [in] */ VARIANT_BOOL CloseCaptioning) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseFrameRate( 
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseFrameRate( 
            /* [in] */ VARIANT_BOOL UseFrameRate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FrameRate( 
            /* [retval][out] */ double *pFrameRate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_FrameRate( 
            /* [in] */ double FrameRate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseTimeLimit( 
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseTimeLimit( 
            /* [in] */ VARIANT_BOOL UseTimeLimit) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TimeLimit( 
            /* [retval][out] */ double *pTimeLimit) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TimeLimit( 
            /* [in] */ double TimeLimit) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFile( 
            /* [retval][out] */ BSTR *pCaptureFile) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetFile( 
            /* [in] */ BSTR CaptureFile) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ long *pState) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CloseCaptionAvailable( 
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE HasDialog( 
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowDialog( 
            /* [in] */ long Dialog,
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioDevices( 
            /* [retval][out] */ IltmmDevices **ppAudioDevices) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoDevices( 
            /* [retval][out] */ IltmmDevices **ppVideoDevices) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoInputs( 
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CopyTarget( 
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE AllocTarget( 
            /* [in] */ long Size) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReadyCapture( 
            /* [in] */ long lMode) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CaptureDIB( 
            /* [retval][out] */ long *phDIB) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioCompressors( 
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCompressors( 
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ long *pMode) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_NumDropped( 
            /* [retval][out] */ long *pNumDropped) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_NumNotDropped( 
            /* [retval][out] */ long *pNumNotDropped) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AverageFrameSize( 
            /* [retval][out] */ long *pAverageFrameSize) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CaptureTime( 
            /* [retval][out] */ double *pCaptureTime) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMCertificate( 
            /* [retval][out] */ IUnknown **pWMCertificate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMCertificate( 
            /* [in] */ IUnknown *pWMCertificate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewSource( 
            /* [retval][out] */ long *pPreviewSource) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreviewSource( 
            /* [in] */ long PreviewSource) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CaptureFrame( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FrameDelay( 
            /* [retval][out] */ double *pFrameDelay) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_FrameDelay( 
            /* [in] */ double FrameDelay) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsModeAvailable( 
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CapturePicture( 
            /* [retval][out] */ IPictureDisp **ppPicture) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStillPicture( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStillDIB( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowSizeMode( 
            /* [retval][out] */ ltmmSizeMode *pSizeMode) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowSizeMode( 
            /* [in] */ ltmmSizeMode SizeMode) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FullScreenMode( 
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_FullScreenMode( 
            /* [in] */ VARIANT_BOOL FullScreenMode) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ToggleFullScreenMode( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowWidth( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHeight( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE TogglePreview( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ToggleCloseCaptioning( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWidth( 
            /* [retval][out] */ float *pWidth) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoHeight( 
            /* [retval][out] */ float *pHeight) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowLeft( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowTop( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedAudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedVideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetFormat( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetType( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetArray( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetArray( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetObject( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetObject( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetTarget( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleLeft( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleLeft( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleTop( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleTop( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleWidth( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleWidth( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleHeight( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleHeight( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleMode( 
            /* [retval][out] */ ltmmScaleMode *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleMode( 
            /* [in] */ ltmmScaleMode newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl1 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmCaptureCtrl1Vtbl;

    interface IltmmCaptureCtrl1
    {
        CONST_VTBL struct IltmmCaptureCtrl1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl1_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl1_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl1_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl1_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl1_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl1_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl1_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl1_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl1_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl1_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl1_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl1_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl1_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl1_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl1_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl1_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl1_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl1_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl1_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl1_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl1_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl1_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl1_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl1_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl1_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl1_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl1_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl1_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl1_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl1_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl1_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl1_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl1_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl1_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl1_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl1_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl1_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl1_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl1_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl1_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl1_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl1_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl1_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl1_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl1_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl1_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl1_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl1_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl1_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl1_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl1_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl1_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl1_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl1_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl1_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl1_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl1_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl1_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl1_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl1_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl1_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl1_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl1_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl1_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl1_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl1_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl1_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl1_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl1_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl1_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl1_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl1_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl1_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl1_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl1_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl1_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl1_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl1_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl1_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl1_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl1_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl1_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl1_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl1_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl1_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl1_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl1_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl1_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl1_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl1_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl1_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl1_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl1_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl1_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl1_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl1_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl1_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl1_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl1_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureCtrl1_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl2_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl2_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016102C-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl2 : public IltmmCaptureCtrl1
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PauseCapture( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE RunCapture( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioRenderers( 
            /* [retval][out] */ IltmmRenderers **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSubObject( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EditGraph( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl2 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl2 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl2 * This);
        
        END_INTERFACE
    } IltmmCaptureCtrl2Vtbl;

    interface IltmmCaptureCtrl2
    {
        CONST_VTBL struct IltmmCaptureCtrl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl2_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl2_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl2_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl2_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl2_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl2_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl2_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl2_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl2_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl2_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl2_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl2_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl2_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl2_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl2_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl2_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl2_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl2_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl2_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl2_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl2_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl2_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl2_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl2_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl2_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl2_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl2_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl2_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl2_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl2_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl2_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl2_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl2_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl2_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl2_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl2_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl2_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl2_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl2_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl2_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl2_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl2_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl2_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl2_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl2_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl2_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl2_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl2_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl2_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl2_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl2_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl2_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl2_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl2_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl2_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl2_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl2_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl2_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl2_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl2_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl2_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl2_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl2_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl2_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl2_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl2_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl2_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl2_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl2_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl2_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl2_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl2_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl2_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl2_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl2_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl2_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl2_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl2_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl2_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl2_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl2_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl2_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl2_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl2_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl2_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl2_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl2_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl2_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl2_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl2_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl2_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl2_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl2_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl2_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl2_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl2_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl2_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl2_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl2_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl2_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl2_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl2_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl2_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl2_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureCtrl2_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl3_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl3_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161036-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl3 : public IltmmCaptureCtrl2
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ShowDialogPreview( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ShowDialogPreview( 
            /* [in] */ VARIANT_BOOL Val) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioBufferSize( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AudioBufferSize( 
            /* [in] */ double Val) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewTap( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreviewTap( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCaptureSizes( 
            /* [retval][out] */ IltmmCaptureSizes **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetDevices( 
            /* [retval][out] */ IltmmTargetDevices **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CaptureVCRControl( 
            /* [retval][out] */ IltmmVCRControl **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetVCRControl( 
            /* [retval][out] */ IltmmVCRControl **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFormats( 
            /* [retval][out] */ IltmmTargetFormats **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ double Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCaptureCtrl3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCaptureCtrl3 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        END_INTERFACE
    } IltmmCaptureCtrl3Vtbl;

    interface IltmmCaptureCtrl3
    {
        CONST_VTBL struct IltmmCaptureCtrl3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl3_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl3_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl3_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl3_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl3_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl3_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl3_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl3_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl3_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl3_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl3_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl3_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl3_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl3_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl3_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl3_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl3_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl3_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl3_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl3_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl3_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl3_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl3_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl3_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl3_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl3_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl3_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl3_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl3_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl3_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl3_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl3_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl3_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl3_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl3_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl3_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl3_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl3_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl3_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl3_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl3_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl3_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl3_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl3_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl3_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl3_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl3_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl3_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl3_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl3_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl3_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl3_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl3_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl3_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl3_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl3_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl3_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl3_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl3_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl3_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl3_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl3_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl3_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl3_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl3_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl3_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl3_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl3_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl3_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl3_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl3_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl3_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl3_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl3_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl3_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl3_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl3_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl3_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl3_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl3_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl3_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl3_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl3_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl3_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl3_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl3_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl3_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl3_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl3_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl3_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl3_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl3_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl3_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl3_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl3_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl3_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl3_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl3_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl3_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl3_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl3_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl3_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl3_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl3_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCaptureCtrl3_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCaptureCtrl3_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCaptureCtrl3_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCaptureCtrl3_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCaptureCtrl3_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCaptureCtrl3_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCaptureCtrl3_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCaptureCtrl3_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCaptureCtrl3_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl3_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl3_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmCaptureCtrl3_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl4_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl4_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl4 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016104C-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl4 : public IltmmCaptureCtrl3
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHandle( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TVTuner( 
            /* [retval][out] */ IltmmTVTuner **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSubObjectDispatch( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMProfile( 
            /* [retval][out] */ IltmmWMProfile **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMProfile( 
            /* [in] */ IltmmWMProfile *Val) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDecoderResolution( 
            /* [retval][out] */ ltmmDVResolution *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_DVDecoderResolution( 
            /* [in] */ ltmmDVResolution Val) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetVideoWindowPos( 
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetStream( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetStream( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsPreviewTapSupported( 
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveStillDIB( 
            /* [in] */ BSTR filename,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Volume( 
            /* [retval][out] */ long *pVolume) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Volume( 
            /* [in] */ long Volume) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Balance( 
            /* [retval][out] */ long *pBalance) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Balance( 
            /* [in] */ long Balance) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mute( 
            /* [retval][out] */ VARIANT_BOOL *pMute) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Mute( 
            /* [in] */ VARIANT_BOOL Mute) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioInputs( 
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_UsingDVDecoder( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ double Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCaptureCtrl4 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCaptureCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmCaptureCtrl4Vtbl;

    interface IltmmCaptureCtrl4
    {
        CONST_VTBL struct IltmmCaptureCtrl4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl4_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl4_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl4_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl4_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl4_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl4_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl4_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl4_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl4_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl4_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl4_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl4_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl4_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl4_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl4_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl4_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl4_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl4_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl4_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl4_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl4_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl4_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl4_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl4_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl4_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl4_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl4_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl4_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl4_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl4_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl4_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl4_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl4_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl4_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl4_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl4_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl4_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl4_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl4_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl4_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl4_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl4_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl4_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl4_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl4_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl4_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl4_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl4_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl4_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl4_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl4_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl4_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl4_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl4_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl4_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl4_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl4_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl4_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl4_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl4_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl4_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl4_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl4_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl4_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl4_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl4_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl4_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl4_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl4_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl4_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl4_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl4_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl4_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl4_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl4_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl4_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl4_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl4_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl4_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl4_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl4_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl4_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl4_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl4_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl4_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl4_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl4_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl4_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl4_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl4_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl4_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl4_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl4_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl4_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl4_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl4_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl4_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl4_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl4_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl4_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl4_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl4_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl4_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl4_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCaptureCtrl4_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCaptureCtrl4_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCaptureCtrl4_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCaptureCtrl4_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCaptureCtrl4_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCaptureCtrl4_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCaptureCtrl4_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCaptureCtrl4_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCaptureCtrl4_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl4_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl4_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCaptureCtrl4_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCaptureCtrl4_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCaptureCtrl4_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl4_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCaptureCtrl4_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCaptureCtrl4_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCaptureCtrl4_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCaptureCtrl4_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCaptureCtrl4_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCaptureCtrl4_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCaptureCtrl4_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCaptureCtrl4_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCaptureCtrl4_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCaptureCtrl4_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCaptureCtrl4_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCaptureCtrl4_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCaptureCtrl4_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCaptureCtrl4_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCaptureCtrl4_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCaptureCtrl4_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_put_DVDecoderResolution_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [in] */ ltmmDVResolution Val);


void __RPC_STUB IltmmCaptureCtrl4_put_DVDecoderResolution_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_SetVideoWindowPos_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [in] */ float Left,
    /* [in] */ float Top,
    /* [in] */ float Width,
    /* [in] */ float Height);


void __RPC_STUB IltmmCaptureCtrl4_SetVideoWindowPos_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_get_TargetStream_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IltmmCaptureCtrl4_get_TargetStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_put_TargetStream_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [in] */ IUnknown *newVal);


void __RPC_STUB IltmmCaptureCtrl4_put_TargetStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_IsPreviewTapSupported_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [in] */ long Source,
    /* [in] */ long Tap,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCaptureCtrl4_IsPreviewTapSupported_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_SaveStillDIB_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [in] */ BSTR filename,
    /* [in] */ long timeout);


void __RPC_STUB IltmmCaptureCtrl4_SaveStillDIB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_get_Volume_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [retval][out] */ long *pVolume);


void __RPC_STUB IltmmCaptureCtrl4_get_Volume_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_put_Volume_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [in] */ long Volume);


void __RPC_STUB IltmmCaptureCtrl4_put_Volume_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_get_Balance_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [retval][out] */ long *pBalance);


void __RPC_STUB IltmmCaptureCtrl4_get_Balance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_put_Balance_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [in] */ long Balance);


void __RPC_STUB IltmmCaptureCtrl4_put_Balance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_get_Mute_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [retval][out] */ VARIANT_BOOL *pMute);


void __RPC_STUB IltmmCaptureCtrl4_get_Mute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_put_Mute_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [in] */ VARIANT_BOOL Mute);


void __RPC_STUB IltmmCaptureCtrl4_put_Mute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_get_AudioInputs_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);


void __RPC_STUB IltmmCaptureCtrl4_get_AudioInputs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl4_get_UsingDVDecoder_Proxy( 
    IltmmCaptureCtrl4 * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCaptureCtrl4_get_UsingDVDecoder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCaptureCtrl4_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl5_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl5_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl5 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161068-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl5 : public IltmmCaptureCtrl4
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CameraControl( 
            /* [retval][out] */ IltmmCameraControl **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_InterleaveMode( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_InterleaveMode( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveStillBitmap( 
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EnterEdit( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LeaveEdit( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCaptureSubTypes( 
            /* [retval][out] */ IltmmCaptureSubTypes **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToStream( 
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToFile( 
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromStream( 
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromFile( 
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CanSaveObjectSettings( 
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewingCloseCaption( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCaptureStreamType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ double Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCaptureCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCaptureCtrl5 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCaptureCtrl5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        END_INTERFACE
    } IltmmCaptureCtrl5Vtbl;

    interface IltmmCaptureCtrl5
    {
        CONST_VTBL struct IltmmCaptureCtrl5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl5_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl5_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl5_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl5_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl5_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl5_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl5_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl5_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl5_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl5_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl5_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl5_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl5_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl5_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl5_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl5_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl5_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl5_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl5_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl5_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl5_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl5_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl5_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl5_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl5_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl5_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl5_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl5_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl5_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl5_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl5_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl5_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl5_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl5_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl5_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl5_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl5_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl5_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl5_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl5_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl5_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl5_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl5_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl5_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl5_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl5_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl5_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl5_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl5_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl5_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl5_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl5_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl5_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl5_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl5_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl5_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl5_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl5_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl5_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl5_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl5_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl5_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl5_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl5_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl5_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl5_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl5_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl5_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl5_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl5_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl5_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl5_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl5_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl5_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl5_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl5_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl5_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl5_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl5_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl5_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl5_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl5_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl5_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl5_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl5_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl5_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl5_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl5_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl5_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl5_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl5_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl5_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl5_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl5_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl5_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl5_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl5_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl5_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl5_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl5_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl5_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl5_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl5_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl5_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCaptureCtrl5_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCaptureCtrl5_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCaptureCtrl5_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCaptureCtrl5_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCaptureCtrl5_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCaptureCtrl5_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCaptureCtrl5_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCaptureCtrl5_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCaptureCtrl5_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl5_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl5_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCaptureCtrl5_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCaptureCtrl5_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCaptureCtrl5_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl5_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCaptureCtrl5_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCaptureCtrl5_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCaptureCtrl5_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCaptureCtrl5_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCaptureCtrl5_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCaptureCtrl5_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCaptureCtrl5_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCaptureCtrl5_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCaptureCtrl5_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCaptureCtrl5_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCaptureCtrl5_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCaptureCtrl5_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCaptureCtrl5_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCaptureCtrl5_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCaptureCtrl5_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCaptureCtrl5_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCaptureCtrl5_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCaptureCtrl5_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCaptureCtrl5_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCaptureCtrl5_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCaptureCtrl5_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCaptureCtrl5_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCaptureCtrl5_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCaptureCtrl5_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCaptureCtrl5_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCaptureCtrl5_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCaptureCtrl5_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCaptureCtrl5_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCaptureCtrl5_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCaptureCtrl5_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_get_CameraControl_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [retval][out] */ IltmmCameraControl **pVal);


void __RPC_STUB IltmmCaptureCtrl5_get_CameraControl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_get_InterleaveMode_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IltmmCaptureCtrl5_get_InterleaveMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_put_InterleaveMode_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [in] */ long newVal);


void __RPC_STUB IltmmCaptureCtrl5_put_InterleaveMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_SaveStillBitmap_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [in] */ BSTR filename,
    /* [in] */ long format,
    /* [in] */ long quality,
    /* [in] */ long flags,
    /* [in] */ long timeout);


void __RPC_STUB IltmmCaptureCtrl5_SaveStillBitmap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_EnterEdit_Proxy( 
    IltmmCaptureCtrl5 * This);


void __RPC_STUB IltmmCaptureCtrl5_EnterEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_LeaveEdit_Proxy( 
    IltmmCaptureCtrl5 * This);


void __RPC_STUB IltmmCaptureCtrl5_LeaveEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_get_VideoCaptureSubTypes_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [retval][out] */ IltmmCaptureSubTypes **pVal);


void __RPC_STUB IltmmCaptureCtrl5_get_VideoCaptureSubTypes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_SaveSettingsToStream_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [in] */ IUnknown *targetstream,
    /* [in] */ long flags);


void __RPC_STUB IltmmCaptureCtrl5_SaveSettingsToStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_SaveSettingsToFile_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [in] */ BSTR targetfile,
    /* [in] */ long flags);


void __RPC_STUB IltmmCaptureCtrl5_SaveSettingsToFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_LoadSettingsFromStream_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [in] */ IUnknown *sourcestream,
    /* [in] */ long flags);


void __RPC_STUB IltmmCaptureCtrl5_LoadSettingsFromStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_LoadSettingsFromFile_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [in] */ BSTR sourcefile,
    /* [in] */ long flags);


void __RPC_STUB IltmmCaptureCtrl5_LoadSettingsFromFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_CanSaveObjectSettings_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [in] */ long flags,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCaptureCtrl5_CanSaveObjectSettings_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_get_PreviewingCloseCaption_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCaptureCtrl5_get_PreviewingCloseCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl5_get_VideoCaptureStreamType_Proxy( 
    IltmmCaptureCtrl5 * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IltmmCaptureCtrl5_get_VideoCaptureStreamType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCaptureCtrl5_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl6_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl6_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl6 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161077-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl6 : public IltmmCaptureCtrl5
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioCaptureFormats( 
            /* [retval][out] */ IltmmAudioFormats **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ double Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCaptureCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCaptureCtrl6 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCaptureCtrl6 * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        END_INTERFACE
    } IltmmCaptureCtrl6Vtbl;

    interface IltmmCaptureCtrl6
    {
        CONST_VTBL struct IltmmCaptureCtrl6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl6_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl6_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl6_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl6_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl6_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl6_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl6_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl6_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl6_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl6_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl6_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl6_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl6_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl6_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl6_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl6_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl6_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl6_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl6_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl6_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl6_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl6_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl6_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl6_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl6_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl6_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl6_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl6_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl6_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl6_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl6_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl6_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl6_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl6_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl6_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl6_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl6_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl6_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl6_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl6_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl6_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl6_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl6_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl6_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl6_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl6_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl6_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl6_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl6_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl6_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl6_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl6_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl6_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl6_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl6_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl6_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl6_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl6_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl6_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl6_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl6_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl6_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl6_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl6_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl6_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl6_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl6_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl6_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl6_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl6_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl6_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl6_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl6_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl6_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl6_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl6_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl6_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl6_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl6_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl6_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl6_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl6_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl6_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl6_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl6_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl6_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl6_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl6_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl6_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl6_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl6_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl6_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl6_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl6_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl6_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl6_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl6_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl6_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl6_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl6_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl6_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl6_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl6_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl6_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCaptureCtrl6_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCaptureCtrl6_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCaptureCtrl6_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCaptureCtrl6_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCaptureCtrl6_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCaptureCtrl6_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCaptureCtrl6_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCaptureCtrl6_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCaptureCtrl6_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl6_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl6_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCaptureCtrl6_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCaptureCtrl6_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCaptureCtrl6_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl6_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCaptureCtrl6_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCaptureCtrl6_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCaptureCtrl6_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCaptureCtrl6_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCaptureCtrl6_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCaptureCtrl6_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCaptureCtrl6_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCaptureCtrl6_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCaptureCtrl6_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCaptureCtrl6_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCaptureCtrl6_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCaptureCtrl6_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCaptureCtrl6_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCaptureCtrl6_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCaptureCtrl6_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCaptureCtrl6_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCaptureCtrl6_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCaptureCtrl6_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCaptureCtrl6_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCaptureCtrl6_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCaptureCtrl6_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCaptureCtrl6_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCaptureCtrl6_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCaptureCtrl6_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCaptureCtrl6_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCaptureCtrl6_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCaptureCtrl6_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCaptureCtrl6_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCaptureCtrl6_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCaptureCtrl6_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCaptureCtrl6_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl6_get_AudioCaptureFormats_Proxy( 
    IltmmCaptureCtrl6 * This,
    /* [retval][out] */ IltmmAudioFormats **pVal);


void __RPC_STUB IltmmCaptureCtrl6_get_AudioCaptureFormats_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCaptureCtrl6_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl7_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl7_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl7 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161084-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl7 : public IltmmCaptureCtrl6
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoProcAmp( 
            /* [retval][out] */ IltmmVideoProcAmp **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CaptureStillDelay( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CaptureStillDelay( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCaptureFormats( 
            /* [retval][out] */ IltmmVideoFormats **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseVideoDeviceAudio( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseVideoDeviceAudio( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AnalogVideoDecoder( 
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ double Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCaptureCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcAmp )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmVideoProcAmp **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureStillDelay )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CaptureStillDelay )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureFormats )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmVideoFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseVideoDeviceAudio )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseVideoDeviceAudio )( 
            IltmmCaptureCtrl7 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnalogVideoDecoder )( 
            IltmmCaptureCtrl7 * This,
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);
        
        END_INTERFACE
    } IltmmCaptureCtrl7Vtbl;

    interface IltmmCaptureCtrl7
    {
        CONST_VTBL struct IltmmCaptureCtrl7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl7_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl7_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl7_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl7_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl7_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl7_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl7_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl7_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl7_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl7_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl7_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl7_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl7_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl7_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl7_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl7_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl7_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl7_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl7_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl7_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl7_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl7_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl7_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl7_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl7_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl7_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl7_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl7_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl7_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl7_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl7_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl7_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl7_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl7_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl7_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl7_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl7_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl7_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl7_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl7_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl7_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl7_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl7_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl7_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl7_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl7_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl7_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl7_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl7_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl7_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl7_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl7_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl7_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl7_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl7_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl7_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl7_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl7_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl7_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl7_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl7_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl7_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl7_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl7_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl7_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl7_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl7_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl7_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl7_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl7_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl7_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl7_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl7_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl7_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl7_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl7_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl7_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl7_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl7_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl7_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl7_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl7_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl7_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl7_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl7_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl7_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl7_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl7_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl7_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl7_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl7_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl7_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl7_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl7_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl7_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl7_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl7_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl7_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl7_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl7_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl7_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl7_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl7_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl7_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCaptureCtrl7_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCaptureCtrl7_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCaptureCtrl7_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCaptureCtrl7_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCaptureCtrl7_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCaptureCtrl7_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCaptureCtrl7_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCaptureCtrl7_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCaptureCtrl7_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl7_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl7_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCaptureCtrl7_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCaptureCtrl7_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCaptureCtrl7_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl7_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCaptureCtrl7_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCaptureCtrl7_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCaptureCtrl7_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCaptureCtrl7_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCaptureCtrl7_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCaptureCtrl7_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCaptureCtrl7_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCaptureCtrl7_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCaptureCtrl7_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCaptureCtrl7_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCaptureCtrl7_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCaptureCtrl7_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCaptureCtrl7_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCaptureCtrl7_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCaptureCtrl7_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCaptureCtrl7_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCaptureCtrl7_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCaptureCtrl7_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCaptureCtrl7_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCaptureCtrl7_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCaptureCtrl7_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCaptureCtrl7_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCaptureCtrl7_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCaptureCtrl7_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCaptureCtrl7_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCaptureCtrl7_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCaptureCtrl7_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCaptureCtrl7_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCaptureCtrl7_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCaptureCtrl7_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCaptureCtrl7_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 


#define IltmmCaptureCtrl7_get_VideoProcAmp(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcAmp(This,pVal) ) 

#define IltmmCaptureCtrl7_get_CaptureStillDelay(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureStillDelay(This,pVal) ) 

#define IltmmCaptureCtrl7_put_CaptureStillDelay(This,newVal)	\
    ( (This)->lpVtbl -> put_CaptureStillDelay(This,newVal) ) 

#define IltmmCaptureCtrl7_get_VideoCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureFormats(This,pVal) ) 

#define IltmmCaptureCtrl7_get_UseVideoDeviceAudio(This,pVal)	\
    ( (This)->lpVtbl -> get_UseVideoDeviceAudio(This,pVal) ) 

#define IltmmCaptureCtrl7_put_UseVideoDeviceAudio(This,newVal)	\
    ( (This)->lpVtbl -> put_UseVideoDeviceAudio(This,newVal) ) 

#define IltmmCaptureCtrl7_get_AnalogVideoDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_AnalogVideoDecoder(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl7_get_VideoProcAmp_Proxy( 
    IltmmCaptureCtrl7 * This,
    /* [retval][out] */ IltmmVideoProcAmp **pVal);


void __RPC_STUB IltmmCaptureCtrl7_get_VideoProcAmp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl7_get_CaptureStillDelay_Proxy( 
    IltmmCaptureCtrl7 * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IltmmCaptureCtrl7_get_CaptureStillDelay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl7_put_CaptureStillDelay_Proxy( 
    IltmmCaptureCtrl7 * This,
    /* [in] */ long newVal);


void __RPC_STUB IltmmCaptureCtrl7_put_CaptureStillDelay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl7_get_VideoCaptureFormats_Proxy( 
    IltmmCaptureCtrl7 * This,
    /* [retval][out] */ IltmmVideoFormats **pVal);


void __RPC_STUB IltmmCaptureCtrl7_get_VideoCaptureFormats_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl7_get_UseVideoDeviceAudio_Proxy( 
    IltmmCaptureCtrl7 * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCaptureCtrl7_get_UseVideoDeviceAudio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl7_put_UseVideoDeviceAudio_Proxy( 
    IltmmCaptureCtrl7 * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IltmmCaptureCtrl7_put_UseVideoDeviceAudio_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl7_get_AnalogVideoDecoder_Proxy( 
    IltmmCaptureCtrl7 * This,
    /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);


void __RPC_STUB IltmmCaptureCtrl7_get_AnalogVideoDecoder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCaptureCtrl7_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl8_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl8_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl8 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl8;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016109A-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl8 : public IltmmCaptureCtrl7
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EstimateOutputSize( 
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EstimateOutputBitRate( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl8Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl8 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl8 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl8 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ double Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCaptureCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcAmp )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmVideoProcAmp **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureStillDelay )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CaptureStillDelay )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureFormats )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmVideoFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseVideoDeviceAudio )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseVideoDeviceAudio )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnalogVideoDecoder )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmCaptureCtrl8 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmCaptureCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmCaptureCtrl8Vtbl;

    interface IltmmCaptureCtrl8
    {
        CONST_VTBL struct IltmmCaptureCtrl8Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl8_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl8_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl8_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl8_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl8_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl8_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl8_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl8_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl8_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl8_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl8_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl8_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl8_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl8_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl8_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl8_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl8_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl8_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl8_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl8_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl8_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl8_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl8_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl8_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl8_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl8_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl8_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl8_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl8_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl8_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl8_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl8_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl8_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl8_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl8_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl8_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl8_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl8_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl8_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl8_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl8_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl8_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl8_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl8_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl8_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl8_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl8_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl8_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl8_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl8_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl8_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl8_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl8_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl8_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl8_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl8_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl8_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl8_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl8_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl8_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl8_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl8_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl8_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl8_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl8_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl8_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl8_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl8_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl8_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl8_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl8_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl8_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl8_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl8_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl8_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl8_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl8_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl8_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl8_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl8_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl8_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl8_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl8_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl8_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl8_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl8_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl8_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl8_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl8_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl8_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl8_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl8_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl8_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl8_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl8_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl8_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl8_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl8_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl8_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl8_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl8_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl8_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl8_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl8_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl8_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl8_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl8_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl8_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl8_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl8_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl8_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCaptureCtrl8_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCaptureCtrl8_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCaptureCtrl8_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCaptureCtrl8_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCaptureCtrl8_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCaptureCtrl8_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCaptureCtrl8_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCaptureCtrl8_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCaptureCtrl8_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl8_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl8_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCaptureCtrl8_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCaptureCtrl8_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCaptureCtrl8_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl8_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCaptureCtrl8_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCaptureCtrl8_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCaptureCtrl8_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCaptureCtrl8_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCaptureCtrl8_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCaptureCtrl8_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCaptureCtrl8_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCaptureCtrl8_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCaptureCtrl8_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCaptureCtrl8_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCaptureCtrl8_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCaptureCtrl8_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCaptureCtrl8_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCaptureCtrl8_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCaptureCtrl8_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCaptureCtrl8_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCaptureCtrl8_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCaptureCtrl8_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCaptureCtrl8_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCaptureCtrl8_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCaptureCtrl8_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCaptureCtrl8_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCaptureCtrl8_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCaptureCtrl8_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCaptureCtrl8_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCaptureCtrl8_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCaptureCtrl8_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCaptureCtrl8_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCaptureCtrl8_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCaptureCtrl8_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCaptureCtrl8_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 


#define IltmmCaptureCtrl8_get_VideoProcAmp(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcAmp(This,pVal) ) 

#define IltmmCaptureCtrl8_get_CaptureStillDelay(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureStillDelay(This,pVal) ) 

#define IltmmCaptureCtrl8_put_CaptureStillDelay(This,newVal)	\
    ( (This)->lpVtbl -> put_CaptureStillDelay(This,newVal) ) 

#define IltmmCaptureCtrl8_get_VideoCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureFormats(This,pVal) ) 

#define IltmmCaptureCtrl8_get_UseVideoDeviceAudio(This,pVal)	\
    ( (This)->lpVtbl -> get_UseVideoDeviceAudio(This,pVal) ) 

#define IltmmCaptureCtrl8_put_UseVideoDeviceAudio(This,newVal)	\
    ( (This)->lpVtbl -> put_UseVideoDeviceAudio(This,newVal) ) 

#define IltmmCaptureCtrl8_get_AnalogVideoDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_AnalogVideoDecoder(This,pVal) ) 


#define IltmmCaptureCtrl8_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmCaptureCtrl8_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl8_EstimateOutputSize_Proxy( 
    IltmmCaptureCtrl8 * This,
    /* [in] */ double Duration,
    /* [retval][out] */ double *pVal);


void __RPC_STUB IltmmCaptureCtrl8_EstimateOutputSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl8_EstimateOutputBitRate_Proxy( 
    IltmmCaptureCtrl8 * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IltmmCaptureCtrl8_EstimateOutputBitRate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCaptureCtrl8_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl9_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl9_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl9 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl9;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B8-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl9 : public IltmmCaptureCtrl8
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IndexMode( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IndexMode( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrl9Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl9 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl9 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl9 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ double Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCaptureCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcAmp )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmVideoProcAmp **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureStillDelay )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CaptureStillDelay )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureFormats )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmVideoFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseVideoDeviceAudio )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseVideoDeviceAudio )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnalogVideoDecoder )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IndexMode )( 
            IltmmCaptureCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IndexMode )( 
            IltmmCaptureCtrl9 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmCaptureCtrl9Vtbl;

    interface IltmmCaptureCtrl9
    {
        CONST_VTBL struct IltmmCaptureCtrl9Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl9_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl9_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl9_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl9_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl9_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl9_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl9_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl9_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl9_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl9_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl9_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl9_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl9_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl9_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl9_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl9_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl9_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl9_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl9_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl9_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl9_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl9_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl9_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl9_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl9_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl9_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl9_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl9_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl9_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl9_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl9_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl9_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl9_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl9_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl9_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl9_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl9_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl9_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl9_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl9_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl9_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl9_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl9_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl9_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl9_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl9_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl9_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl9_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl9_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl9_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl9_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl9_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl9_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl9_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl9_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl9_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl9_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl9_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl9_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl9_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl9_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl9_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl9_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl9_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl9_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl9_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl9_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl9_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl9_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl9_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl9_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl9_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl9_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl9_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl9_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl9_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl9_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl9_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl9_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl9_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl9_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl9_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl9_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl9_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl9_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl9_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl9_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl9_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl9_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl9_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl9_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl9_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl9_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl9_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl9_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl9_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl9_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl9_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl9_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl9_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl9_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl9_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl9_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl9_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl9_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl9_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl9_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl9_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl9_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl9_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl9_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCaptureCtrl9_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCaptureCtrl9_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCaptureCtrl9_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCaptureCtrl9_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCaptureCtrl9_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCaptureCtrl9_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCaptureCtrl9_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCaptureCtrl9_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCaptureCtrl9_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl9_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl9_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCaptureCtrl9_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCaptureCtrl9_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCaptureCtrl9_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl9_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCaptureCtrl9_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCaptureCtrl9_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCaptureCtrl9_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCaptureCtrl9_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCaptureCtrl9_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCaptureCtrl9_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCaptureCtrl9_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCaptureCtrl9_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCaptureCtrl9_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCaptureCtrl9_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCaptureCtrl9_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCaptureCtrl9_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCaptureCtrl9_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCaptureCtrl9_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCaptureCtrl9_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCaptureCtrl9_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCaptureCtrl9_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCaptureCtrl9_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCaptureCtrl9_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCaptureCtrl9_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCaptureCtrl9_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCaptureCtrl9_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCaptureCtrl9_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCaptureCtrl9_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCaptureCtrl9_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCaptureCtrl9_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCaptureCtrl9_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCaptureCtrl9_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCaptureCtrl9_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCaptureCtrl9_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCaptureCtrl9_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 


#define IltmmCaptureCtrl9_get_VideoProcAmp(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcAmp(This,pVal) ) 

#define IltmmCaptureCtrl9_get_CaptureStillDelay(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureStillDelay(This,pVal) ) 

#define IltmmCaptureCtrl9_put_CaptureStillDelay(This,newVal)	\
    ( (This)->lpVtbl -> put_CaptureStillDelay(This,newVal) ) 

#define IltmmCaptureCtrl9_get_VideoCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureFormats(This,pVal) ) 

#define IltmmCaptureCtrl9_get_UseVideoDeviceAudio(This,pVal)	\
    ( (This)->lpVtbl -> get_UseVideoDeviceAudio(This,pVal) ) 

#define IltmmCaptureCtrl9_put_UseVideoDeviceAudio(This,newVal)	\
    ( (This)->lpVtbl -> put_UseVideoDeviceAudio(This,newVal) ) 

#define IltmmCaptureCtrl9_get_AnalogVideoDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_AnalogVideoDecoder(This,pVal) ) 


#define IltmmCaptureCtrl9_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmCaptureCtrl9_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmCaptureCtrl9_get_IndexMode(This,pVal)	\
    ( (This)->lpVtbl -> get_IndexMode(This,pVal) ) 

#define IltmmCaptureCtrl9_put_IndexMode(This,newVal)	\
    ( (This)->lpVtbl -> put_IndexMode(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl9_get_IndexMode_Proxy( 
    IltmmCaptureCtrl9 * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmCaptureCtrl9_get_IndexMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl9_put_IndexMode_Proxy( 
    IltmmCaptureCtrl9 * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IltmmCaptureCtrl9_put_IndexMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCaptureCtrl9_INTERFACE_DEFINED__ */


#ifndef __IltmmCaptureCtrl_INTERFACE_DEFINED__
#define __IltmmCaptureCtrl_INTERFACE_DEFINED__

/* interface IltmmCaptureCtrl */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmCaptureCtrl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610BB-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmCaptureCtrl : public IltmmCaptureCtrl9
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewAudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewVideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmCaptureCtrlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmCaptureCtrl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmCaptureCtrl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmCaptureCtrl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmCaptureCtrl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmCaptureCtrl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmCaptureCtrl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmCaptureCtrl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmCaptureCtrl * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmCaptureCtrl * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmCaptureCtrl * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmCaptureCtrl * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmCaptureCtrl * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmCaptureCtrl * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartCapture )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long Mode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopCapture )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pPreview);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL Preview);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MasterStream )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pMasterStream);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MasterStream )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long MasterStream);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFrameRate )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFrameRate )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL UseFrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameRate )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ double *pFrameRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameRate )( 
            IltmmCaptureCtrl * This,
            /* [in] */ double FrameRate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseTimeLimit )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pUseTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseTimeLimit )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL UseTimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeLimit )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ double *pTimeLimit);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeLimit )( 
            IltmmCaptureCtrl * This,
            /* [in] */ double TimeLimit);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ BSTR *pCaptureFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmCaptureCtrl * This,
            /* [in] */ BSTR CaptureFile);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptionAvailable )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptionAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioDevices )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmDevices **ppAudioDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoDevices )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmDevices **ppVideoDevices);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoInputs )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmCaptureInputs **ppVideoInputs);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyTarget )( 
            IltmmCaptureCtrl * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL AllowEscAbort);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AllocTarget )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long Size);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReadyCapture )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long lMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureDIB )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumDropped )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pNumDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NumNotDropped )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pNumNotDropped);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AverageFrameSize )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pAverageFrameSize);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureTime )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ double *pCaptureTime);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IUnknown **pWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmCaptureCtrl * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewSource )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pPreviewSource);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewSource )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long PreviewSource);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CaptureFrame )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDelay )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ double *pFrameDelay);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FrameDelay )( 
            IltmmCaptureCtrl * This,
            /* [in] */ double FrameDelay);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsModeAvailable )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long Mode,
            /* [retval][out] */ VARIANT_BOOL *pAvailable);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CapturePicture )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmCaptureCtrl * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *TogglePreview )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmCaptureCtrl * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmCaptureCtrl * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmCaptureCtrl * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmCaptureCtrl * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmCaptureCtrl * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmCaptureCtrl * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PauseCapture )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunCapture )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDialogPreview )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDialogPreview )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBufferSize )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AudioBufferSize )( 
            IltmmCaptureCtrl * This,
            /* [in] */ double Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewTap )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewTap )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSizes )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmCaptureSizes **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureVCRControl )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TVTuner )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmTVTuner **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmCaptureCtrl * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmCaptureCtrl * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmCaptureCtrl * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmCaptureCtrl * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsPreviewTapSupported )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long Source,
            /* [in] */ long Tap,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmCaptureCtrl * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioInputs )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmAudioInputs **ppAudioInputs);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CameraControl )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmCameraControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmCaptureCtrl * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EnterEdit )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LeaveEdit )( 
            IltmmCaptureCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureSubTypes )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmCaptureSubTypes **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmCaptureCtrl * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmCaptureCtrl * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmCaptureCtrl * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmCaptureCtrl * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewingCloseCaption )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureStreamType )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCaptureFormats )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmAudioFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcAmp )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmVideoProcAmp **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CaptureStillDelay )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CaptureStillDelay )( 
            IltmmCaptureCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCaptureFormats )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmVideoFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseVideoDeviceAudio )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseVideoDeviceAudio )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AnalogVideoDecoder )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmAnalogVideoDecoder **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmCaptureCtrl * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IndexMode )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IndexMode )( 
            IltmmCaptureCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewAudioProcessors )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVideoProcessors )( 
            IltmmCaptureCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        END_INTERFACE
    } IltmmCaptureCtrlVtbl;

    interface IltmmCaptureCtrl
    {
        CONST_VTBL struct IltmmCaptureCtrlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmCaptureCtrl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmCaptureCtrl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmCaptureCtrl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmCaptureCtrl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmCaptureCtrl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmCaptureCtrl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmCaptureCtrl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmCaptureCtrl_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmCaptureCtrl_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmCaptureCtrl_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmCaptureCtrl_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmCaptureCtrl_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmCaptureCtrl_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmCaptureCtrl_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmCaptureCtrl_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmCaptureCtrl_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmCaptureCtrl_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmCaptureCtrl_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmCaptureCtrl_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmCaptureCtrl_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmCaptureCtrl_StartCapture(This,Mode)	\
    ( (This)->lpVtbl -> StartCapture(This,Mode) ) 

#define IltmmCaptureCtrl_StopCapture(This)	\
    ( (This)->lpVtbl -> StopCapture(This) ) 

#define IltmmCaptureCtrl_get_Preview(This,pPreview)	\
    ( (This)->lpVtbl -> get_Preview(This,pPreview) ) 

#define IltmmCaptureCtrl_put_Preview(This,Preview)	\
    ( (This)->lpVtbl -> put_Preview(This,Preview) ) 

#define IltmmCaptureCtrl_get_MasterStream(This,pMasterStream)	\
    ( (This)->lpVtbl -> get_MasterStream(This,pMasterStream) ) 

#define IltmmCaptureCtrl_put_MasterStream(This,MasterStream)	\
    ( (This)->lpVtbl -> put_MasterStream(This,MasterStream) ) 

#define IltmmCaptureCtrl_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmCaptureCtrl_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmCaptureCtrl_get_UseFrameRate(This,pUseFrameRate)	\
    ( (This)->lpVtbl -> get_UseFrameRate(This,pUseFrameRate) ) 

#define IltmmCaptureCtrl_put_UseFrameRate(This,UseFrameRate)	\
    ( (This)->lpVtbl -> put_UseFrameRate(This,UseFrameRate) ) 

#define IltmmCaptureCtrl_get_FrameRate(This,pFrameRate)	\
    ( (This)->lpVtbl -> get_FrameRate(This,pFrameRate) ) 

#define IltmmCaptureCtrl_put_FrameRate(This,FrameRate)	\
    ( (This)->lpVtbl -> put_FrameRate(This,FrameRate) ) 

#define IltmmCaptureCtrl_get_UseTimeLimit(This,pUseTimeLimit)	\
    ( (This)->lpVtbl -> get_UseTimeLimit(This,pUseTimeLimit) ) 

#define IltmmCaptureCtrl_put_UseTimeLimit(This,UseTimeLimit)	\
    ( (This)->lpVtbl -> put_UseTimeLimit(This,UseTimeLimit) ) 

#define IltmmCaptureCtrl_get_TimeLimit(This,pTimeLimit)	\
    ( (This)->lpVtbl -> get_TimeLimit(This,pTimeLimit) ) 

#define IltmmCaptureCtrl_put_TimeLimit(This,TimeLimit)	\
    ( (This)->lpVtbl -> put_TimeLimit(This,TimeLimit) ) 

#define IltmmCaptureCtrl_get_TargetFile(This,pCaptureFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pCaptureFile) ) 

#define IltmmCaptureCtrl_put_TargetFile(This,CaptureFile)	\
    ( (This)->lpVtbl -> put_TargetFile(This,CaptureFile) ) 

#define IltmmCaptureCtrl_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmCaptureCtrl_get_CloseCaptionAvailable(This,pCloseCaptionAvailable)	\
    ( (This)->lpVtbl -> get_CloseCaptionAvailable(This,pCloseCaptionAvailable) ) 

#define IltmmCaptureCtrl_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmCaptureCtrl_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmCaptureCtrl_get_AudioDevices(This,ppAudioDevices)	\
    ( (This)->lpVtbl -> get_AudioDevices(This,ppAudioDevices) ) 

#define IltmmCaptureCtrl_get_VideoDevices(This,ppVideoDevices)	\
    ( (This)->lpVtbl -> get_VideoDevices(This,ppVideoDevices) ) 

#define IltmmCaptureCtrl_get_VideoInputs(This,ppVideoInputs)	\
    ( (This)->lpVtbl -> get_VideoInputs(This,ppVideoInputs) ) 

#define IltmmCaptureCtrl_CopyTarget(This,FileName,AllowEscAbort)	\
    ( (This)->lpVtbl -> CopyTarget(This,FileName,AllowEscAbort) ) 

#define IltmmCaptureCtrl_AllocTarget(This,Size)	\
    ( (This)->lpVtbl -> AllocTarget(This,Size) ) 

#define IltmmCaptureCtrl_ReadyCapture(This,lMode)	\
    ( (This)->lpVtbl -> ReadyCapture(This,lMode) ) 

#define IltmmCaptureCtrl_CaptureDIB(This,phDIB)	\
    ( (This)->lpVtbl -> CaptureDIB(This,phDIB) ) 

#define IltmmCaptureCtrl_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmCaptureCtrl_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmCaptureCtrl_get_Mode(This,pMode)	\
    ( (This)->lpVtbl -> get_Mode(This,pMode) ) 

#define IltmmCaptureCtrl_get_NumDropped(This,pNumDropped)	\
    ( (This)->lpVtbl -> get_NumDropped(This,pNumDropped) ) 

#define IltmmCaptureCtrl_get_NumNotDropped(This,pNumNotDropped)	\
    ( (This)->lpVtbl -> get_NumNotDropped(This,pNumNotDropped) ) 

#define IltmmCaptureCtrl_get_AverageFrameSize(This,pAverageFrameSize)	\
    ( (This)->lpVtbl -> get_AverageFrameSize(This,pAverageFrameSize) ) 

#define IltmmCaptureCtrl_get_CaptureTime(This,pCaptureTime)	\
    ( (This)->lpVtbl -> get_CaptureTime(This,pCaptureTime) ) 

#define IltmmCaptureCtrl_get_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmCaptureCtrl_get_PreviewSource(This,pPreviewSource)	\
    ( (This)->lpVtbl -> get_PreviewSource(This,pPreviewSource) ) 

#define IltmmCaptureCtrl_put_PreviewSource(This,PreviewSource)	\
    ( (This)->lpVtbl -> put_PreviewSource(This,PreviewSource) ) 

#define IltmmCaptureCtrl_CaptureFrame(This)	\
    ( (This)->lpVtbl -> CaptureFrame(This) ) 

#define IltmmCaptureCtrl_get_FrameDelay(This,pFrameDelay)	\
    ( (This)->lpVtbl -> get_FrameDelay(This,pFrameDelay) ) 

#define IltmmCaptureCtrl_put_FrameDelay(This,FrameDelay)	\
    ( (This)->lpVtbl -> put_FrameDelay(This,FrameDelay) ) 

#define IltmmCaptureCtrl_IsModeAvailable(This,Mode,pAvailable)	\
    ( (This)->lpVtbl -> IsModeAvailable(This,Mode,pAvailable) ) 

#define IltmmCaptureCtrl_CapturePicture(This,ppPicture)	\
    ( (This)->lpVtbl -> CapturePicture(This,ppPicture) ) 

#define IltmmCaptureCtrl_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmCaptureCtrl_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmCaptureCtrl_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmCaptureCtrl_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmCaptureCtrl_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmCaptureCtrl_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmCaptureCtrl_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmCaptureCtrl_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmCaptureCtrl_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmCaptureCtrl_TogglePreview(This)	\
    ( (This)->lpVtbl -> TogglePreview(This) ) 

#define IltmmCaptureCtrl_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmCaptureCtrl_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmCaptureCtrl_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmCaptureCtrl_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmCaptureCtrl_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmCaptureCtrl_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmCaptureCtrl_get_TargetFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pVal) ) 

#define IltmmCaptureCtrl_put_TargetFormat(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,newVal) ) 

#define IltmmCaptureCtrl_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmCaptureCtrl_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmCaptureCtrl_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmCaptureCtrl_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmCaptureCtrl_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmCaptureCtrl_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmCaptureCtrl_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmCaptureCtrl_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmCaptureCtrl_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmCaptureCtrl_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmCaptureCtrl_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmCaptureCtrl_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmCaptureCtrl_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmCaptureCtrl_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmCaptureCtrl_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmCaptureCtrl_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmCaptureCtrl_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmCaptureCtrl_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmCaptureCtrl_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmCaptureCtrl_PauseCapture(This)	\
    ( (This)->lpVtbl -> PauseCapture(This) ) 

#define IltmmCaptureCtrl_RunCapture(This)	\
    ( (This)->lpVtbl -> RunCapture(This) ) 

#define IltmmCaptureCtrl_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmCaptureCtrl_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmCaptureCtrl_get_ShowDialogPreview(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowDialogPreview(This,pVal) ) 

#define IltmmCaptureCtrl_put_ShowDialogPreview(This,Val)	\
    ( (This)->lpVtbl -> put_ShowDialogPreview(This,Val) ) 

#define IltmmCaptureCtrl_get_AudioBufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBufferSize(This,pVal) ) 

#define IltmmCaptureCtrl_put_AudioBufferSize(This,Val)	\
    ( (This)->lpVtbl -> put_AudioBufferSize(This,Val) ) 

#define IltmmCaptureCtrl_get_PreviewTap(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewTap(This,pVal) ) 

#define IltmmCaptureCtrl_put_PreviewTap(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewTap(This,newVal) ) 

#define IltmmCaptureCtrl_get_VideoCaptureSizes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSizes(This,pVal) ) 

#define IltmmCaptureCtrl_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmCaptureCtrl_get_CaptureVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmCaptureCtrl_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 


#define IltmmCaptureCtrl_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmCaptureCtrl_get_TVTuner(This,pVal)	\
    ( (This)->lpVtbl -> get_TVTuner(This,pVal) ) 

#define IltmmCaptureCtrl_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmCaptureCtrl_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmCaptureCtrl_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmCaptureCtrl_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmCaptureCtrl_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmCaptureCtrl_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmCaptureCtrl_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmCaptureCtrl_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmCaptureCtrl_IsPreviewTapSupported(This,Source,Tap,pVal)	\
    ( (This)->lpVtbl -> IsPreviewTapSupported(This,Source,Tap,pVal) ) 

#define IltmmCaptureCtrl_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmCaptureCtrl_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmCaptureCtrl_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmCaptureCtrl_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmCaptureCtrl_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmCaptureCtrl_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmCaptureCtrl_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmCaptureCtrl_get_AudioInputs(This,ppAudioInputs)	\
    ( (This)->lpVtbl -> get_AudioInputs(This,ppAudioInputs) ) 

#define IltmmCaptureCtrl_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmCaptureCtrl_get_CameraControl(This,pVal)	\
    ( (This)->lpVtbl -> get_CameraControl(This,pVal) ) 

#define IltmmCaptureCtrl_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmCaptureCtrl_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmCaptureCtrl_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmCaptureCtrl_EnterEdit(This)	\
    ( (This)->lpVtbl -> EnterEdit(This) ) 

#define IltmmCaptureCtrl_LeaveEdit(This)	\
    ( (This)->lpVtbl -> LeaveEdit(This) ) 

#define IltmmCaptureCtrl_get_VideoCaptureSubTypes(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureSubTypes(This,pVal) ) 

#define IltmmCaptureCtrl_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmCaptureCtrl_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmCaptureCtrl_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmCaptureCtrl_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmCaptureCtrl_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#define IltmmCaptureCtrl_get_PreviewingCloseCaption(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewingCloseCaption(This,pVal) ) 

#define IltmmCaptureCtrl_get_VideoCaptureStreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureStreamType(This,pVal) ) 


#define IltmmCaptureCtrl_get_AudioCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioCaptureFormats(This,pVal) ) 


#define IltmmCaptureCtrl_get_VideoProcAmp(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcAmp(This,pVal) ) 

#define IltmmCaptureCtrl_get_CaptureStillDelay(This,pVal)	\
    ( (This)->lpVtbl -> get_CaptureStillDelay(This,pVal) ) 

#define IltmmCaptureCtrl_put_CaptureStillDelay(This,newVal)	\
    ( (This)->lpVtbl -> put_CaptureStillDelay(This,newVal) ) 

#define IltmmCaptureCtrl_get_VideoCaptureFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCaptureFormats(This,pVal) ) 

#define IltmmCaptureCtrl_get_UseVideoDeviceAudio(This,pVal)	\
    ( (This)->lpVtbl -> get_UseVideoDeviceAudio(This,pVal) ) 

#define IltmmCaptureCtrl_put_UseVideoDeviceAudio(This,newVal)	\
    ( (This)->lpVtbl -> put_UseVideoDeviceAudio(This,newVal) ) 

#define IltmmCaptureCtrl_get_AnalogVideoDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_AnalogVideoDecoder(This,pVal) ) 


#define IltmmCaptureCtrl_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmCaptureCtrl_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmCaptureCtrl_get_IndexMode(This,pVal)	\
    ( (This)->lpVtbl -> get_IndexMode(This,pVal) ) 

#define IltmmCaptureCtrl_put_IndexMode(This,newVal)	\
    ( (This)->lpVtbl -> put_IndexMode(This,newVal) ) 


#define IltmmCaptureCtrl_get_PreviewAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewAudioProcessors(This,pVal) ) 

#define IltmmCaptureCtrl_get_PreviewVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVideoProcessors(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl_get_PreviewAudioProcessors_Proxy( 
    IltmmCaptureCtrl * This,
    /* [retval][out] */ IltmmProcessors **pVal);


void __RPC_STUB IltmmCaptureCtrl_get_PreviewAudioProcessors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmCaptureCtrl_get_PreviewVideoProcessors_Proxy( 
    IltmmCaptureCtrl * This,
    /* [retval][out] */ IltmmProcessors **pVal);


void __RPC_STUB IltmmCaptureCtrl_get_PreviewVideoProcessors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmCaptureCtrl_INTERFACE_DEFINED__ */


#ifndef ___IltmmCaptureCtrlEvents_DISPINTERFACE_DEFINED__
#define ___IltmmCaptureCtrlEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IltmmCaptureCtrlEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID__IltmmCaptureCtrlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00161015-B1BA-11CE-ABC6-F5B2E79D9E3F")
    _IltmmCaptureCtrlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IltmmCaptureCtrlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IltmmCaptureCtrlEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IltmmCaptureCtrlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IltmmCaptureCtrlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IltmmCaptureCtrlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IltmmCaptureCtrlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IltmmCaptureCtrlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IltmmCaptureCtrlEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _IltmmCaptureCtrlEventsVtbl;

    interface _IltmmCaptureCtrlEvents
    {
        CONST_VTBL struct _IltmmCaptureCtrlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IltmmCaptureCtrlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IltmmCaptureCtrlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IltmmCaptureCtrlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IltmmCaptureCtrlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IltmmCaptureCtrlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IltmmCaptureCtrlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IltmmCaptureCtrlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IltmmCaptureCtrlEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl1_INTERFACE_DEFINED__
#define __IltmmConvertCtrl1_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161013-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFile( 
            /* [retval][out] */ BSTR *pFile) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceFile( 
            /* [in] */ BSTR File) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFile( 
            /* [retval][out] */ BSTR *pFile) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetFile( 
            /* [in] */ BSTR File) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioCompressors( 
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCompressors( 
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE HasDialog( 
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowDialog( 
            /* [in] */ long Dialog,
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StartConvert( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMCertificate( 
            /* [retval][out] */ IUnknown **ppWMCertificate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMCertificate( 
            /* [in] */ IUnknown *pWMCertificate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFormat( 
            /* [retval][out] */ long *pTargetFormat) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetFormat( 
            /* [in] */ long TargetFormat) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE StopConvert( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ long *pState) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PercentComplete( 
            /* [retval][out] */ long *pPrecentComplete) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceHGlobal( 
            /* [retval][out] */ long *pSourceHGlobal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceHGlobal( 
            /* [in] */ long SourceHGlobal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedAudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedVideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceArray( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceArray( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetType( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetArray( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetArray( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceObject( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceObject( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetObject( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetObject( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetSource( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetTarget( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConvertError( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl1 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmConvertCtrl1Vtbl;

    interface IltmmConvertCtrl1
    {
        CONST_VTBL struct IltmmConvertCtrl1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl1_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl1_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl1_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl1_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl1_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl1_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl1_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl1_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl1_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl1_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl1_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl1_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl1_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl1_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl1_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl1_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl1_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl1_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl1_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl1_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl1_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl1_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl1_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl1_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl1_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl1_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl1_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl1_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl1_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl1_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl1_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl1_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl1_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl1_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl1_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl1_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl1_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl2_INTERFACE_DEFINED__
#define __IltmmConvertCtrl2_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161034-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl2 : public IltmmConvertCtrl1
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSubObject( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EditGraph( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl2 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl2 * This);
        
        END_INTERFACE
    } IltmmConvertCtrl2Vtbl;

    interface IltmmConvertCtrl2
    {
        CONST_VTBL struct IltmmConvertCtrl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl2_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl2_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl2_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl2_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl2_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl2_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl2_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl2_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl2_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl2_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl2_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl2_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl2_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl2_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl2_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl2_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl2_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl2_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl2_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl2_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl2_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl2_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl2_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl2_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl2_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl2_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl2_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl2_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl2_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl2_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl2_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl2_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl2_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl2_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl2_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl2_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl2_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl2_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl2_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl3_INTERFACE_DEFINED__
#define __IltmmConvertCtrl3_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161040-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl3 : public IltmmConvertCtrl2
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetDevices( 
            /* [retval][out] */ IltmmTargetDevices **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetVCRControl( 
            /* [retval][out] */ IltmmVCRControl **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetFormats( 
            /* [retval][out] */ IltmmTargetFormats **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
            /* [retval][out] */ double *pDuration) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionStart( 
            /* [retval][out] */ double *pStart) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectionStart( 
            /* [in] */ double Start) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionEnd( 
            /* [retval][out] */ double *pEnd) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectionEnd( 
            /* [in] */ double End) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_RenderedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_UnrenderedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl3 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmConvertCtrl3Vtbl;

    interface IltmmConvertCtrl3
    {
        CONST_VTBL struct IltmmConvertCtrl3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl3_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl3_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl3_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl3_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl3_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl3_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl3_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl3_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl3_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl3_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl3_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl3_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl3_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl3_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl3_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl3_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl3_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl3_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl3_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl3_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl3_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl3_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl3_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl3_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl3_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl3_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl3_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl3_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl3_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl3_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl3_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl3_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl3_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl3_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl3_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl3_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl3_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl3_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl3_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl3_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl3_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl3_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl3_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl3_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl3_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl3_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl3_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl3_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl3_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl4_INTERFACE_DEFINED__
#define __IltmmConvertCtrl4_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl4 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016104E-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl4 : public IltmmConvertCtrl3
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceVideoType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceAudioType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceVideoFOURCC( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceAudioFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AllowedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AllowedStreams( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSubObjectDispatch( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMProfile( 
            /* [retval][out] */ IltmmWMProfile **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMProfile( 
            /* [in] */ IltmmWMProfile *Val) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDecoderResolution( 
            /* [retval][out] */ ltmmDVResolution *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_DVDecoderResolution( 
            /* [in] */ ltmmDVResolution Val) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceStream( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceStream( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TargetStream( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_TargetStream( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_UsingDVDecoder( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmConvertCtrl4Vtbl;

    interface IltmmConvertCtrl4
    {
        CONST_VTBL struct IltmmConvertCtrl4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl4_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl4_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl4_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl4_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl4_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl4_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl4_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl4_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl4_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl4_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl4_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl4_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl4_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl4_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl4_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl4_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl4_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl4_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl4_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl4_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl4_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl4_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl4_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl4_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl4_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl4_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl4_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl4_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl4_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl4_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl4_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl4_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl4_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl4_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl4_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl4_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl4_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl4_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl4_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl4_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl4_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl4_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl4_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl4_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl4_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl4_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl4_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl4_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl4_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl4_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl4_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl4_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl4_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl4_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl4_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl4_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl4_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl4_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl4_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl4_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl4_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl4_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl4_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl4_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl4_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl5_INTERFACE_DEFINED__
#define __IltmmConvertCtrl5_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl5 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016106C-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl5 : public IltmmConvertCtrl4
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_InterleaveMode( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_InterleaveMode( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToStream( 
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToFile( 
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromStream( 
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromFile( 
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CanSaveObjectSettings( 
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl5 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmConvertCtrl5Vtbl;

    interface IltmmConvertCtrl5
    {
        CONST_VTBL struct IltmmConvertCtrl5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl5_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl5_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl5_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl5_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl5_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl5_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl5_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl5_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl5_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl5_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl5_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl5_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl5_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl5_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl5_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl5_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl5_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl5_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl5_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl5_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl5_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl5_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl5_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl5_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl5_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl5_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl5_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl5_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl5_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl5_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl5_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl5_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl5_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl5_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl5_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl5_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl5_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl5_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl5_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl5_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl5_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl5_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl5_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl5_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl5_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl5_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl5_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl5_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl5_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl5_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl5_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl5_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl5_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl5_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl5_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl5_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl5_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl5_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl5_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl5_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl5_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl5_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl5_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl5_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl5_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl5_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl5_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl5_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl5_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl5_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl5_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl5_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl6_INTERFACE_DEFINED__
#define __IltmmConvertCtrl6_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl6 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161086-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl6 : public IltmmConvertCtrl5
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDControl( 
            /* [retval][out] */ IltmmDVDControl **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PercentCompleteScalar( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_PercentCompleteScalar( 
            /* [in] */ long newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvertCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvertCtrl6 * This,
            /* [in] */ long newVal);
        
        END_INTERFACE
    } IltmmConvertCtrl6Vtbl;

    interface IltmmConvertCtrl6
    {
        CONST_VTBL struct IltmmConvertCtrl6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl6_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl6_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl6_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl6_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl6_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl6_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl6_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl6_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl6_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl6_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl6_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl6_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl6_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl6_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl6_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl6_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl6_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl6_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl6_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl6_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl6_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl6_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl6_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl6_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl6_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl6_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl6_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl6_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl6_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl6_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl6_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl6_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl6_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl6_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl6_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl6_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl6_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl6_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl6_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl6_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl6_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl6_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl6_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl6_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl6_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl6_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl6_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl6_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl6_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl6_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl6_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl6_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl6_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl6_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl6_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl6_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl6_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl6_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl6_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl6_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl6_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl6_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl6_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl6_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl6_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl6_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl6_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl6_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl6_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl6_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl6_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvertCtrl6_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvertCtrl6_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvertCtrl6_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl6_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl7_INTERFACE_DEFINED__
#define __IltmmConvertCtrl7_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl7 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161090-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl7 : public IltmmConvertCtrl6
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreferredMPEG2Splitter( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreferredMPEG2Splitter( 
            /* [in] */ BSTR newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl7 * This,
            /* [in] */ BSTR newVal);
        
        END_INTERFACE
    } IltmmConvertCtrl7Vtbl;

    interface IltmmConvertCtrl7
    {
        CONST_VTBL struct IltmmConvertCtrl7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl7_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl7_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl7_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl7_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl7_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl7_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl7_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl7_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl7_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl7_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl7_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl7_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl7_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl7_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl7_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl7_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl7_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl7_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl7_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl7_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl7_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl7_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl7_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl7_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl7_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl7_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl7_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl7_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl7_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl7_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl7_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl7_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl7_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl7_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl7_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl7_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl7_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl7_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl7_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl7_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl7_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl7_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl7_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl7_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl7_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl7_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl7_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl7_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl7_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl7_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl7_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl7_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl7_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl7_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl7_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl7_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl7_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl7_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl7_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl7_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl7_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl7_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl7_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl7_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl7_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl7_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl7_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl7_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl7_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl7_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl7_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvertCtrl7_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvertCtrl7_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvertCtrl7_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvertCtrl7_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvertCtrl7_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl7_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl8_INTERFACE_DEFINED__
#define __IltmmConvertCtrl8_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl8 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl8;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161098-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl8 : public IltmmConvertCtrl7
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EstimateOutputSize( 
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EstimateOutputBitRate( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl8Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl8 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl8 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl8 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl8 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl8 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvertCtrl8 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvertCtrl8 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmConvertCtrl8Vtbl;

    interface IltmmConvertCtrl8
    {
        CONST_VTBL struct IltmmConvertCtrl8Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl8_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl8_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl8_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl8_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl8_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl8_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl8_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl8_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl8_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl8_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl8_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl8_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl8_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl8_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl8_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl8_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl8_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl8_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl8_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl8_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl8_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl8_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl8_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl8_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl8_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl8_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl8_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl8_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl8_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl8_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl8_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl8_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl8_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl8_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl8_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl8_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl8_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl8_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl8_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl8_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl8_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl8_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl8_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl8_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl8_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl8_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl8_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl8_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl8_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl8_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl8_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl8_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl8_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl8_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl8_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl8_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl8_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl8_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl8_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl8_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl8_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl8_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl8_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl8_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl8_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl8_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl8_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl8_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl8_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl8_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl8_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl8_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl8_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl8_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl8_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl8_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl8_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl8_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvertCtrl8_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvertCtrl8_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvertCtrl8_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvertCtrl8_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvertCtrl8_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvertCtrl8_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvertCtrl8_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl8_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl9_INTERFACE_DEFINED__
#define __IltmmConvertCtrl9_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl9 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl9;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016109E-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl9 : public IltmmConvertCtrl8
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PauseConvert( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RunConvert( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl9Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl9 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl9 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl9 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl9 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl9 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvertCtrl9 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvertCtrl9 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvertCtrl9 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvertCtrl9 * This);
        
        END_INTERFACE
    } IltmmConvertCtrl9Vtbl;

    interface IltmmConvertCtrl9
    {
        CONST_VTBL struct IltmmConvertCtrl9Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl9_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl9_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl9_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl9_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl9_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl9_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl9_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl9_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl9_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl9_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl9_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl9_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl9_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl9_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl9_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl9_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl9_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl9_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl9_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl9_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl9_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl9_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl9_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl9_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl9_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl9_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl9_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl9_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl9_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl9_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl9_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl9_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl9_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl9_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl9_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl9_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl9_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl9_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl9_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl9_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl9_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl9_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl9_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl9_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl9_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl9_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl9_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl9_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl9_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl9_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl9_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl9_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl9_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl9_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl9_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl9_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl9_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl9_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl9_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl9_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl9_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl9_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl9_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl9_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl9_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl9_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl9_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl9_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl9_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl9_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl9_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl9_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl9_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl9_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl9_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl9_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl9_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl9_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvertCtrl9_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvertCtrl9_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvertCtrl9_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvertCtrl9_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvertCtrl9_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvertCtrl9_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvertCtrl9_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvertCtrl9_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvertCtrl9_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl9_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl10_INTERFACE_DEFINED__
#define __IltmmConvertCtrl10_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl10 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl10;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610A0-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl10 : public IltmmConvertCtrl9
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowFrame( 
            /* [retval][out] */ long *phWnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowFrame( 
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowSizeMode( 
            /* [retval][out] */ ltmmSizeMode *pSizeMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowSizeMode( 
            /* [in] */ ltmmSizeMode SizeMode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FullScreenMode( 
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FullScreenMode( 
            /* [in] */ VARIANT_BOOL FullScreenMode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ToggleFullScreenMode( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowWidth( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHeight( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWidth( 
            /* [retval][out] */ long *pWidth) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoHeight( 
            /* [retval][out] */ long *pHeight) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowLeft( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowTop( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetVideoWindowPos( 
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHandle( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EnableStillCapture( 
            /* [retval][out] */ VARIANT_BOOL *phWnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EnableStillCapture( 
            /* [in] */ VARIANT_BOOL hWnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StillCaptureLimit( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_StillCaptureLimit( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveStillBitmap( 
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Preview( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Preview( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreviewVisible( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreviewVisible( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl10Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl10 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl10 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl10 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl10 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl10 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl10 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl10 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl10 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvertCtrl10 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvertCtrl10 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmConvertCtrl10 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableStillCapture )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ VARIANT_BOOL *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableStillCapture )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ VARIANT_BOOL hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillCaptureLimit )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillCaptureLimit )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVisible )( 
            IltmmConvertCtrl10 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewVisible )( 
            IltmmConvertCtrl10 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmConvertCtrl10Vtbl;

    interface IltmmConvertCtrl10
    {
        CONST_VTBL struct IltmmConvertCtrl10Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl10_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl10_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl10_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl10_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl10_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl10_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl10_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl10_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl10_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl10_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl10_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl10_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl10_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl10_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl10_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl10_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl10_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl10_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl10_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl10_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl10_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl10_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl10_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl10_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl10_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl10_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl10_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl10_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl10_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl10_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl10_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl10_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl10_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl10_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl10_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl10_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl10_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl10_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl10_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl10_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl10_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl10_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl10_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl10_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl10_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl10_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl10_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl10_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl10_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl10_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl10_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl10_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl10_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl10_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl10_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl10_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl10_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl10_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl10_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl10_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl10_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl10_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl10_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl10_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl10_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl10_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl10_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl10_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl10_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl10_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl10_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl10_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl10_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl10_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl10_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl10_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl10_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl10_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvertCtrl10_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvertCtrl10_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvertCtrl10_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvertCtrl10_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvertCtrl10_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvertCtrl10_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvertCtrl10_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvertCtrl10_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvertCtrl10_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 


#define IltmmConvertCtrl10_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmConvertCtrl10_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmConvertCtrl10_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmConvertCtrl10_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmConvertCtrl10_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmConvertCtrl10_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmConvertCtrl10_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmConvertCtrl10_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmConvertCtrl10_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmConvertCtrl10_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmConvertCtrl10_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmConvertCtrl10_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmConvertCtrl10_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmConvertCtrl10_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmConvertCtrl10_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmConvertCtrl10_get_EnableStillCapture(This,phWnd)	\
    ( (This)->lpVtbl -> get_EnableStillCapture(This,phWnd) ) 

#define IltmmConvertCtrl10_put_EnableStillCapture(This,hWnd)	\
    ( (This)->lpVtbl -> put_EnableStillCapture(This,hWnd) ) 

#define IltmmConvertCtrl10_get_StillCaptureLimit(This,pVal)	\
    ( (This)->lpVtbl -> get_StillCaptureLimit(This,pVal) ) 

#define IltmmConvertCtrl10_put_StillCaptureLimit(This,newVal)	\
    ( (This)->lpVtbl -> put_StillCaptureLimit(This,newVal) ) 

#define IltmmConvertCtrl10_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmConvertCtrl10_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmConvertCtrl10_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmConvertCtrl10_get_PreviewVisible(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVisible(This,pVal) ) 

#define IltmmConvertCtrl10_put_PreviewVisible(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewVisible(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl10_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl11_INTERFACE_DEFINED__
#define __IltmmConvertCtrl11_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl11 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl11;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610A4-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl11 : public IltmmConvertCtrl10
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenLogFile( 
            /* [in] */ BSTR filename,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseLogFile( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl11Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl11 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl11 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl11 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl11 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl11 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl11 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl11 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl11 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvertCtrl11 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvertCtrl11 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmConvertCtrl11 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableStillCapture )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ VARIANT_BOOL *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableStillCapture )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ VARIANT_BOOL hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillCaptureLimit )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillCaptureLimit )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVisible )( 
            IltmmConvertCtrl11 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewVisible )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenLogFile )( 
            IltmmConvertCtrl11 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CloseLogFile )( 
            IltmmConvertCtrl11 * This);
        
        END_INTERFACE
    } IltmmConvertCtrl11Vtbl;

    interface IltmmConvertCtrl11
    {
        CONST_VTBL struct IltmmConvertCtrl11Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl11_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl11_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl11_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl11_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl11_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl11_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl11_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl11_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl11_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl11_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl11_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl11_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl11_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl11_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl11_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl11_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl11_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl11_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl11_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl11_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl11_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl11_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl11_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl11_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl11_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl11_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl11_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl11_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl11_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl11_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl11_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl11_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl11_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl11_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl11_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl11_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl11_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl11_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl11_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl11_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl11_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl11_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl11_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl11_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl11_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl11_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl11_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl11_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl11_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl11_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl11_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl11_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl11_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl11_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl11_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl11_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl11_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl11_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl11_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl11_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl11_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl11_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl11_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl11_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl11_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl11_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl11_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl11_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl11_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl11_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl11_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl11_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl11_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl11_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl11_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl11_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl11_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl11_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvertCtrl11_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvertCtrl11_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvertCtrl11_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvertCtrl11_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvertCtrl11_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvertCtrl11_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvertCtrl11_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvertCtrl11_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvertCtrl11_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 


#define IltmmConvertCtrl11_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmConvertCtrl11_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmConvertCtrl11_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmConvertCtrl11_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmConvertCtrl11_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmConvertCtrl11_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmConvertCtrl11_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmConvertCtrl11_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmConvertCtrl11_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmConvertCtrl11_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmConvertCtrl11_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmConvertCtrl11_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmConvertCtrl11_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmConvertCtrl11_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmConvertCtrl11_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmConvertCtrl11_get_EnableStillCapture(This,phWnd)	\
    ( (This)->lpVtbl -> get_EnableStillCapture(This,phWnd) ) 

#define IltmmConvertCtrl11_put_EnableStillCapture(This,hWnd)	\
    ( (This)->lpVtbl -> put_EnableStillCapture(This,hWnd) ) 

#define IltmmConvertCtrl11_get_StillCaptureLimit(This,pVal)	\
    ( (This)->lpVtbl -> get_StillCaptureLimit(This,pVal) ) 

#define IltmmConvertCtrl11_put_StillCaptureLimit(This,newVal)	\
    ( (This)->lpVtbl -> put_StillCaptureLimit(This,newVal) ) 

#define IltmmConvertCtrl11_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmConvertCtrl11_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmConvertCtrl11_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmConvertCtrl11_get_PreviewVisible(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVisible(This,pVal) ) 

#define IltmmConvertCtrl11_put_PreviewVisible(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewVisible(This,newVal) ) 


#define IltmmConvertCtrl11_OpenLogFile(This,filename,flags)	\
    ( (This)->lpVtbl -> OpenLogFile(This,filename,flags) ) 

#define IltmmConvertCtrl11_CloseLogFile(This)	\
    ( (This)->lpVtbl -> CloseLogFile(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl11_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl12_INTERFACE_DEFINED__
#define __IltmmConvertCtrl12_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl12 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl12;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B0-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl12 : public IltmmConvertCtrl11
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseDVDSource( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseDVDSource( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrl12Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl12 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl12 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl12 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableStillCapture )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ VARIANT_BOOL *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableStillCapture )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ VARIANT_BOOL hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillCaptureLimit )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillCaptureLimit )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVisible )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewVisible )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenLogFile )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CloseLogFile )( 
            IltmmConvertCtrl12 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseDVDSource )( 
            IltmmConvertCtrl12 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseDVDSource )( 
            IltmmConvertCtrl12 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmConvertCtrl12Vtbl;

    interface IltmmConvertCtrl12
    {
        CONST_VTBL struct IltmmConvertCtrl12Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl12_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl12_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl12_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl12_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl12_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl12_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl12_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl12_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl12_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl12_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl12_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl12_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl12_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl12_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl12_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl12_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl12_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl12_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl12_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl12_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl12_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl12_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl12_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl12_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl12_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl12_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl12_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl12_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl12_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl12_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl12_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl12_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl12_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl12_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl12_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl12_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl12_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl12_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl12_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl12_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl12_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl12_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl12_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl12_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl12_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl12_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl12_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl12_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl12_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl12_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl12_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl12_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl12_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl12_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl12_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl12_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl12_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl12_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl12_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl12_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl12_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl12_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl12_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl12_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl12_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl12_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl12_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl12_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl12_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl12_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl12_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl12_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl12_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl12_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl12_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl12_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl12_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl12_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvertCtrl12_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvertCtrl12_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvertCtrl12_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvertCtrl12_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvertCtrl12_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvertCtrl12_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvertCtrl12_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvertCtrl12_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvertCtrl12_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 


#define IltmmConvertCtrl12_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmConvertCtrl12_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmConvertCtrl12_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmConvertCtrl12_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmConvertCtrl12_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmConvertCtrl12_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmConvertCtrl12_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmConvertCtrl12_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmConvertCtrl12_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmConvertCtrl12_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmConvertCtrl12_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmConvertCtrl12_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmConvertCtrl12_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmConvertCtrl12_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmConvertCtrl12_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmConvertCtrl12_get_EnableStillCapture(This,phWnd)	\
    ( (This)->lpVtbl -> get_EnableStillCapture(This,phWnd) ) 

#define IltmmConvertCtrl12_put_EnableStillCapture(This,hWnd)	\
    ( (This)->lpVtbl -> put_EnableStillCapture(This,hWnd) ) 

#define IltmmConvertCtrl12_get_StillCaptureLimit(This,pVal)	\
    ( (This)->lpVtbl -> get_StillCaptureLimit(This,pVal) ) 

#define IltmmConvertCtrl12_put_StillCaptureLimit(This,newVal)	\
    ( (This)->lpVtbl -> put_StillCaptureLimit(This,newVal) ) 

#define IltmmConvertCtrl12_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmConvertCtrl12_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmConvertCtrl12_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmConvertCtrl12_get_PreviewVisible(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVisible(This,pVal) ) 

#define IltmmConvertCtrl12_put_PreviewVisible(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewVisible(This,newVal) ) 


#define IltmmConvertCtrl12_OpenLogFile(This,filename,flags)	\
    ( (This)->lpVtbl -> OpenLogFile(This,filename,flags) ) 

#define IltmmConvertCtrl12_CloseLogFile(This)	\
    ( (This)->lpVtbl -> CloseLogFile(This) ) 


#define IltmmConvertCtrl12_get_UseDVDSource(This,pVal)	\
    ( (This)->lpVtbl -> get_UseDVDSource(This,pVal) ) 

#define IltmmConvertCtrl12_put_UseDVDSource(This,newVal)	\
    ( (This)->lpVtbl -> put_UseDVDSource(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl12_INTERFACE_DEFINED__ */


#ifndef __IltmmConvertCtrl_INTERFACE_DEFINED__
#define __IltmmConvertCtrl_INTERFACE_DEFINED__

/* interface IltmmConvertCtrl */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmConvertCtrl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B6-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmConvertCtrl : public IltmmConvertCtrl12
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IndexMode( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IndexMode( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmConvertCtrlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmConvertCtrl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmConvertCtrl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmConvertCtrl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmConvertCtrl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmConvertCtrl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmConvertCtrl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmConvertCtrl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmConvertCtrl * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFile )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ BSTR *pFile);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFile )( 
            IltmmConvertCtrl * This,
            /* [in] */ BSTR File);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioCompressors )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmCompressors **ppAudioCompressors);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompressors )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmCompressors **ppVideoCompressors);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmConvertCtrl * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmConvertCtrl * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StartConvert )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmConvertCtrl * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormat )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pTargetFormat);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetFormat )( 
            IltmmConvertCtrl * This,
            /* [in] */ long TargetFormat);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *StopConvert )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentComplete )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pPrecentComplete);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pSourceHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmConvertCtrl * This,
            /* [in] */ long SourceHGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmConvertCtrl * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            IltmmConvertCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetArray )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetArray )( 
            IltmmConvertCtrl * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmConvertCtrl * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetObject )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetObject )( 
            IltmmConvertCtrl * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTarget )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConvertError )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmConvertCtrl * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetDevices )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmTargetDevices **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetVCRControl )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmVCRControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetFormats )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmTargetFormats **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmConvertCtrl * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmConvertCtrl * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmConvertCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmConvertCtrl * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMProfile )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmWMProfile **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMProfile )( 
            IltmmConvertCtrl * This,
            /* [in] */ IltmmWMProfile *Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmConvertCtrl * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmConvertCtrl * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetStream )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetStream )( 
            IltmmConvertCtrl * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterleaveMode )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InterleaveMode )( 
            IltmmConvertCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmConvertCtrl * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmConvertCtrl * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmConvertCtrl * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmConvertCtrl * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmConvertCtrl * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PercentCompleteScalar )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PercentCompleteScalar )( 
            IltmmConvertCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmConvertCtrl * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputSize )( 
            IltmmConvertCtrl * This,
            /* [in] */ double Duration,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EstimateOutputBitRate )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PauseConvert )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RunConvert )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowFrame )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowFrame )( 
            IltmmConvertCtrl * This,
            /* [in] */ long hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmConvertCtrl * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmConvertCtrl * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pHeight);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmConvertCtrl * This,
            /* [in] */ long Left,
            /* [in] */ long Top,
            /* [in] */ long Width,
            /* [in] */ long Height);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableStillCapture )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *phWnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableStillCapture )( 
            IltmmConvertCtrl * This,
            /* [in] */ VARIANT_BOOL hWnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillCaptureLimit )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillCaptureLimit )( 
            IltmmConvertCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmConvertCtrl * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Preview )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Preview )( 
            IltmmConvertCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviewVisible )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreviewVisible )( 
            IltmmConvertCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenLogFile )( 
            IltmmConvertCtrl * This,
            /* [in] */ BSTR filename,
            /* [in] */ long flags);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CloseLogFile )( 
            IltmmConvertCtrl * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseDVDSource )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseDVDSource )( 
            IltmmConvertCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IndexMode )( 
            IltmmConvertCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IndexMode )( 
            IltmmConvertCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmConvertCtrlVtbl;

    interface IltmmConvertCtrl
    {
        CONST_VTBL struct IltmmConvertCtrlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmConvertCtrl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmConvertCtrl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmConvertCtrl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmConvertCtrl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmConvertCtrl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmConvertCtrl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmConvertCtrl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmConvertCtrl_get_SourceFile(This,pFile)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFile) ) 

#define IltmmConvertCtrl_put_SourceFile(This,File)	\
    ( (This)->lpVtbl -> put_SourceFile(This,File) ) 

#define IltmmConvertCtrl_get_TargetFile(This,pFile)	\
    ( (This)->lpVtbl -> get_TargetFile(This,pFile) ) 

#define IltmmConvertCtrl_put_TargetFile(This,File)	\
    ( (This)->lpVtbl -> put_TargetFile(This,File) ) 

#define IltmmConvertCtrl_get_AudioCompressors(This,ppAudioCompressors)	\
    ( (This)->lpVtbl -> get_AudioCompressors(This,ppAudioCompressors) ) 

#define IltmmConvertCtrl_get_VideoCompressors(This,ppVideoCompressors)	\
    ( (This)->lpVtbl -> get_VideoCompressors(This,ppVideoCompressors) ) 

#define IltmmConvertCtrl_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmConvertCtrl_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmConvertCtrl_StartConvert(This)	\
    ( (This)->lpVtbl -> StartConvert(This) ) 

#define IltmmConvertCtrl_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmConvertCtrl_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmConvertCtrl_get_TargetFormat(This,pTargetFormat)	\
    ( (This)->lpVtbl -> get_TargetFormat(This,pTargetFormat) ) 

#define IltmmConvertCtrl_put_TargetFormat(This,TargetFormat)	\
    ( (This)->lpVtbl -> put_TargetFormat(This,TargetFormat) ) 

#define IltmmConvertCtrl_StopConvert(This)	\
    ( (This)->lpVtbl -> StopConvert(This) ) 

#define IltmmConvertCtrl_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmConvertCtrl_get_PercentComplete(This,pPrecentComplete)	\
    ( (This)->lpVtbl -> get_PercentComplete(This,pPrecentComplete) ) 

#define IltmmConvertCtrl_get_SourceHGlobal(This,pSourceHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pSourceHGlobal) ) 

#define IltmmConvertCtrl_put_SourceHGlobal(This,SourceHGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,SourceHGlobal) ) 

#define IltmmConvertCtrl_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmConvertCtrl_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmConvertCtrl_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmConvertCtrl_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmConvertCtrl_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmConvertCtrl_get_TargetType(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetType(This,pVal) ) 

#define IltmmConvertCtrl_put_TargetType(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetType(This,newVal) ) 

#define IltmmConvertCtrl_get_TargetArray(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetArray(This,pVal) ) 

#define IltmmConvertCtrl_put_TargetArray(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetArray(This,newVal) ) 

#define IltmmConvertCtrl_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmConvertCtrl_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmConvertCtrl_get_TargetObject(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetObject(This,pVal) ) 

#define IltmmConvertCtrl_put_TargetObject(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetObject(This,newVal) ) 

#define IltmmConvertCtrl_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmConvertCtrl_ResetTarget(This)	\
    ( (This)->lpVtbl -> ResetTarget(This) ) 

#define IltmmConvertCtrl_get_ConvertError(This,pVal)	\
    ( (This)->lpVtbl -> get_ConvertError(This,pVal) ) 


#define IltmmConvertCtrl_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmConvertCtrl_get_TargetDevices(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetDevices(This,pVal) ) 

#define IltmmConvertCtrl_get_TargetVCRControl(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetVCRControl(This,pVal) ) 

#define IltmmConvertCtrl_get_TargetFormats(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetFormats(This,pVal) ) 

#define IltmmConvertCtrl_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmConvertCtrl_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmConvertCtrl_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmConvertCtrl_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmConvertCtrl_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmConvertCtrl_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmConvertCtrl_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmConvertCtrl_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmConvertCtrl_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmConvertCtrl_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmConvertCtrl_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmConvertCtrl_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmConvertCtrl_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmConvertCtrl_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmConvertCtrl_get_WMProfile(This,pVal)	\
    ( (This)->lpVtbl -> get_WMProfile(This,pVal) ) 

#define IltmmConvertCtrl_put_WMProfile(This,Val)	\
    ( (This)->lpVtbl -> put_WMProfile(This,Val) ) 

#define IltmmConvertCtrl_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmConvertCtrl_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmConvertCtrl_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmConvertCtrl_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmConvertCtrl_get_TargetStream(This,pVal)	\
    ( (This)->lpVtbl -> get_TargetStream(This,pVal) ) 

#define IltmmConvertCtrl_put_TargetStream(This,newVal)	\
    ( (This)->lpVtbl -> put_TargetStream(This,newVal) ) 

#define IltmmConvertCtrl_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmConvertCtrl_get_InterleaveMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InterleaveMode(This,pVal) ) 

#define IltmmConvertCtrl_put_InterleaveMode(This,newVal)	\
    ( (This)->lpVtbl -> put_InterleaveMode(This,newVal) ) 

#define IltmmConvertCtrl_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmConvertCtrl_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmConvertCtrl_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmConvertCtrl_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmConvertCtrl_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmConvertCtrl_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#define IltmmConvertCtrl_get_PercentCompleteScalar(This,pVal)	\
    ( (This)->lpVtbl -> get_PercentCompleteScalar(This,pVal) ) 

#define IltmmConvertCtrl_put_PercentCompleteScalar(This,newVal)	\
    ( (This)->lpVtbl -> put_PercentCompleteScalar(This,newVal) ) 


#define IltmmConvertCtrl_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmConvertCtrl_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmConvertCtrl_EstimateOutputSize(This,Duration,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputSize(This,Duration,pVal) ) 

#define IltmmConvertCtrl_EstimateOutputBitRate(This,pVal)	\
    ( (This)->lpVtbl -> EstimateOutputBitRate(This,pVal) ) 


#define IltmmConvertCtrl_PauseConvert(This)	\
    ( (This)->lpVtbl -> PauseConvert(This) ) 

#define IltmmConvertCtrl_RunConvert(This)	\
    ( (This)->lpVtbl -> RunConvert(This) ) 


#define IltmmConvertCtrl_get_VideoWindowFrame(This,phWnd)	\
    ( (This)->lpVtbl -> get_VideoWindowFrame(This,phWnd) ) 

#define IltmmConvertCtrl_put_VideoWindowFrame(This,hWnd)	\
    ( (This)->lpVtbl -> put_VideoWindowFrame(This,hWnd) ) 

#define IltmmConvertCtrl_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmConvertCtrl_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmConvertCtrl_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmConvertCtrl_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmConvertCtrl_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmConvertCtrl_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmConvertCtrl_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmConvertCtrl_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmConvertCtrl_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmConvertCtrl_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmConvertCtrl_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmConvertCtrl_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmConvertCtrl_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmConvertCtrl_get_EnableStillCapture(This,phWnd)	\
    ( (This)->lpVtbl -> get_EnableStillCapture(This,phWnd) ) 

#define IltmmConvertCtrl_put_EnableStillCapture(This,hWnd)	\
    ( (This)->lpVtbl -> put_EnableStillCapture(This,hWnd) ) 

#define IltmmConvertCtrl_get_StillCaptureLimit(This,pVal)	\
    ( (This)->lpVtbl -> get_StillCaptureLimit(This,pVal) ) 

#define IltmmConvertCtrl_put_StillCaptureLimit(This,newVal)	\
    ( (This)->lpVtbl -> put_StillCaptureLimit(This,newVal) ) 

#define IltmmConvertCtrl_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmConvertCtrl_get_Preview(This,pVal)	\
    ( (This)->lpVtbl -> get_Preview(This,pVal) ) 

#define IltmmConvertCtrl_put_Preview(This,newVal)	\
    ( (This)->lpVtbl -> put_Preview(This,newVal) ) 

#define IltmmConvertCtrl_get_PreviewVisible(This,pVal)	\
    ( (This)->lpVtbl -> get_PreviewVisible(This,pVal) ) 

#define IltmmConvertCtrl_put_PreviewVisible(This,newVal)	\
    ( (This)->lpVtbl -> put_PreviewVisible(This,newVal) ) 


#define IltmmConvertCtrl_OpenLogFile(This,filename,flags)	\
    ( (This)->lpVtbl -> OpenLogFile(This,filename,flags) ) 

#define IltmmConvertCtrl_CloseLogFile(This)	\
    ( (This)->lpVtbl -> CloseLogFile(This) ) 


#define IltmmConvertCtrl_get_UseDVDSource(This,pVal)	\
    ( (This)->lpVtbl -> get_UseDVDSource(This,pVal) ) 

#define IltmmConvertCtrl_put_UseDVDSource(This,newVal)	\
    ( (This)->lpVtbl -> put_UseDVDSource(This,newVal) ) 


#define IltmmConvertCtrl_get_IndexMode(This,pVal)	\
    ( (This)->lpVtbl -> get_IndexMode(This,pVal) ) 

#define IltmmConvertCtrl_put_IndexMode(This,newVal)	\
    ( (This)->lpVtbl -> put_IndexMode(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmConvertCtrl_INTERFACE_DEFINED__ */


#ifndef ___IltmmConvertCtrlEvents_DISPINTERFACE_DEFINED__
#define ___IltmmConvertCtrlEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IltmmConvertCtrlEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID__IltmmConvertCtrlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00161016-B1BA-11CE-ABC6-F5B2E79D9E3F")
    _IltmmConvertCtrlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IltmmConvertCtrlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IltmmConvertCtrlEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IltmmConvertCtrlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IltmmConvertCtrlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IltmmConvertCtrlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IltmmConvertCtrlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IltmmConvertCtrlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IltmmConvertCtrlEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _IltmmConvertCtrlEventsVtbl;

    interface _IltmmConvertCtrlEvents
    {
        CONST_VTBL struct _IltmmConvertCtrlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IltmmConvertCtrlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IltmmConvertCtrlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IltmmConvertCtrlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IltmmConvertCtrlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IltmmConvertCtrlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IltmmConvertCtrlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IltmmConvertCtrlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IltmmConvertCtrlEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IltmmPlayCtrl1_INTERFACE_DEFINED__
#define __IltmmPlayCtrl1_INTERFACE_DEFINED__

/* interface IltmmPlayCtrl1 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlayCtrl1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161014-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlayCtrl1 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_BackColor( 
            /* [in] */ OLE_COLOR clr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ OLE_COLOR *pclr) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_BorderStyle( 
            /* [in] */ ltmmBorderStyle style) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_BorderStyle( 
            /* [retval][out] */ ltmmBorderStyle *pstyle) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL vbool) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *pbool) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Window( 
            /* [retval][out] */ LONG_PTR *phwnd) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_Appearance( 
            /* [in] */ ltmmAppearance appearance) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Appearance( 
            /* [retval][out] */ ltmmAppearance *pappearance) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_MousePointer( 
            /* [in] */ ltmmMousePointer pointer) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_MousePointer( 
            /* [retval][out] */ ltmmMousePointer *ppointer) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_MouseIcon( 
            /* [in] */ IPictureDisp *pMouseIcon) = 0;
        
        virtual /* [helpcontext][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_MouseIcon( 
            /* [in] */ IPictureDisp *pMouseIcon) = 0;
        
        virtual /* [helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_MouseIcon( 
            /* [retval][out] */ IPictureDisp **ppMouseIcon) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFile( 
            /* [retval][out] */ BSTR *pFileName) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceFile( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Run( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Pause( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Rate( 
            /* [retval][out] */ double *pRate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Rate( 
            /* [in] */ double Rate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Volume( 
            /* [retval][out] */ long *pVolume) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Volume( 
            /* [in] */ long Volume) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Balance( 
            /* [retval][out] */ long *pBalance) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Balance( 
            /* [in] */ long Balance) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_State( 
            /* [retval][out] */ long *pState) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentPosition( 
            /* [retval][out] */ double *pPosition) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentPosition( 
            /* [in] */ double Position) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
            /* [retval][out] */ double *pDuration) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentFramePosition( 
            /* [retval][out] */ long *pPosition) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentFramePosition( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FrameDuration( 
            /* [retval][out] */ long *pDuration) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Mute( 
            /* [retval][out] */ VARIANT_BOOL *pMute) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Mute( 
            /* [in] */ VARIANT_BOOL Mute) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_FullScreenMode( 
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_FullScreenMode( 
            /* [in] */ VARIANT_BOOL FullScreenMode) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [retval][out] */ BSTR *pAuthor) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *pTitle) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Copyright( 
            /* [retval][out] */ BSTR *pCopyright) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pDescription) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Rating( 
            /* [retval][out] */ BSTR *pRating) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_WMCertificate( 
            /* [retval][out] */ IUnknown **ppWMCertificate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_WMCertificate( 
            /* [in] */ IUnknown *pWMCertificate) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentTrackingPosition( 
            /* [retval][out] */ long *pPosition) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentTrackingPosition( 
            /* [in] */ long Position) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PlayCount( 
            /* [retval][out] */ long *pPlayCount) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_PlayCount( 
            /* [in] */ long PlayCount) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWidth( 
            /* [retval][out] */ float *pWidth) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoHeight( 
            /* [retval][out] */ float *pHeight) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionStart( 
            /* [retval][out] */ double *pStart) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectionStart( 
            /* [in] */ double Start) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectionEnd( 
            /* [retval][out] */ double *pEnd) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SelectionEnd( 
            /* [in] */ double End) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoStart( 
            /* [retval][out] */ VARIANT_BOOL *pAutoStart) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoStart( 
            /* [in] */ VARIANT_BOOL AutoStart) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoRewind( 
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoRewind( 
            /* [in] */ VARIANT_BOOL AutoRewind) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TrackingSelectionStart( 
            /* [retval][out] */ long *pStart) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_TrackingSelectionEnd( 
            /* [retval][out] */ long *pEnd) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowSizeMode( 
            /* [retval][out] */ ltmmSizeMode *pSizeMode) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_VideoWindowSizeMode( 
            /* [in] */ ltmmSizeMode SizeMode) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE NextFrame( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE PreviousFrame( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckSeekingCapabilities( 
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SeekSelectionStart( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SeekSelectionEnd( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkSelectionStart( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE MarkSelectionEnd( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SeekStart( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SeekEnd( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ToggleFullScreenMode( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowWidth( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHeight( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowLeft( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowTop( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedAudioProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedVideoProcessors( 
            /* [retval][out] */ IltmmProcessors **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE HasDialog( 
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowDialog( 
            /* [in] */ long Dialog,
            /* [in] */ long hWnd) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceType( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceHGlobal( 
            /* [retval][out] */ long *pHGlobal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceHGlobal( 
            /* [in] */ long HGlobal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceArray( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceArray( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceObject( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceObject( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetSource( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleLeft( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleLeft( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleTop( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleTop( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleWidth( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleWidth( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleHeight( 
            /* [retval][out] */ float *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleHeight( 
            /* [in] */ float newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScaleMode( 
            /* [retval][out] */ ltmmScaleMode *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_ScaleMode( 
            /* [in] */ ltmmScaleMode newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AutoSize( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AutoSize( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayCtrl1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlayCtrl1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlayCtrl1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlayCtrl1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ double Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlayCtrl1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlayCtrl1 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlayCtrl1 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmPlayCtrl1Vtbl;

    interface IltmmPlayCtrl1
    {
        CONST_VTBL struct IltmmPlayCtrl1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlayCtrl1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlayCtrl1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlayCtrl1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlayCtrl1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlayCtrl1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlayCtrl1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlayCtrl1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlayCtrl1_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmPlayCtrl1_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmPlayCtrl1_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmPlayCtrl1_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmPlayCtrl1_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmPlayCtrl1_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmPlayCtrl1_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmPlayCtrl1_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmPlayCtrl1_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmPlayCtrl1_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmPlayCtrl1_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmPlayCtrl1_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl1_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl1_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmPlayCtrl1_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlayCtrl1_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlayCtrl1_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlayCtrl1_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlayCtrl1_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlayCtrl1_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlayCtrl1_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlayCtrl1_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlayCtrl1_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlayCtrl1_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlayCtrl1_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlayCtrl1_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlayCtrl1_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlayCtrl1_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlayCtrl1_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlayCtrl1_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlayCtrl1_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlayCtrl1_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlayCtrl1_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlayCtrl1_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlayCtrl1_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlayCtrl1_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlayCtrl1_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlayCtrl1_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlayCtrl1_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlayCtrl1_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlayCtrl1_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlayCtrl1_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlayCtrl1_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlayCtrl1_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlayCtrl1_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlayCtrl1_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlayCtrl1_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlayCtrl1_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlayCtrl1_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlayCtrl1_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlayCtrl1_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlayCtrl1_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl1_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlayCtrl1_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlayCtrl1_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlayCtrl1_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlayCtrl1_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlayCtrl1_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlayCtrl1_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl1_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlayCtrl1_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlayCtrl1_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlayCtrl1_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlayCtrl1_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlayCtrl1_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlayCtrl1_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlayCtrl1_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlayCtrl1_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlayCtrl1_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlayCtrl1_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlayCtrl1_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlayCtrl1_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlayCtrl1_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlayCtrl1_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlayCtrl1_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlayCtrl1_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl1_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl1_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl1_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl1_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlayCtrl1_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlayCtrl1_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlayCtrl1_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlayCtrl1_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlayCtrl1_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlayCtrl1_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlayCtrl1_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlayCtrl1_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlayCtrl1_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlayCtrl1_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmPlayCtrl1_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmPlayCtrl1_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmPlayCtrl1_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmPlayCtrl1_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmPlayCtrl1_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmPlayCtrl1_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmPlayCtrl1_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmPlayCtrl1_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmPlayCtrl1_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmPlayCtrl1_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlayCtrl1_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlayCtrl1_INTERFACE_DEFINED__ */


#ifndef __IltmmPlayCtrl2_INTERFACE_DEFINED__
#define __IltmmPlayCtrl2_INTERFACE_DEFINED__

/* interface IltmmPlayCtrl2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlayCtrl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161032-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlayCtrl2 : public IltmmPlayCtrl1
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioRenderers( 
            /* [retval][out] */ IltmmRenderers **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSubObject( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE EditGraph( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayCtrl2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlayCtrl2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlayCtrl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlayCtrl2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ double Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlayCtrl2 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlayCtrl2 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlayCtrl2 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlayCtrl2 * This);
        
        END_INTERFACE
    } IltmmPlayCtrl2Vtbl;

    interface IltmmPlayCtrl2
    {
        CONST_VTBL struct IltmmPlayCtrl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlayCtrl2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlayCtrl2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlayCtrl2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlayCtrl2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlayCtrl2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlayCtrl2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlayCtrl2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlayCtrl2_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmPlayCtrl2_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmPlayCtrl2_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmPlayCtrl2_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmPlayCtrl2_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmPlayCtrl2_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmPlayCtrl2_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmPlayCtrl2_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmPlayCtrl2_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmPlayCtrl2_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmPlayCtrl2_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmPlayCtrl2_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl2_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl2_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmPlayCtrl2_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlayCtrl2_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlayCtrl2_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlayCtrl2_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlayCtrl2_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlayCtrl2_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlayCtrl2_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlayCtrl2_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlayCtrl2_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlayCtrl2_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlayCtrl2_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlayCtrl2_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlayCtrl2_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlayCtrl2_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlayCtrl2_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlayCtrl2_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlayCtrl2_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlayCtrl2_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlayCtrl2_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlayCtrl2_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlayCtrl2_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlayCtrl2_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlayCtrl2_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlayCtrl2_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlayCtrl2_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlayCtrl2_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlayCtrl2_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlayCtrl2_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlayCtrl2_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlayCtrl2_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlayCtrl2_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlayCtrl2_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlayCtrl2_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlayCtrl2_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlayCtrl2_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlayCtrl2_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlayCtrl2_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlayCtrl2_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl2_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlayCtrl2_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlayCtrl2_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlayCtrl2_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlayCtrl2_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlayCtrl2_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlayCtrl2_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl2_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlayCtrl2_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlayCtrl2_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlayCtrl2_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlayCtrl2_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlayCtrl2_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlayCtrl2_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlayCtrl2_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlayCtrl2_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlayCtrl2_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlayCtrl2_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlayCtrl2_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlayCtrl2_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlayCtrl2_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlayCtrl2_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlayCtrl2_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlayCtrl2_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl2_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl2_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl2_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl2_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlayCtrl2_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlayCtrl2_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlayCtrl2_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlayCtrl2_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlayCtrl2_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlayCtrl2_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlayCtrl2_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlayCtrl2_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlayCtrl2_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlayCtrl2_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmPlayCtrl2_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmPlayCtrl2_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmPlayCtrl2_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmPlayCtrl2_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmPlayCtrl2_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmPlayCtrl2_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmPlayCtrl2_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmPlayCtrl2_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmPlayCtrl2_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmPlayCtrl2_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlayCtrl2_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlayCtrl2_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlayCtrl2_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl2_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlayCtrl2_INTERFACE_DEFINED__ */


#ifndef __IltmmPlayCtrl3_INTERFACE_DEFINED__
#define __IltmmPlayCtrl3_INTERFACE_DEFINED__

/* interface IltmmPlayCtrl3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlayCtrl3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016103C-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlayCtrl3 : public IltmmPlayCtrl2
    {
    public:
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStillPicture( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetStillDIB( 
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_RenderedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_UnrenderedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayCtrl3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlayCtrl3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlayCtrl3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlayCtrl3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ double Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlayCtrl3 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlayCtrl3 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlayCtrl3 * This,
            /* [retval][out] */ long *pVal);
        
        END_INTERFACE
    } IltmmPlayCtrl3Vtbl;

    interface IltmmPlayCtrl3
    {
        CONST_VTBL struct IltmmPlayCtrl3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlayCtrl3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlayCtrl3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlayCtrl3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlayCtrl3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlayCtrl3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlayCtrl3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlayCtrl3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlayCtrl3_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmPlayCtrl3_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmPlayCtrl3_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmPlayCtrl3_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmPlayCtrl3_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmPlayCtrl3_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmPlayCtrl3_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmPlayCtrl3_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmPlayCtrl3_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmPlayCtrl3_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmPlayCtrl3_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmPlayCtrl3_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl3_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl3_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmPlayCtrl3_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlayCtrl3_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlayCtrl3_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlayCtrl3_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlayCtrl3_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlayCtrl3_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlayCtrl3_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlayCtrl3_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlayCtrl3_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlayCtrl3_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlayCtrl3_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlayCtrl3_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlayCtrl3_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlayCtrl3_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlayCtrl3_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlayCtrl3_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlayCtrl3_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlayCtrl3_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlayCtrl3_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlayCtrl3_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlayCtrl3_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlayCtrl3_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlayCtrl3_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlayCtrl3_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlayCtrl3_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlayCtrl3_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlayCtrl3_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlayCtrl3_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlayCtrl3_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlayCtrl3_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlayCtrl3_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlayCtrl3_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlayCtrl3_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlayCtrl3_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlayCtrl3_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlayCtrl3_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlayCtrl3_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlayCtrl3_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl3_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlayCtrl3_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlayCtrl3_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlayCtrl3_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlayCtrl3_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlayCtrl3_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlayCtrl3_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl3_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlayCtrl3_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlayCtrl3_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlayCtrl3_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlayCtrl3_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlayCtrl3_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlayCtrl3_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlayCtrl3_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlayCtrl3_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlayCtrl3_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlayCtrl3_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlayCtrl3_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlayCtrl3_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlayCtrl3_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlayCtrl3_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlayCtrl3_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlayCtrl3_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl3_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl3_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl3_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl3_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlayCtrl3_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlayCtrl3_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlayCtrl3_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlayCtrl3_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlayCtrl3_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlayCtrl3_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlayCtrl3_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlayCtrl3_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlayCtrl3_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlayCtrl3_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmPlayCtrl3_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmPlayCtrl3_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmPlayCtrl3_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmPlayCtrl3_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmPlayCtrl3_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmPlayCtrl3_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmPlayCtrl3_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmPlayCtrl3_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmPlayCtrl3_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmPlayCtrl3_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlayCtrl3_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlayCtrl3_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlayCtrl3_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl3_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlayCtrl3_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlayCtrl3_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlayCtrl3_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlayCtrl3_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmPlayCtrl3_INTERFACE_DEFINED__ */


#ifndef __IltmmPlayCtrl4_INTERFACE_DEFINED__
#define __IltmmPlayCtrl4_INTERFACE_DEFINED__

/* interface IltmmPlayCtrl4 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlayCtrl4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016104A-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlayCtrl4 : public IltmmPlayCtrl3
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CloseCaptioning( 
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CloseCaptioning( 
            /* [in] */ VARIANT_BOOL CloseCaptioning) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ToggleCloseCaptioning( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWindowHandle( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceVideoType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceAudioType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceVideoFOURCC( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceAudioFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AllowedStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_AllowedStreams( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSubObjectDispatch( 
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_MidiRenderers( 
            /* [retval][out] */ IltmmRenderers **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDecoderResolution( 
            /* [retval][out] */ ltmmDVResolution *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_DVDecoderResolution( 
            /* [in] */ ltmmDVResolution Val) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetVideoWindowPos( 
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceStream( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceStream( 
            /* [in] */ IUnknown *newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IsRateSupported( 
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveStillDIB( 
            /* [in] */ BSTR filename,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_UsingDVDecoder( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayCtrl4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlayCtrl4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlayCtrl4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlayCtrl4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ double Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlayCtrl4 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlayCtrl4 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlayCtrl4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmPlayCtrl4Vtbl;

    interface IltmmPlayCtrl4
    {
        CONST_VTBL struct IltmmPlayCtrl4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlayCtrl4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlayCtrl4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlayCtrl4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlayCtrl4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlayCtrl4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlayCtrl4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlayCtrl4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlayCtrl4_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmPlayCtrl4_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmPlayCtrl4_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmPlayCtrl4_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmPlayCtrl4_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmPlayCtrl4_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmPlayCtrl4_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmPlayCtrl4_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmPlayCtrl4_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmPlayCtrl4_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmPlayCtrl4_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmPlayCtrl4_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl4_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl4_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmPlayCtrl4_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlayCtrl4_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlayCtrl4_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlayCtrl4_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlayCtrl4_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlayCtrl4_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlayCtrl4_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlayCtrl4_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlayCtrl4_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlayCtrl4_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlayCtrl4_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlayCtrl4_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlayCtrl4_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlayCtrl4_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlayCtrl4_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlayCtrl4_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlayCtrl4_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlayCtrl4_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlayCtrl4_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlayCtrl4_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlayCtrl4_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlayCtrl4_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlayCtrl4_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlayCtrl4_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlayCtrl4_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlayCtrl4_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlayCtrl4_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlayCtrl4_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlayCtrl4_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlayCtrl4_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlayCtrl4_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlayCtrl4_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlayCtrl4_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlayCtrl4_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlayCtrl4_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlayCtrl4_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlayCtrl4_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlayCtrl4_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl4_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlayCtrl4_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlayCtrl4_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlayCtrl4_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlayCtrl4_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlayCtrl4_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlayCtrl4_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl4_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlayCtrl4_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlayCtrl4_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlayCtrl4_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlayCtrl4_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlayCtrl4_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlayCtrl4_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlayCtrl4_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlayCtrl4_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlayCtrl4_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlayCtrl4_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlayCtrl4_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlayCtrl4_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlayCtrl4_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlayCtrl4_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlayCtrl4_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlayCtrl4_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl4_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl4_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl4_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl4_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlayCtrl4_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlayCtrl4_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlayCtrl4_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlayCtrl4_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlayCtrl4_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlayCtrl4_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlayCtrl4_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlayCtrl4_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlayCtrl4_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlayCtrl4_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmPlayCtrl4_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmPlayCtrl4_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmPlayCtrl4_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmPlayCtrl4_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmPlayCtrl4_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmPlayCtrl4_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmPlayCtrl4_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmPlayCtrl4_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmPlayCtrl4_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmPlayCtrl4_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlayCtrl4_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlayCtrl4_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlayCtrl4_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl4_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlayCtrl4_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlayCtrl4_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlayCtrl4_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlayCtrl4_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlayCtrl4_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlayCtrl4_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlayCtrl4_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlayCtrl4_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlayCtrl4_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlayCtrl4_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlayCtrl4_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlayCtrl4_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlayCtrl4_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlayCtrl4_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlayCtrl4_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl4_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlayCtrl4_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlayCtrl4_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlayCtrl4_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlayCtrl4_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlayCtrl4_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlayCtrl4_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlayCtrl4_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlayCtrl4_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl4_put_DVDecoderResolution_Proxy( 
    IltmmPlayCtrl4 * This,
    /* [in] */ ltmmDVResolution Val);


void __RPC_STUB IltmmPlayCtrl4_put_DVDecoderResolution_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl4_SetVideoWindowPos_Proxy( 
    IltmmPlayCtrl4 * This,
    /* [in] */ float Left,
    /* [in] */ float Top,
    /* [in] */ float Width,
    /* [in] */ float Height);


void __RPC_STUB IltmmPlayCtrl4_SetVideoWindowPos_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl4_get_SourceStream_Proxy( 
    IltmmPlayCtrl4 * This,
    /* [retval][out] */ IUnknown **pVal);


void __RPC_STUB IltmmPlayCtrl4_get_SourceStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl4_put_SourceStream_Proxy( 
    IltmmPlayCtrl4 * This,
    /* [in] */ IUnknown *newVal);


void __RPC_STUB IltmmPlayCtrl4_put_SourceStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl4_IsRateSupported_Proxy( 
    IltmmPlayCtrl4 * This,
    /* [in] */ double Rate,
    /* [retval][out] */ VARIANT_BOOL *pResult);


void __RPC_STUB IltmmPlayCtrl4_IsRateSupported_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl4_SaveStillDIB_Proxy( 
    IltmmPlayCtrl4 * This,
    /* [in] */ BSTR filename,
    /* [in] */ long timeout);


void __RPC_STUB IltmmPlayCtrl4_SaveStillDIB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl4_get_UsingDVDecoder_Proxy( 
    IltmmPlayCtrl4 * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmPlayCtrl4_get_UsingDVDecoder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmPlayCtrl4_INTERFACE_DEFINED__ */


#ifndef __IltmmPlayCtrl5_INTERFACE_DEFINED__
#define __IltmmPlayCtrl5_INTERFACE_DEFINED__

/* interface IltmmPlayCtrl5 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlayCtrl5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161070-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlayCtrl5 : public IltmmPlayCtrl4
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StillTap( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_StillTap( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveStillBitmap( 
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToStream( 
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveSettingsToFile( 
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromStream( 
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LoadSettingsFromFile( 
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CanSaveObjectSettings( 
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayCtrl5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlayCtrl5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlayCtrl5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlayCtrl5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ double Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlayCtrl5 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillTap )( 
            IltmmPlayCtrl5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillTap )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmPlayCtrl5 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IltmmPlayCtrl5Vtbl;

    interface IltmmPlayCtrl5
    {
        CONST_VTBL struct IltmmPlayCtrl5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlayCtrl5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlayCtrl5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlayCtrl5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlayCtrl5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlayCtrl5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlayCtrl5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlayCtrl5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlayCtrl5_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmPlayCtrl5_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmPlayCtrl5_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmPlayCtrl5_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmPlayCtrl5_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmPlayCtrl5_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmPlayCtrl5_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmPlayCtrl5_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmPlayCtrl5_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmPlayCtrl5_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmPlayCtrl5_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmPlayCtrl5_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl5_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl5_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmPlayCtrl5_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlayCtrl5_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlayCtrl5_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlayCtrl5_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlayCtrl5_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlayCtrl5_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlayCtrl5_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlayCtrl5_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlayCtrl5_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlayCtrl5_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlayCtrl5_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlayCtrl5_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlayCtrl5_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlayCtrl5_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlayCtrl5_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlayCtrl5_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlayCtrl5_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlayCtrl5_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlayCtrl5_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlayCtrl5_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlayCtrl5_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlayCtrl5_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlayCtrl5_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlayCtrl5_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlayCtrl5_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlayCtrl5_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlayCtrl5_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlayCtrl5_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlayCtrl5_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlayCtrl5_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlayCtrl5_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlayCtrl5_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlayCtrl5_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlayCtrl5_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlayCtrl5_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlayCtrl5_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlayCtrl5_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlayCtrl5_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl5_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlayCtrl5_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlayCtrl5_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlayCtrl5_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlayCtrl5_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlayCtrl5_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlayCtrl5_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl5_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlayCtrl5_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlayCtrl5_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlayCtrl5_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlayCtrl5_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlayCtrl5_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlayCtrl5_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlayCtrl5_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlayCtrl5_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlayCtrl5_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlayCtrl5_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlayCtrl5_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlayCtrl5_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlayCtrl5_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlayCtrl5_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlayCtrl5_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlayCtrl5_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl5_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl5_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl5_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl5_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlayCtrl5_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlayCtrl5_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlayCtrl5_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlayCtrl5_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlayCtrl5_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlayCtrl5_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlayCtrl5_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlayCtrl5_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlayCtrl5_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlayCtrl5_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmPlayCtrl5_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmPlayCtrl5_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmPlayCtrl5_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmPlayCtrl5_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmPlayCtrl5_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmPlayCtrl5_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmPlayCtrl5_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmPlayCtrl5_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmPlayCtrl5_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmPlayCtrl5_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlayCtrl5_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlayCtrl5_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlayCtrl5_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl5_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlayCtrl5_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlayCtrl5_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlayCtrl5_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlayCtrl5_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlayCtrl5_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlayCtrl5_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlayCtrl5_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlayCtrl5_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlayCtrl5_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlayCtrl5_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlayCtrl5_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlayCtrl5_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlayCtrl5_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlayCtrl5_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlayCtrl5_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl5_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlayCtrl5_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlayCtrl5_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlayCtrl5_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlayCtrl5_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlayCtrl5_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlayCtrl5_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlayCtrl5_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlayCtrl5_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmPlayCtrl5_get_StillTap(This,pVal)	\
    ( (This)->lpVtbl -> get_StillTap(This,pVal) ) 

#define IltmmPlayCtrl5_put_StillTap(This,newVal)	\
    ( (This)->lpVtbl -> put_StillTap(This,newVal) ) 

#define IltmmPlayCtrl5_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmPlayCtrl5_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmPlayCtrl5_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmPlayCtrl5_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmPlayCtrl5_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmPlayCtrl5_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl5_get_StillTap_Proxy( 
    IltmmPlayCtrl5 * This,
    /* [retval][out] */ long *pVal);


void __RPC_STUB IltmmPlayCtrl5_get_StillTap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl5_put_StillTap_Proxy( 
    IltmmPlayCtrl5 * This,
    /* [in] */ long newVal);


void __RPC_STUB IltmmPlayCtrl5_put_StillTap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl5_SaveStillBitmap_Proxy( 
    IltmmPlayCtrl5 * This,
    /* [in] */ BSTR filename,
    /* [in] */ long format,
    /* [in] */ long quality,
    /* [in] */ long flags,
    /* [in] */ long timeout);


void __RPC_STUB IltmmPlayCtrl5_SaveStillBitmap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl5_SaveSettingsToStream_Proxy( 
    IltmmPlayCtrl5 * This,
    /* [in] */ IUnknown *targetstream,
    /* [in] */ long flags);


void __RPC_STUB IltmmPlayCtrl5_SaveSettingsToStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl5_SaveSettingsToFile_Proxy( 
    IltmmPlayCtrl5 * This,
    /* [in] */ BSTR targetfile,
    /* [in] */ long flags);


void __RPC_STUB IltmmPlayCtrl5_SaveSettingsToFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl5_LoadSettingsFromStream_Proxy( 
    IltmmPlayCtrl5 * This,
    /* [in] */ IUnknown *sourcestream,
    /* [in] */ long flags);


void __RPC_STUB IltmmPlayCtrl5_LoadSettingsFromStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl5_LoadSettingsFromFile_Proxy( 
    IltmmPlayCtrl5 * This,
    /* [in] */ BSTR sourcefile,
    /* [in] */ long flags);


void __RPC_STUB IltmmPlayCtrl5_LoadSettingsFromFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl5_CanSaveObjectSettings_Proxy( 
    IltmmPlayCtrl5 * This,
    /* [in] */ long flags,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmPlayCtrl5_CanSaveObjectSettings_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmPlayCtrl5_INTERFACE_DEFINED__ */


#ifndef __IltmmPlayCtrl6_INTERFACE_DEFINED__
#define __IltmmPlayCtrl6_INTERFACE_DEFINED__

/* interface IltmmPlayCtrl6 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlayCtrl6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161080-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlayCtrl6 : public IltmmPlayCtrl5
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_DVDControl( 
            /* [retval][out] */ IltmmDVDControl **pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayCtrl6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlayCtrl6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlayCtrl6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlayCtrl6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ double Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlayCtrl6 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillTap )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillTap )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmPlayCtrl6 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmPlayCtrl6 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        END_INTERFACE
    } IltmmPlayCtrl6Vtbl;

    interface IltmmPlayCtrl6
    {
        CONST_VTBL struct IltmmPlayCtrl6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlayCtrl6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlayCtrl6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlayCtrl6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlayCtrl6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlayCtrl6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlayCtrl6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlayCtrl6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlayCtrl6_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmPlayCtrl6_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmPlayCtrl6_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmPlayCtrl6_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmPlayCtrl6_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmPlayCtrl6_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmPlayCtrl6_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmPlayCtrl6_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmPlayCtrl6_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmPlayCtrl6_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmPlayCtrl6_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmPlayCtrl6_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl6_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl6_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmPlayCtrl6_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlayCtrl6_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlayCtrl6_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlayCtrl6_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlayCtrl6_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlayCtrl6_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlayCtrl6_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlayCtrl6_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlayCtrl6_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlayCtrl6_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlayCtrl6_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlayCtrl6_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlayCtrl6_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlayCtrl6_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlayCtrl6_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlayCtrl6_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlayCtrl6_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlayCtrl6_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlayCtrl6_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlayCtrl6_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlayCtrl6_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlayCtrl6_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlayCtrl6_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlayCtrl6_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlayCtrl6_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlayCtrl6_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlayCtrl6_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlayCtrl6_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlayCtrl6_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlayCtrl6_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlayCtrl6_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlayCtrl6_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlayCtrl6_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlayCtrl6_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlayCtrl6_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlayCtrl6_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlayCtrl6_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlayCtrl6_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl6_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlayCtrl6_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlayCtrl6_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlayCtrl6_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlayCtrl6_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlayCtrl6_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlayCtrl6_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl6_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlayCtrl6_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlayCtrl6_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlayCtrl6_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlayCtrl6_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlayCtrl6_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlayCtrl6_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlayCtrl6_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlayCtrl6_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlayCtrl6_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlayCtrl6_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlayCtrl6_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlayCtrl6_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlayCtrl6_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlayCtrl6_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlayCtrl6_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlayCtrl6_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl6_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl6_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl6_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl6_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlayCtrl6_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlayCtrl6_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlayCtrl6_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlayCtrl6_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlayCtrl6_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlayCtrl6_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlayCtrl6_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlayCtrl6_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlayCtrl6_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlayCtrl6_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmPlayCtrl6_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmPlayCtrl6_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmPlayCtrl6_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmPlayCtrl6_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmPlayCtrl6_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmPlayCtrl6_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmPlayCtrl6_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmPlayCtrl6_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmPlayCtrl6_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmPlayCtrl6_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlayCtrl6_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlayCtrl6_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlayCtrl6_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl6_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlayCtrl6_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlayCtrl6_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlayCtrl6_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlayCtrl6_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlayCtrl6_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlayCtrl6_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlayCtrl6_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlayCtrl6_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlayCtrl6_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlayCtrl6_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlayCtrl6_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlayCtrl6_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlayCtrl6_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlayCtrl6_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlayCtrl6_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl6_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlayCtrl6_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlayCtrl6_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlayCtrl6_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlayCtrl6_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlayCtrl6_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlayCtrl6_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlayCtrl6_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlayCtrl6_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmPlayCtrl6_get_StillTap(This,pVal)	\
    ( (This)->lpVtbl -> get_StillTap(This,pVal) ) 

#define IltmmPlayCtrl6_put_StillTap(This,newVal)	\
    ( (This)->lpVtbl -> put_StillTap(This,newVal) ) 

#define IltmmPlayCtrl6_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmPlayCtrl6_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmPlayCtrl6_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmPlayCtrl6_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmPlayCtrl6_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmPlayCtrl6_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmPlayCtrl6_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl6_get_DVDControl_Proxy( 
    IltmmPlayCtrl6 * This,
    /* [retval][out] */ IltmmDVDControl **pVal);


void __RPC_STUB IltmmPlayCtrl6_get_DVDControl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmPlayCtrl6_INTERFACE_DEFINED__ */


#ifndef __IltmmPlayCtrl7_INTERFACE_DEFINED__
#define __IltmmPlayCtrl7_INTERFACE_DEFINED__

/* interface IltmmPlayCtrl7 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlayCtrl7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00161092-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlayCtrl7 : public IltmmPlayCtrl6
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_PreferredMPEG2Splitter( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_PreferredMPEG2Splitter( 
            /* [in] */ BSTR newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayCtrl7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlayCtrl7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlayCtrl7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlayCtrl7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ double Rate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ double Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlayCtrl7 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillTap )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillTap )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmPlayCtrl7 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmPlayCtrl7 * This,
            /* [in] */ BSTR newVal);
        
        END_INTERFACE
    } IltmmPlayCtrl7Vtbl;

    interface IltmmPlayCtrl7
    {
        CONST_VTBL struct IltmmPlayCtrl7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlayCtrl7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlayCtrl7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlayCtrl7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlayCtrl7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlayCtrl7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlayCtrl7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlayCtrl7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlayCtrl7_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmPlayCtrl7_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmPlayCtrl7_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmPlayCtrl7_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmPlayCtrl7_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmPlayCtrl7_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmPlayCtrl7_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmPlayCtrl7_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmPlayCtrl7_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmPlayCtrl7_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmPlayCtrl7_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmPlayCtrl7_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl7_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl7_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmPlayCtrl7_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlayCtrl7_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlayCtrl7_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlayCtrl7_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlayCtrl7_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlayCtrl7_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlayCtrl7_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlayCtrl7_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlayCtrl7_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlayCtrl7_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlayCtrl7_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlayCtrl7_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlayCtrl7_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlayCtrl7_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlayCtrl7_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlayCtrl7_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlayCtrl7_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlayCtrl7_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlayCtrl7_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlayCtrl7_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlayCtrl7_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlayCtrl7_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlayCtrl7_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlayCtrl7_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlayCtrl7_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlayCtrl7_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlayCtrl7_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlayCtrl7_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlayCtrl7_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlayCtrl7_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlayCtrl7_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlayCtrl7_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlayCtrl7_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlayCtrl7_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlayCtrl7_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlayCtrl7_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlayCtrl7_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlayCtrl7_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl7_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlayCtrl7_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlayCtrl7_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlayCtrl7_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlayCtrl7_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlayCtrl7_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlayCtrl7_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl7_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlayCtrl7_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlayCtrl7_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlayCtrl7_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlayCtrl7_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlayCtrl7_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlayCtrl7_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlayCtrl7_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlayCtrl7_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlayCtrl7_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlayCtrl7_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlayCtrl7_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlayCtrl7_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlayCtrl7_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlayCtrl7_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlayCtrl7_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlayCtrl7_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl7_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl7_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl7_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl7_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlayCtrl7_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlayCtrl7_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlayCtrl7_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlayCtrl7_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlayCtrl7_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlayCtrl7_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlayCtrl7_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlayCtrl7_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlayCtrl7_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlayCtrl7_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmPlayCtrl7_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmPlayCtrl7_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmPlayCtrl7_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmPlayCtrl7_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmPlayCtrl7_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmPlayCtrl7_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmPlayCtrl7_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmPlayCtrl7_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmPlayCtrl7_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmPlayCtrl7_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlayCtrl7_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlayCtrl7_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlayCtrl7_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl7_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlayCtrl7_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlayCtrl7_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlayCtrl7_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlayCtrl7_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlayCtrl7_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlayCtrl7_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlayCtrl7_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlayCtrl7_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlayCtrl7_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlayCtrl7_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlayCtrl7_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlayCtrl7_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlayCtrl7_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlayCtrl7_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlayCtrl7_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl7_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlayCtrl7_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlayCtrl7_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlayCtrl7_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlayCtrl7_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlayCtrl7_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlayCtrl7_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlayCtrl7_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlayCtrl7_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmPlayCtrl7_get_StillTap(This,pVal)	\
    ( (This)->lpVtbl -> get_StillTap(This,pVal) ) 

#define IltmmPlayCtrl7_put_StillTap(This,newVal)	\
    ( (This)->lpVtbl -> put_StillTap(This,newVal) ) 

#define IltmmPlayCtrl7_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmPlayCtrl7_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmPlayCtrl7_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmPlayCtrl7_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmPlayCtrl7_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmPlayCtrl7_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmPlayCtrl7_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 


#define IltmmPlayCtrl7_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmPlayCtrl7_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl7_get_PreferredMPEG2Splitter_Proxy( 
    IltmmPlayCtrl7 * This,
    /* [retval][out] */ BSTR *pVal);


void __RPC_STUB IltmmPlayCtrl7_get_PreferredMPEG2Splitter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl7_put_PreferredMPEG2Splitter_Proxy( 
    IltmmPlayCtrl7 * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB IltmmPlayCtrl7_put_PreferredMPEG2Splitter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmPlayCtrl7_INTERFACE_DEFINED__ */


#ifndef __IltmmPlayCtrl_INTERFACE_DEFINED__
#define __IltmmPlayCtrl_INTERFACE_DEFINED__

/* interface IltmmPlayCtrl */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IltmmPlayCtrl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610B2-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmPlayCtrl : public IltmmPlayCtrl7
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseDVDSource( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseDVDSource( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmPlayCtrlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmPlayCtrl * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmPlayCtrl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmPlayCtrl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmPlayCtrl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmPlayCtrl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmPlayCtrl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmPlayCtrl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BackColor )( 
            IltmmPlayCtrl * This,
            /* [in] */ OLE_COLOR clr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BackColor )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ OLE_COLOR *pclr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BorderStyle )( 
            IltmmPlayCtrl * This,
            /* [in] */ ltmmBorderStyle style);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BorderStyle )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ ltmmBorderStyle *pstyle);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT_BOOL vbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pbool);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ LONG_PTR *phwnd);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Appearance )( 
            IltmmPlayCtrl * This,
            /* [in] */ ltmmAppearance appearance);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Appearance )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ ltmmAppearance *pappearance);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MousePointer )( 
            IltmmPlayCtrl * This,
            /* [in] */ ltmmMousePointer pointer);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MousePointer )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ ltmmMousePointer *ppointer);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MouseIcon )( 
            IltmmPlayCtrl * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propputref] */ HRESULT ( STDMETHODCALLTYPE *putref_MouseIcon )( 
            IltmmPlayCtrl * This,
            /* [in] */ IPictureDisp *pMouseIcon);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MouseIcon )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IPictureDisp **ppMouseIcon);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pFileName);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmPlayCtrl * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rate )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ double *pRate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rate )( 
            IltmmPlayCtrl * This,
            /* [in] */ double Rate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Volume )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVolume);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Volume )( 
            IltmmPlayCtrl * This,
            /* [in] */ long Volume);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Balance )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pBalance);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Balance )( 
            IltmmPlayCtrl * This,
            /* [in] */ long Balance);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_State )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pState);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentPosition )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ double *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentPosition )( 
            IltmmPlayCtrl * This,
            /* [in] */ double Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ double *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentFramePosition )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentFramePosition )( 
            IltmmPlayCtrl * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pDuration);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Mute )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pMute);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Mute )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT_BOOL Mute);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FullScreenMode )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pFullScreenMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FullScreenMode )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT_BOOL FullScreenMode);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pAuthor);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pTitle);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pCopyright);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pRating);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WMCertificate )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IUnknown **ppWMCertificate);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WMCertificate )( 
            IltmmPlayCtrl * This,
            /* [in] */ IUnknown *pWMCertificate);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentTrackingPosition )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pPosition);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentTrackingPosition )( 
            IltmmPlayCtrl * This,
            /* [in] */ long Position);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PlayCount )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pPlayCount);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PlayCount )( 
            IltmmPlayCtrl * This,
            /* [in] */ long PlayCount);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pWidth);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pHeight);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionStart )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ double *pStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionStart )( 
            IltmmPlayCtrl * This,
            /* [in] */ double Start);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionEnd )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ double *pEnd);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SelectionEnd )( 
            IltmmPlayCtrl * This,
            /* [in] */ double End);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStart )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoStart);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStart )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT_BOOL AutoStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRewind )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pAutoRewind);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoRewind )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT_BOOL AutoRewind);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionStart )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pStart);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TrackingSelectionEnd )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pEnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowSizeMode )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ ltmmSizeMode *pSizeMode);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VideoWindowSizeMode )( 
            IltmmPlayCtrl * This,
            /* [in] */ ltmmSizeMode SizeMode);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextFrame )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PreviousFrame )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSeekingCapabilities )( 
            IltmmPlayCtrl * This,
            /* [in] */ long Mask,
            /* [retval][out] */ long *pCaps);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionStart )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekSelectionEnd )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionStart )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MarkSelectionEnd )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekStart )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SeekEnd )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFullScreenMode )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowWidth )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHeight )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowLeft )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowTop )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioProcessors )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoProcessors )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedAudioProcessors )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedVideoProcessors )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IltmmProcessors **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HasDialog )( 
            IltmmPlayCtrl * This,
            /* [in] */ long Dialog,
            /* [retval][out] */ VARIANT_BOOL *pHasDialog);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDialog )( 
            IltmmPlayCtrl * This,
            /* [in] */ long Dialog,
            /* [in] */ long hWnd);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceType )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceHGlobal )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pHGlobal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceHGlobal )( 
            IltmmPlayCtrl * This,
            /* [in] */ long HGlobal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceArray )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceArray )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceObject )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceObject )( 
            IltmmPlayCtrl * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleLeft )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleLeft )( 
            IltmmPlayCtrl * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleTop )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleTop )( 
            IltmmPlayCtrl * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleWidth )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleWidth )( 
            IltmmPlayCtrl * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleHeight )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ float *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleHeight )( 
            IltmmPlayCtrl * This,
            /* [in] */ float newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleMode )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ ltmmScaleMode *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleMode )( 
            IltmmPlayCtrl * This,
            /* [in] */ ltmmScaleMode newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoSize )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoSize )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioRenderers )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObject )( 
            IltmmPlayCtrl * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IUnknown **ppObject);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EditGraph )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillPicture )( 
            IltmmPlayCtrl * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ IPictureDisp **ppPicture);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetStillDIB )( 
            IltmmPlayCtrl * This,
            /* [in] */ long TimeOut,
            /* [retval][out] */ long *phDIB);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderedStreams )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnrenderedStreams )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CloseCaptioning )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pCloseCaptioning);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CloseCaptioning )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT_BOOL CloseCaptioning);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleCloseCaptioning )( 
            IltmmPlayCtrl * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWindowHandle )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoType )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioType )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceVideoFOURCC )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceAudioFormat )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowedStreams )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowedStreams )( 
            IltmmPlayCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubObjectDispatch )( 
            IltmmPlayCtrl * This,
            /* [in] */ long ObjType,
            /* [retval][out] */ IDispatch **ppObject);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MidiRenderers )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IltmmRenderers **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDecoderResolution )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ ltmmDVResolution *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DVDecoderResolution )( 
            IltmmPlayCtrl * This,
            /* [in] */ ltmmDVResolution Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetVideoWindowPos )( 
            IltmmPlayCtrl * This,
            /* [in] */ float Left,
            /* [in] */ float Top,
            /* [in] */ float Width,
            /* [in] */ float Height);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceStream )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceStream )( 
            IltmmPlayCtrl * This,
            /* [in] */ IUnknown *newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            IltmmPlayCtrl * This,
            /* [in] */ double Rate,
            /* [retval][out] */ VARIANT_BOOL *pResult);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillDIB )( 
            IltmmPlayCtrl * This,
            /* [in] */ BSTR filename,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsingDVDecoder )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StillTap )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_StillTap )( 
            IltmmPlayCtrl * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveStillBitmap )( 
            IltmmPlayCtrl * This,
            /* [in] */ BSTR filename,
            /* [in] */ long format,
            /* [in] */ long quality,
            /* [in] */ long flags,
            /* [in] */ long timeout);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToStream )( 
            IltmmPlayCtrl * This,
            /* [in] */ IUnknown *targetstream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSettingsToFile )( 
            IltmmPlayCtrl * This,
            /* [in] */ BSTR targetfile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromStream )( 
            IltmmPlayCtrl * This,
            /* [in] */ IUnknown *sourcestream,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LoadSettingsFromFile )( 
            IltmmPlayCtrl * This,
            /* [in] */ BSTR sourcefile,
            /* [in] */ long flags);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanSaveObjectSettings )( 
            IltmmPlayCtrl * This,
            /* [in] */ long flags,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DVDControl )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ IltmmDVDControl **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreferredMPEG2Splitter )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PreferredMPEG2Splitter )( 
            IltmmPlayCtrl * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseDVDSource )( 
            IltmmPlayCtrl * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseDVDSource )( 
            IltmmPlayCtrl * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IltmmPlayCtrlVtbl;

    interface IltmmPlayCtrl
    {
        CONST_VTBL struct IltmmPlayCtrlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmPlayCtrl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmPlayCtrl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmPlayCtrl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmPlayCtrl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmPlayCtrl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmPlayCtrl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmPlayCtrl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmPlayCtrl_put_BackColor(This,clr)	\
    ( (This)->lpVtbl -> put_BackColor(This,clr) ) 

#define IltmmPlayCtrl_get_BackColor(This,pclr)	\
    ( (This)->lpVtbl -> get_BackColor(This,pclr) ) 

#define IltmmPlayCtrl_put_BorderStyle(This,style)	\
    ( (This)->lpVtbl -> put_BorderStyle(This,style) ) 

#define IltmmPlayCtrl_get_BorderStyle(This,pstyle)	\
    ( (This)->lpVtbl -> get_BorderStyle(This,pstyle) ) 

#define IltmmPlayCtrl_put_Enabled(This,vbool)	\
    ( (This)->lpVtbl -> put_Enabled(This,vbool) ) 

#define IltmmPlayCtrl_get_Enabled(This,pbool)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbool) ) 

#define IltmmPlayCtrl_get_Window(This,phwnd)	\
    ( (This)->lpVtbl -> get_Window(This,phwnd) ) 

#define IltmmPlayCtrl_put_Appearance(This,appearance)	\
    ( (This)->lpVtbl -> put_Appearance(This,appearance) ) 

#define IltmmPlayCtrl_get_Appearance(This,pappearance)	\
    ( (This)->lpVtbl -> get_Appearance(This,pappearance) ) 

#define IltmmPlayCtrl_put_MousePointer(This,pointer)	\
    ( (This)->lpVtbl -> put_MousePointer(This,pointer) ) 

#define IltmmPlayCtrl_get_MousePointer(This,ppointer)	\
    ( (This)->lpVtbl -> get_MousePointer(This,ppointer) ) 

#define IltmmPlayCtrl_put_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> put_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl_putref_MouseIcon(This,pMouseIcon)	\
    ( (This)->lpVtbl -> putref_MouseIcon(This,pMouseIcon) ) 

#define IltmmPlayCtrl_get_MouseIcon(This,ppMouseIcon)	\
    ( (This)->lpVtbl -> get_MouseIcon(This,ppMouseIcon) ) 

#define IltmmPlayCtrl_get_SourceFile(This,pFileName)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pFileName) ) 

#define IltmmPlayCtrl_put_SourceFile(This,FileName)	\
    ( (This)->lpVtbl -> put_SourceFile(This,FileName) ) 

#define IltmmPlayCtrl_Run(This)	\
    ( (This)->lpVtbl -> Run(This) ) 

#define IltmmPlayCtrl_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IltmmPlayCtrl_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IltmmPlayCtrl_get_Rate(This,pRate)	\
    ( (This)->lpVtbl -> get_Rate(This,pRate) ) 

#define IltmmPlayCtrl_put_Rate(This,Rate)	\
    ( (This)->lpVtbl -> put_Rate(This,Rate) ) 

#define IltmmPlayCtrl_get_Volume(This,pVolume)	\
    ( (This)->lpVtbl -> get_Volume(This,pVolume) ) 

#define IltmmPlayCtrl_put_Volume(This,Volume)	\
    ( (This)->lpVtbl -> put_Volume(This,Volume) ) 

#define IltmmPlayCtrl_get_Balance(This,pBalance)	\
    ( (This)->lpVtbl -> get_Balance(This,pBalance) ) 

#define IltmmPlayCtrl_put_Balance(This,Balance)	\
    ( (This)->lpVtbl -> put_Balance(This,Balance) ) 

#define IltmmPlayCtrl_get_State(This,pState)	\
    ( (This)->lpVtbl -> get_State(This,pState) ) 

#define IltmmPlayCtrl_get_CurrentPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentPosition(This,pPosition) ) 

#define IltmmPlayCtrl_put_CurrentPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentPosition(This,Position) ) 

#define IltmmPlayCtrl_get_Duration(This,pDuration)	\
    ( (This)->lpVtbl -> get_Duration(This,pDuration) ) 

#define IltmmPlayCtrl_get_CurrentFramePosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentFramePosition(This,pPosition) ) 

#define IltmmPlayCtrl_put_CurrentFramePosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentFramePosition(This,Position) ) 

#define IltmmPlayCtrl_get_FrameDuration(This,pDuration)	\
    ( (This)->lpVtbl -> get_FrameDuration(This,pDuration) ) 

#define IltmmPlayCtrl_get_Mute(This,pMute)	\
    ( (This)->lpVtbl -> get_Mute(This,pMute) ) 

#define IltmmPlayCtrl_put_Mute(This,Mute)	\
    ( (This)->lpVtbl -> put_Mute(This,Mute) ) 

#define IltmmPlayCtrl_get_FullScreenMode(This,pFullScreenMode)	\
    ( (This)->lpVtbl -> get_FullScreenMode(This,pFullScreenMode) ) 

#define IltmmPlayCtrl_put_FullScreenMode(This,FullScreenMode)	\
    ( (This)->lpVtbl -> put_FullScreenMode(This,FullScreenMode) ) 

#define IltmmPlayCtrl_get_Author(This,pAuthor)	\
    ( (This)->lpVtbl -> get_Author(This,pAuthor) ) 

#define IltmmPlayCtrl_get_Title(This,pTitle)	\
    ( (This)->lpVtbl -> get_Title(This,pTitle) ) 

#define IltmmPlayCtrl_get_Copyright(This,pCopyright)	\
    ( (This)->lpVtbl -> get_Copyright(This,pCopyright) ) 

#define IltmmPlayCtrl_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IltmmPlayCtrl_get_Rating(This,pRating)	\
    ( (This)->lpVtbl -> get_Rating(This,pRating) ) 

#define IltmmPlayCtrl_get_WMCertificate(This,ppWMCertificate)	\
    ( (This)->lpVtbl -> get_WMCertificate(This,ppWMCertificate) ) 

#define IltmmPlayCtrl_put_WMCertificate(This,pWMCertificate)	\
    ( (This)->lpVtbl -> put_WMCertificate(This,pWMCertificate) ) 

#define IltmmPlayCtrl_get_CurrentTrackingPosition(This,pPosition)	\
    ( (This)->lpVtbl -> get_CurrentTrackingPosition(This,pPosition) ) 

#define IltmmPlayCtrl_put_CurrentTrackingPosition(This,Position)	\
    ( (This)->lpVtbl -> put_CurrentTrackingPosition(This,Position) ) 

#define IltmmPlayCtrl_get_PlayCount(This,pPlayCount)	\
    ( (This)->lpVtbl -> get_PlayCount(This,pPlayCount) ) 

#define IltmmPlayCtrl_put_PlayCount(This,PlayCount)	\
    ( (This)->lpVtbl -> put_PlayCount(This,PlayCount) ) 

#define IltmmPlayCtrl_get_VideoWidth(This,pWidth)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pWidth) ) 

#define IltmmPlayCtrl_get_VideoHeight(This,pHeight)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pHeight) ) 

#define IltmmPlayCtrl_get_SelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_SelectionStart(This,pStart) ) 

#define IltmmPlayCtrl_put_SelectionStart(This,Start)	\
    ( (This)->lpVtbl -> put_SelectionStart(This,Start) ) 

#define IltmmPlayCtrl_get_SelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_SelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl_put_SelectionEnd(This,End)	\
    ( (This)->lpVtbl -> put_SelectionEnd(This,End) ) 

#define IltmmPlayCtrl_get_AutoStart(This,pAutoStart)	\
    ( (This)->lpVtbl -> get_AutoStart(This,pAutoStart) ) 

#define IltmmPlayCtrl_put_AutoStart(This,AutoStart)	\
    ( (This)->lpVtbl -> put_AutoStart(This,AutoStart) ) 

#define IltmmPlayCtrl_get_AutoRewind(This,pAutoRewind)	\
    ( (This)->lpVtbl -> get_AutoRewind(This,pAutoRewind) ) 

#define IltmmPlayCtrl_put_AutoRewind(This,AutoRewind)	\
    ( (This)->lpVtbl -> put_AutoRewind(This,AutoRewind) ) 

#define IltmmPlayCtrl_get_TrackingSelectionStart(This,pStart)	\
    ( (This)->lpVtbl -> get_TrackingSelectionStart(This,pStart) ) 

#define IltmmPlayCtrl_get_TrackingSelectionEnd(This,pEnd)	\
    ( (This)->lpVtbl -> get_TrackingSelectionEnd(This,pEnd) ) 

#define IltmmPlayCtrl_get_VideoWindowSizeMode(This,pSizeMode)	\
    ( (This)->lpVtbl -> get_VideoWindowSizeMode(This,pSizeMode) ) 

#define IltmmPlayCtrl_put_VideoWindowSizeMode(This,SizeMode)	\
    ( (This)->lpVtbl -> put_VideoWindowSizeMode(This,SizeMode) ) 

#define IltmmPlayCtrl_NextFrame(This)	\
    ( (This)->lpVtbl -> NextFrame(This) ) 

#define IltmmPlayCtrl_PreviousFrame(This)	\
    ( (This)->lpVtbl -> PreviousFrame(This) ) 

#define IltmmPlayCtrl_CheckSeekingCapabilities(This,Mask,pCaps)	\
    ( (This)->lpVtbl -> CheckSeekingCapabilities(This,Mask,pCaps) ) 

#define IltmmPlayCtrl_SeekSelectionStart(This)	\
    ( (This)->lpVtbl -> SeekSelectionStart(This) ) 

#define IltmmPlayCtrl_SeekSelectionEnd(This)	\
    ( (This)->lpVtbl -> SeekSelectionEnd(This) ) 

#define IltmmPlayCtrl_MarkSelectionStart(This)	\
    ( (This)->lpVtbl -> MarkSelectionStart(This) ) 

#define IltmmPlayCtrl_MarkSelectionEnd(This)	\
    ( (This)->lpVtbl -> MarkSelectionEnd(This) ) 

#define IltmmPlayCtrl_SeekStart(This)	\
    ( (This)->lpVtbl -> SeekStart(This) ) 

#define IltmmPlayCtrl_SeekEnd(This)	\
    ( (This)->lpVtbl -> SeekEnd(This) ) 

#define IltmmPlayCtrl_ToggleFullScreenMode(This)	\
    ( (This)->lpVtbl -> ToggleFullScreenMode(This) ) 

#define IltmmPlayCtrl_get_VideoWindowWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowWidth(This,pVal) ) 

#define IltmmPlayCtrl_get_VideoWindowHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHeight(This,pVal) ) 

#define IltmmPlayCtrl_get_VideoWindowLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowLeft(This,pVal) ) 

#define IltmmPlayCtrl_get_VideoWindowTop(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowTop(This,pVal) ) 

#define IltmmPlayCtrl_get_AudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl_get_VideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl_get_SelectedAudioProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedAudioProcessors(This,pVal) ) 

#define IltmmPlayCtrl_get_SelectedVideoProcessors(This,pVal)	\
    ( (This)->lpVtbl -> get_SelectedVideoProcessors(This,pVal) ) 

#define IltmmPlayCtrl_HasDialog(This,Dialog,pHasDialog)	\
    ( (This)->lpVtbl -> HasDialog(This,Dialog,pHasDialog) ) 

#define IltmmPlayCtrl_ShowDialog(This,Dialog,hWnd)	\
    ( (This)->lpVtbl -> ShowDialog(This,Dialog,hWnd) ) 

#define IltmmPlayCtrl_get_SourceType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceType(This,pVal) ) 

#define IltmmPlayCtrl_get_SourceHGlobal(This,pHGlobal)	\
    ( (This)->lpVtbl -> get_SourceHGlobal(This,pHGlobal) ) 

#define IltmmPlayCtrl_put_SourceHGlobal(This,HGlobal)	\
    ( (This)->lpVtbl -> put_SourceHGlobal(This,HGlobal) ) 

#define IltmmPlayCtrl_get_SourceArray(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceArray(This,pVal) ) 

#define IltmmPlayCtrl_put_SourceArray(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceArray(This,newVal) ) 

#define IltmmPlayCtrl_get_SourceObject(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceObject(This,pVal) ) 

#define IltmmPlayCtrl_put_SourceObject(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceObject(This,newVal) ) 

#define IltmmPlayCtrl_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmPlayCtrl_get_ScaleLeft(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleLeft(This,pVal) ) 

#define IltmmPlayCtrl_put_ScaleLeft(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleLeft(This,newVal) ) 

#define IltmmPlayCtrl_get_ScaleTop(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleTop(This,pVal) ) 

#define IltmmPlayCtrl_put_ScaleTop(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleTop(This,newVal) ) 

#define IltmmPlayCtrl_get_ScaleWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleWidth(This,pVal) ) 

#define IltmmPlayCtrl_put_ScaleWidth(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleWidth(This,newVal) ) 

#define IltmmPlayCtrl_get_ScaleHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleHeight(This,pVal) ) 

#define IltmmPlayCtrl_put_ScaleHeight(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleHeight(This,newVal) ) 

#define IltmmPlayCtrl_get_ScaleMode(This,pVal)	\
    ( (This)->lpVtbl -> get_ScaleMode(This,pVal) ) 

#define IltmmPlayCtrl_put_ScaleMode(This,newVal)	\
    ( (This)->lpVtbl -> put_ScaleMode(This,newVal) ) 

#define IltmmPlayCtrl_get_AutoSize(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoSize(This,pVal) ) 

#define IltmmPlayCtrl_put_AutoSize(This,newVal)	\
    ( (This)->lpVtbl -> put_AutoSize(This,newVal) ) 


#define IltmmPlayCtrl_get_AudioRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioRenderers(This,pVal) ) 

#define IltmmPlayCtrl_GetSubObject(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObject(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl_EditGraph(This)	\
    ( (This)->lpVtbl -> EditGraph(This) ) 


#define IltmmPlayCtrl_GetStillPicture(This,TimeOut,ppPicture)	\
    ( (This)->lpVtbl -> GetStillPicture(This,TimeOut,ppPicture) ) 

#define IltmmPlayCtrl_GetStillDIB(This,TimeOut,phDIB)	\
    ( (This)->lpVtbl -> GetStillDIB(This,TimeOut,phDIB) ) 

#define IltmmPlayCtrl_get_RenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_RenderedStreams(This,pVal) ) 

#define IltmmPlayCtrl_get_UnrenderedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_UnrenderedStreams(This,pVal) ) 


#define IltmmPlayCtrl_get_CloseCaptioning(This,pCloseCaptioning)	\
    ( (This)->lpVtbl -> get_CloseCaptioning(This,pCloseCaptioning) ) 

#define IltmmPlayCtrl_put_CloseCaptioning(This,CloseCaptioning)	\
    ( (This)->lpVtbl -> put_CloseCaptioning(This,CloseCaptioning) ) 

#define IltmmPlayCtrl_ToggleCloseCaptioning(This)	\
    ( (This)->lpVtbl -> ToggleCloseCaptioning(This) ) 

#define IltmmPlayCtrl_get_VideoWindowHandle(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWindowHandle(This,pVal) ) 

#define IltmmPlayCtrl_get_SourceVideoType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoType(This,pVal) ) 

#define IltmmPlayCtrl_get_SourceAudioType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioType(This,pVal) ) 

#define IltmmPlayCtrl_get_SourceVideoFOURCC(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceVideoFOURCC(This,pVal) ) 

#define IltmmPlayCtrl_get_SourceAudioFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceAudioFormat(This,pVal) ) 

#define IltmmPlayCtrl_get_AllowedStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_AllowedStreams(This,pVal) ) 

#define IltmmPlayCtrl_put_AllowedStreams(This,newVal)	\
    ( (This)->lpVtbl -> put_AllowedStreams(This,newVal) ) 

#define IltmmPlayCtrl_GetSubObjectDispatch(This,ObjType,ppObject)	\
    ( (This)->lpVtbl -> GetSubObjectDispatch(This,ObjType,ppObject) ) 

#define IltmmPlayCtrl_get_MidiRenderers(This,pVal)	\
    ( (This)->lpVtbl -> get_MidiRenderers(This,pVal) ) 

#define IltmmPlayCtrl_get_DVDecoderResolution(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDecoderResolution(This,pVal) ) 

#define IltmmPlayCtrl_put_DVDecoderResolution(This,Val)	\
    ( (This)->lpVtbl -> put_DVDecoderResolution(This,Val) ) 

#define IltmmPlayCtrl_SetVideoWindowPos(This,Left,Top,Width,Height)	\
    ( (This)->lpVtbl -> SetVideoWindowPos(This,Left,Top,Width,Height) ) 

#define IltmmPlayCtrl_get_SourceStream(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceStream(This,pVal) ) 

#define IltmmPlayCtrl_put_SourceStream(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceStream(This,newVal) ) 

#define IltmmPlayCtrl_IsRateSupported(This,Rate,pResult)	\
    ( (This)->lpVtbl -> IsRateSupported(This,Rate,pResult) ) 

#define IltmmPlayCtrl_SaveStillDIB(This,filename,timeout)	\
    ( (This)->lpVtbl -> SaveStillDIB(This,filename,timeout) ) 

#define IltmmPlayCtrl_get_UsingDVDecoder(This,pVal)	\
    ( (This)->lpVtbl -> get_UsingDVDecoder(This,pVal) ) 


#define IltmmPlayCtrl_get_StillTap(This,pVal)	\
    ( (This)->lpVtbl -> get_StillTap(This,pVal) ) 

#define IltmmPlayCtrl_put_StillTap(This,newVal)	\
    ( (This)->lpVtbl -> put_StillTap(This,newVal) ) 

#define IltmmPlayCtrl_SaveStillBitmap(This,filename,format,quality,flags,timeout)	\
    ( (This)->lpVtbl -> SaveStillBitmap(This,filename,format,quality,flags,timeout) ) 

#define IltmmPlayCtrl_SaveSettingsToStream(This,targetstream,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToStream(This,targetstream,flags) ) 

#define IltmmPlayCtrl_SaveSettingsToFile(This,targetfile,flags)	\
    ( (This)->lpVtbl -> SaveSettingsToFile(This,targetfile,flags) ) 

#define IltmmPlayCtrl_LoadSettingsFromStream(This,sourcestream,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromStream(This,sourcestream,flags) ) 

#define IltmmPlayCtrl_LoadSettingsFromFile(This,sourcefile,flags)	\
    ( (This)->lpVtbl -> LoadSettingsFromFile(This,sourcefile,flags) ) 

#define IltmmPlayCtrl_CanSaveObjectSettings(This,flags,pVal)	\
    ( (This)->lpVtbl -> CanSaveObjectSettings(This,flags,pVal) ) 


#define IltmmPlayCtrl_get_DVDControl(This,pVal)	\
    ( (This)->lpVtbl -> get_DVDControl(This,pVal) ) 


#define IltmmPlayCtrl_get_PreferredMPEG2Splitter(This,pVal)	\
    ( (This)->lpVtbl -> get_PreferredMPEG2Splitter(This,pVal) ) 

#define IltmmPlayCtrl_put_PreferredMPEG2Splitter(This,newVal)	\
    ( (This)->lpVtbl -> put_PreferredMPEG2Splitter(This,newVal) ) 


#define IltmmPlayCtrl_get_UseDVDSource(This,pVal)	\
    ( (This)->lpVtbl -> get_UseDVDSource(This,pVal) ) 

#define IltmmPlayCtrl_put_UseDVDSource(This,newVal)	\
    ( (This)->lpVtbl -> put_UseDVDSource(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl_get_UseDVDSource_Proxy( 
    IltmmPlayCtrl * This,
    /* [retval][out] */ VARIANT_BOOL *pVal);


void __RPC_STUB IltmmPlayCtrl_get_UseDVDSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IltmmPlayCtrl_put_UseDVDSource_Proxy( 
    IltmmPlayCtrl * This,
    /* [in] */ VARIANT_BOOL newVal);


void __RPC_STUB IltmmPlayCtrl_put_UseDVDSource_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IltmmPlayCtrl_INTERFACE_DEFINED__ */


#ifndef ___IltmmPlayCtrlEvents_DISPINTERFACE_DEFINED__
#define ___IltmmPlayCtrlEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IltmmPlayCtrlEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID__IltmmPlayCtrlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00161018-B1BA-11CE-ABC6-F5B2E79D9E3F")
    _IltmmPlayCtrlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IltmmPlayCtrlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IltmmPlayCtrlEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IltmmPlayCtrlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IltmmPlayCtrlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IltmmPlayCtrlEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IltmmPlayCtrlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IltmmPlayCtrlEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IltmmPlayCtrlEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _IltmmPlayCtrlEventsVtbl;

    interface _IltmmPlayCtrlEvents
    {
        CONST_VTBL struct _IltmmPlayCtrlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IltmmPlayCtrlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IltmmPlayCtrlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IltmmPlayCtrlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IltmmPlayCtrlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IltmmPlayCtrlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IltmmPlayCtrlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IltmmPlayCtrlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IltmmPlayCtrlEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IltmmStreamMoniker_INTERFACE_DEFINED__
#define __IltmmStreamMoniker_INTERFACE_DEFINED__

/* interface IltmmStreamMoniker */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IltmmStreamMoniker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016105A-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmStreamMoniker : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetStream( 
            /* [in] */ IStream *pStream) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetStream( 
            /* [out] */ IStream **ppStream) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmStreamMonikerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmStreamMoniker * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmStreamMoniker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmStreamMoniker * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetStream )( 
            IltmmStreamMoniker * This,
            /* [in] */ IStream *pStream);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStream )( 
            IltmmStreamMoniker * This,
            /* [out] */ IStream **ppStream);
        
        END_INTERFACE
    } IltmmStreamMonikerVtbl;

    interface IltmmStreamMoniker
    {
        CONST_VTBL struct IltmmStreamMonikerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmStreamMoniker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmStreamMoniker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmStreamMoniker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmStreamMoniker_SetStream(This,pStream)	\
    ( (This)->lpVtbl -> SetStream(This,pStream) ) 

#define IltmmStreamMoniker_GetStream(This,ppStream)	\
    ( (This)->lpVtbl -> GetStream(This,ppStream) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmStreamMoniker_INTERFACE_DEFINED__ */


#ifndef __IltmmMemory_INTERFACE_DEFINED__
#define __IltmmMemory_INTERFACE_DEFINED__

/* interface IltmmMemory */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IltmmMemory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016105C-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmMemory : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_BufferSize( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_BufferSize( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LockBuffer( 
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE LockRegion( 
            /* [in] */ long Index,
            /* [in] */ long Count,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE Unlock( void) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetByte( 
            /* [in] */ long Index,
            /* [retval][out] */ short *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetByte( 
            /* [in] */ long Index,
            /* [in] */ short Val) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetData( 
            /* [in] */ long Index,
            /* [in] */ long Count,
            /* [in] */ VARIANT Data) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetData( 
            /* [in] */ long Index,
            /* [in] */ long Count,
            /* [retval][out] */ VARIANT *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE CopyData( 
            /* [in] */ long Index,
            /* [in] */ long Count,
            /* [out][in] */ VARIANT *Data) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_GrowBy( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_GrowBy( 
            /* [in] */ long newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmMemoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmMemory * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmMemory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmMemory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmMemory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmMemory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmMemory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmMemory * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BufferSize )( 
            IltmmMemory * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BufferSize )( 
            IltmmMemory * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LockBuffer )( 
            IltmmMemory * This,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LockRegion )( 
            IltmmMemory * This,
            /* [in] */ long Index,
            /* [in] */ long Count,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Unlock )( 
            IltmmMemory * This);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetByte )( 
            IltmmMemory * This,
            /* [in] */ long Index,
            /* [retval][out] */ short *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetByte )( 
            IltmmMemory * This,
            /* [in] */ long Index,
            /* [in] */ short Val);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetData )( 
            IltmmMemory * This,
            /* [in] */ long Index,
            /* [in] */ long Count,
            /* [in] */ VARIANT Data);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetData )( 
            IltmmMemory * This,
            /* [in] */ long Index,
            /* [in] */ long Count,
            /* [retval][out] */ VARIANT *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CopyData )( 
            IltmmMemory * This,
            /* [in] */ long Index,
            /* [in] */ long Count,
            /* [out][in] */ VARIANT *Data);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GrowBy )( 
            IltmmMemory * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_GrowBy )( 
            IltmmMemory * This,
            /* [in] */ long newVal);
        
        END_INTERFACE
    } IltmmMemoryVtbl;

    interface IltmmMemory
    {
        CONST_VTBL struct IltmmMemoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmMemory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmMemory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmMemory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmMemory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmMemory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmMemory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmMemory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmMemory_get_BufferSize(This,pVal)	\
    ( (This)->lpVtbl -> get_BufferSize(This,pVal) ) 

#define IltmmMemory_put_BufferSize(This,newVal)	\
    ( (This)->lpVtbl -> put_BufferSize(This,newVal) ) 

#define IltmmMemory_LockBuffer(This,pVal)	\
    ( (This)->lpVtbl -> LockBuffer(This,pVal) ) 

#define IltmmMemory_LockRegion(This,Index,Count,pVal)	\
    ( (This)->lpVtbl -> LockRegion(This,Index,Count,pVal) ) 

#define IltmmMemory_Unlock(This)	\
    ( (This)->lpVtbl -> Unlock(This) ) 

#define IltmmMemory_GetByte(This,Index,pVal)	\
    ( (This)->lpVtbl -> GetByte(This,Index,pVal) ) 

#define IltmmMemory_SetByte(This,Index,Val)	\
    ( (This)->lpVtbl -> SetByte(This,Index,Val) ) 

#define IltmmMemory_SetData(This,Index,Count,Data)	\
    ( (This)->lpVtbl -> SetData(This,Index,Count,Data) ) 

#define IltmmMemory_GetData(This,Index,Count,pVal)	\
    ( (This)->lpVtbl -> GetData(This,Index,Count,pVal) ) 

#define IltmmMemory_CopyData(This,Index,Count,Data)	\
    ( (This)->lpVtbl -> CopyData(This,Index,Count,Data) ) 

#define IltmmMemory_get_GrowBy(This,pVal)	\
    ( (This)->lpVtbl -> get_GrowBy(This,pVal) ) 

#define IltmmMemory_put_GrowBy(This,newVal)	\
    ( (This)->lpVtbl -> put_GrowBy(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmMemory_INTERFACE_DEFINED__ */


#ifndef __IltmmMediaInfo1_INTERFACE_DEFINED__
#define __IltmmMediaInfo1_INTERFACE_DEFINED__

/* interface IltmmMediaInfo1 */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IltmmMediaInfo1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016106D-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmMediaInfo1 : public IDispatch
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_OutputStreams( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentStream( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentStream( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamType( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamDuration( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFile( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceFile( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoFrameRate( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamMediaType( 
            /* [retval][out] */ IltmmMediaTypeDisp **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceMediaType( 
            /* [retval][out] */ IltmmMediaTypeDisp **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFilterClassID( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoWidth( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoHeight( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoBitCount( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoCompression( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioFormatTag( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioChannels( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioSamplesPerSec( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioBitsPerSample( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_AudioAvgBytesPerSec( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoBitRate( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Copyright( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Rating( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFormat( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFilter( 
            /* [retval][out] */ IUnknown **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFilterDispatch( 
            /* [retval][out] */ IDispatch **pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_VideoFrames( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetSource( void) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamTypeName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamSubtypeName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_StreamSubtype( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFormatName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmMediaInfo1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmMediaInfo1 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmMediaInfo1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmMediaInfo1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmMediaInfo1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmMediaInfo1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmMediaInfo1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmMediaInfo1 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OutputStreams )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentStream )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentStream )( 
            IltmmMediaInfo1 * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamType )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamDuration )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmMediaInfo1 * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoFrameRate )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamMediaType )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ IltmmMediaTypeDisp **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceMediaType )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ IltmmMediaTypeDisp **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFilterClassID )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoBitCount )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompression )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioFormatTag )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioChannels )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioSamplesPerSec )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBitsPerSample )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioAvgBytesPerSec )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoBitRate )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFormat )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFilter )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFilterDispatch )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ IDispatch **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoFrames )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmMediaInfo1 * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamTypeName )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamSubtypeName )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamSubtype )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFormatName )( 
            IltmmMediaInfo1 * This,
            /* [retval][out] */ BSTR *pVal);
        
        END_INTERFACE
    } IltmmMediaInfo1Vtbl;

    interface IltmmMediaInfo1
    {
        CONST_VTBL struct IltmmMediaInfo1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmMediaInfo1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmMediaInfo1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmMediaInfo1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmMediaInfo1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmMediaInfo1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmMediaInfo1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmMediaInfo1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmMediaInfo1_get_OutputStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_OutputStreams(This,pVal) ) 

#define IltmmMediaInfo1_get_CurrentStream(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentStream(This,pVal) ) 

#define IltmmMediaInfo1_put_CurrentStream(This,newVal)	\
    ( (This)->lpVtbl -> put_CurrentStream(This,newVal) ) 

#define IltmmMediaInfo1_get_StreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamType(This,pVal) ) 

#define IltmmMediaInfo1_get_StreamDuration(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamDuration(This,pVal) ) 

#define IltmmMediaInfo1_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmMediaInfo1_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmMediaInfo1_get_VideoFrameRate(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoFrameRate(This,pVal) ) 

#define IltmmMediaInfo1_get_StreamMediaType(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamMediaType(This,pVal) ) 

#define IltmmMediaInfo1_get_SourceMediaType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceMediaType(This,pVal) ) 

#define IltmmMediaInfo1_get_SourceFilterClassID(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFilterClassID(This,pVal) ) 

#define IltmmMediaInfo1_get_VideoWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pVal) ) 

#define IltmmMediaInfo1_get_VideoHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pVal) ) 

#define IltmmMediaInfo1_get_VideoBitCount(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoBitCount(This,pVal) ) 

#define IltmmMediaInfo1_get_VideoCompression(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompression(This,pVal) ) 

#define IltmmMediaInfo1_get_AudioFormatTag(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioFormatTag(This,pVal) ) 

#define IltmmMediaInfo1_get_AudioChannels(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioChannels(This,pVal) ) 

#define IltmmMediaInfo1_get_AudioSamplesPerSec(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioSamplesPerSec(This,pVal) ) 

#define IltmmMediaInfo1_get_AudioBitsPerSample(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBitsPerSample(This,pVal) ) 

#define IltmmMediaInfo1_get_AudioAvgBytesPerSec(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioAvgBytesPerSec(This,pVal) ) 

#define IltmmMediaInfo1_get_VideoBitRate(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoBitRate(This,pVal) ) 

#define IltmmMediaInfo1_get_Copyright(This,pVal)	\
    ( (This)->lpVtbl -> get_Copyright(This,pVal) ) 

#define IltmmMediaInfo1_get_Author(This,pVal)	\
    ( (This)->lpVtbl -> get_Author(This,pVal) ) 

#define IltmmMediaInfo1_get_Title(This,pVal)	\
    ( (This)->lpVtbl -> get_Title(This,pVal) ) 

#define IltmmMediaInfo1_get_Description(This,pVal)	\
    ( (This)->lpVtbl -> get_Description(This,pVal) ) 

#define IltmmMediaInfo1_get_Rating(This,pVal)	\
    ( (This)->lpVtbl -> get_Rating(This,pVal) ) 

#define IltmmMediaInfo1_get_SourceFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFormat(This,pVal) ) 

#define IltmmMediaInfo1_get_SourceFilter(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFilter(This,pVal) ) 

#define IltmmMediaInfo1_get_SourceFilterDispatch(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFilterDispatch(This,pVal) ) 

#define IltmmMediaInfo1_get_VideoFrames(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoFrames(This,pVal) ) 

#define IltmmMediaInfo1_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmMediaInfo1_get_StreamTypeName(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamTypeName(This,pVal) ) 

#define IltmmMediaInfo1_get_StreamSubtypeName(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamSubtypeName(This,pVal) ) 

#define IltmmMediaInfo1_get_StreamSubtype(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamSubtype(This,pVal) ) 

#define IltmmMediaInfo1_get_SourceFormatName(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFormatName(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmMediaInfo1_INTERFACE_DEFINED__ */


#ifndef __IltmmMediaInfo_INTERFACE_DEFINED__
#define __IltmmMediaInfo_INTERFACE_DEFINED__

/* interface IltmmMediaInfo */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IltmmMediaInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0016108E-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmMediaInfo : public IltmmMediaInfo1
    {
    public:
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceDuration( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFileSize( 
            /* [retval][out] */ double *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceBitRate( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [helpstring][helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceFilterName( 
            /* [retval][out] */ BSTR *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmMediaInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmMediaInfo * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmMediaInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmMediaInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmMediaInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmMediaInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmMediaInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmMediaInfo * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OutputStreams )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentStream )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentStream )( 
            IltmmMediaInfo * This,
            /* [in] */ long newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamType )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamDuration )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFile )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceFile )( 
            IltmmMediaInfo * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoFrameRate )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamMediaType )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ IltmmMediaTypeDisp **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceMediaType )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ IltmmMediaTypeDisp **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFilterClassID )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoWidth )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoHeight )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoBitCount )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoCompression )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioFormatTag )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioChannels )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioSamplesPerSec )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioBitsPerSample )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AudioAvgBytesPerSec )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoBitRate )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Copyright )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rating )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFormat )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFilter )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ IUnknown **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFilterDispatch )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ IDispatch **pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VideoFrames )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetSource )( 
            IltmmMediaInfo * This);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamTypeName )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamSubtypeName )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamSubtype )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFormatName )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceDuration )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFileSize )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ double *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceBitRate )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ long *pVal);
        
        /* [helpstring][helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceFilterName )( 
            IltmmMediaInfo * This,
            /* [retval][out] */ BSTR *pVal);
        
        END_INTERFACE
    } IltmmMediaInfoVtbl;

    interface IltmmMediaInfo
    {
        CONST_VTBL struct IltmmMediaInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmMediaInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmMediaInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmMediaInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmMediaInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmMediaInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmMediaInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmMediaInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmMediaInfo_get_OutputStreams(This,pVal)	\
    ( (This)->lpVtbl -> get_OutputStreams(This,pVal) ) 

#define IltmmMediaInfo_get_CurrentStream(This,pVal)	\
    ( (This)->lpVtbl -> get_CurrentStream(This,pVal) ) 

#define IltmmMediaInfo_put_CurrentStream(This,newVal)	\
    ( (This)->lpVtbl -> put_CurrentStream(This,newVal) ) 

#define IltmmMediaInfo_get_StreamType(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamType(This,pVal) ) 

#define IltmmMediaInfo_get_StreamDuration(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamDuration(This,pVal) ) 

#define IltmmMediaInfo_get_SourceFile(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFile(This,pVal) ) 

#define IltmmMediaInfo_put_SourceFile(This,newVal)	\
    ( (This)->lpVtbl -> put_SourceFile(This,newVal) ) 

#define IltmmMediaInfo_get_VideoFrameRate(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoFrameRate(This,pVal) ) 

#define IltmmMediaInfo_get_StreamMediaType(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamMediaType(This,pVal) ) 

#define IltmmMediaInfo_get_SourceMediaType(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceMediaType(This,pVal) ) 

#define IltmmMediaInfo_get_SourceFilterClassID(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFilterClassID(This,pVal) ) 

#define IltmmMediaInfo_get_VideoWidth(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoWidth(This,pVal) ) 

#define IltmmMediaInfo_get_VideoHeight(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoHeight(This,pVal) ) 

#define IltmmMediaInfo_get_VideoBitCount(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoBitCount(This,pVal) ) 

#define IltmmMediaInfo_get_VideoCompression(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoCompression(This,pVal) ) 

#define IltmmMediaInfo_get_AudioFormatTag(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioFormatTag(This,pVal) ) 

#define IltmmMediaInfo_get_AudioChannels(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioChannels(This,pVal) ) 

#define IltmmMediaInfo_get_AudioSamplesPerSec(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioSamplesPerSec(This,pVal) ) 

#define IltmmMediaInfo_get_AudioBitsPerSample(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioBitsPerSample(This,pVal) ) 

#define IltmmMediaInfo_get_AudioAvgBytesPerSec(This,pVal)	\
    ( (This)->lpVtbl -> get_AudioAvgBytesPerSec(This,pVal) ) 

#define IltmmMediaInfo_get_VideoBitRate(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoBitRate(This,pVal) ) 

#define IltmmMediaInfo_get_Copyright(This,pVal)	\
    ( (This)->lpVtbl -> get_Copyright(This,pVal) ) 

#define IltmmMediaInfo_get_Author(This,pVal)	\
    ( (This)->lpVtbl -> get_Author(This,pVal) ) 

#define IltmmMediaInfo_get_Title(This,pVal)	\
    ( (This)->lpVtbl -> get_Title(This,pVal) ) 

#define IltmmMediaInfo_get_Description(This,pVal)	\
    ( (This)->lpVtbl -> get_Description(This,pVal) ) 

#define IltmmMediaInfo_get_Rating(This,pVal)	\
    ( (This)->lpVtbl -> get_Rating(This,pVal) ) 

#define IltmmMediaInfo_get_SourceFormat(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFormat(This,pVal) ) 

#define IltmmMediaInfo_get_SourceFilter(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFilter(This,pVal) ) 

#define IltmmMediaInfo_get_SourceFilterDispatch(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFilterDispatch(This,pVal) ) 

#define IltmmMediaInfo_get_VideoFrames(This,pVal)	\
    ( (This)->lpVtbl -> get_VideoFrames(This,pVal) ) 

#define IltmmMediaInfo_ResetSource(This)	\
    ( (This)->lpVtbl -> ResetSource(This) ) 

#define IltmmMediaInfo_get_StreamTypeName(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamTypeName(This,pVal) ) 

#define IltmmMediaInfo_get_StreamSubtypeName(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamSubtypeName(This,pVal) ) 

#define IltmmMediaInfo_get_StreamSubtype(This,pVal)	\
    ( (This)->lpVtbl -> get_StreamSubtype(This,pVal) ) 

#define IltmmMediaInfo_get_SourceFormatName(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFormatName(This,pVal) ) 


#define IltmmMediaInfo_get_SourceDuration(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceDuration(This,pVal) ) 

#define IltmmMediaInfo_get_SourceFileSize(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFileSize(This,pVal) ) 

#define IltmmMediaInfo_get_SourceBitRate(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceBitRate(This,pVal) ) 

#define IltmmMediaInfo_get_SourceFilterName(This,pVal)	\
    ( (This)->lpVtbl -> get_SourceFilterName(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmMediaInfo_INTERFACE_DEFINED__ */


#ifndef __IltmmSupportManager_INTERFACE_DEFINED__
#define __IltmmSupportManager_INTERFACE_DEFINED__

/* interface IltmmSupportManager */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IltmmSupportManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("001610A2-B1BA-11CE-ABC6-F5B2E79D9E3F")
    IltmmSupportManager : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsSupportLocked( 
            /* [in] */ long Support,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE UnlockSupport( 
            /* [in] */ long Support,
            /* [in] */ BSTR Key) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IltmmSupportManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IltmmSupportManager * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IltmmSupportManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IltmmSupportManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IltmmSupportManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IltmmSupportManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IltmmSupportManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IltmmSupportManager * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsSupportLocked )( 
            IltmmSupportManager * This,
            /* [in] */ long Support,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *UnlockSupport )( 
            IltmmSupportManager * This,
            /* [in] */ long Support,
            /* [in] */ BSTR Key);
        
        END_INTERFACE
    } IltmmSupportManagerVtbl;

    interface IltmmSupportManager
    {
        CONST_VTBL struct IltmmSupportManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IltmmSupportManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IltmmSupportManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IltmmSupportManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IltmmSupportManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IltmmSupportManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IltmmSupportManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IltmmSupportManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IltmmSupportManager_IsSupportLocked(This,Support,pVal)	\
    ( (This)->lpVtbl -> IsSupportLocked(This,Support,pVal) ) 

#define IltmmSupportManager_UnlockSupport(This,Support,Key)	\
    ( (This)->lpVtbl -> UnlockSupport(This,Support,Key) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IltmmSupportManager_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ltmmCapture;

#ifdef __cplusplus

class DECLSPEC_UUID("00161019-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCapture;
#endif

EXTERN_C const CLSID CLSID_ltmmCaptureCtrl;

#ifdef __cplusplus

class DECLSPEC_UUID("0016101A-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCaptureCtrl;
#endif

EXTERN_C const CLSID CLSID_ltmmCaptureInput;

#ifdef __cplusplus

class DECLSPEC_UUID("0016101B-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCaptureInput;
#endif

EXTERN_C const CLSID CLSID_ltmmCaptureInputs;

#ifdef __cplusplus

class DECLSPEC_UUID("0016101C-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCaptureInputs;
#endif

EXTERN_C const CLSID CLSID_ltmmCaptureSize;

#ifdef __cplusplus

class DECLSPEC_UUID("00161037-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCaptureSize;
#endif

EXTERN_C const CLSID CLSID_ltmmCaptureSizes;

#ifdef __cplusplus

class DECLSPEC_UUID("00161038-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCaptureSizes;
#endif

EXTERN_C const CLSID CLSID_ltmmVideoFormat;

#ifdef __cplusplus

class DECLSPEC_UUID("00161087-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmVideoFormat;
#endif

EXTERN_C const CLSID CLSID_ltmmVideoFormats;

#ifdef __cplusplus

class DECLSPEC_UUID("00161088-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmVideoFormats;
#endif

EXTERN_C const CLSID CLSID_ltmmAudioFormat;

#ifdef __cplusplus

class DECLSPEC_UUID("00161078-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmAudioFormat;
#endif

EXTERN_C const CLSID CLSID_ltmmAudioFormats;

#ifdef __cplusplus

class DECLSPEC_UUID("00161079-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmAudioFormats;
#endif

EXTERN_C const CLSID CLSID_ltmmCaptureSubType;

#ifdef __cplusplus

class DECLSPEC_UUID("00161071-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCaptureSubType;
#endif

EXTERN_C const CLSID CLSID_ltmmCaptureSubTypes;

#ifdef __cplusplus

class DECLSPEC_UUID("00161072-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCaptureSubTypes;
#endif

EXTERN_C const CLSID CLSID_ltmmTargetFormat;

#ifdef __cplusplus

class DECLSPEC_UUID("00161041-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmTargetFormat;
#endif

EXTERN_C const CLSID CLSID_ltmmTargetFormats;

#ifdef __cplusplus

class DECLSPEC_UUID("00161042-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmTargetFormats;
#endif

EXTERN_C const CLSID CLSID_ltmmCompressor;

#ifdef __cplusplus

class DECLSPEC_UUID("0016101D-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCompressor;
#endif

EXTERN_C const CLSID CLSID_ltmmCompressors;

#ifdef __cplusplus

class DECLSPEC_UUID("0016101E-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCompressors;
#endif

EXTERN_C const CLSID CLSID_ltmmConvert;

#ifdef __cplusplus

class DECLSPEC_UUID("0016101F-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmConvert;
#endif

EXTERN_C const CLSID CLSID_ltmmConvertCtrl;

#ifdef __cplusplus

class DECLSPEC_UUID("00161020-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmConvertCtrl;
#endif

EXTERN_C const CLSID CLSID_ltmmDevice;

#ifdef __cplusplus

class DECLSPEC_UUID("00161021-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDevice;
#endif

EXTERN_C const CLSID CLSID_ltmmDevices;

#ifdef __cplusplus

class DECLSPEC_UUID("00161022-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDevices;
#endif

EXTERN_C const CLSID CLSID_ltmmTargetDevice;

#ifdef __cplusplus

class DECLSPEC_UUID("00161047-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmTargetDevice;
#endif

EXTERN_C const CLSID CLSID_ltmmTargetDevices;

#ifdef __cplusplus

class DECLSPEC_UUID("00161048-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmTargetDevices;
#endif

EXTERN_C const CLSID CLSID_ltmmRenderer;

#ifdef __cplusplus

class DECLSPEC_UUID("0016102F-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmRenderer;
#endif

EXTERN_C const CLSID CLSID_ltmmRenderers;

#ifdef __cplusplus

class DECLSPEC_UUID("00161030-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmRenderers;
#endif

EXTERN_C const CLSID CLSID_ltmmMediaSample;

#ifdef __cplusplus

class DECLSPEC_UUID("00161023-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmMediaSample;
#endif

EXTERN_C const CLSID CLSID_ltmmMediaType;

#ifdef __cplusplus

class DECLSPEC_UUID("00161024-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmMediaType;
#endif

EXTERN_C const CLSID CLSID_ltmmPlay;

#ifdef __cplusplus

class DECLSPEC_UUID("00161025-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmPlay;
#endif

EXTERN_C const CLSID CLSID_ltmmPlayCtrl;

#ifdef __cplusplus

class DECLSPEC_UUID("00161026-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmPlayCtrl;
#endif

EXTERN_C const CLSID CLSID_ltmmProcessor;

#ifdef __cplusplus

class DECLSPEC_UUID("00161027-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmProcessor;
#endif

EXTERN_C const CLSID CLSID_ltmmProcessors;

#ifdef __cplusplus

class DECLSPEC_UUID("00161028-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmProcessors;
#endif

EXTERN_C const CLSID CLSID_ltmmSampleSource;

#ifdef __cplusplus

class DECLSPEC_UUID("00161029-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmSampleSource;
#endif

EXTERN_C const CLSID CLSID_ltmmMultiStreamSource;

#ifdef __cplusplus

class DECLSPEC_UUID("00161064-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmMultiStreamSource;
#endif

EXTERN_C const CLSID CLSID_ltmmSampleTarget;

#ifdef __cplusplus

class DECLSPEC_UUID("0016102A-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmSampleTarget;
#endif

EXTERN_C const CLSID CLSID_ltmmMultiStreamTarget;

#ifdef __cplusplus

class DECLSPEC_UUID("00161066-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmMultiStreamTarget;
#endif

EXTERN_C const CLSID CLSID_ltmmVCRControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0016103D-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmVCRControl;
#endif

EXTERN_C const CLSID CLSID_ltmmDVDControl;

#ifdef __cplusplus

class DECLSPEC_UUID("0016107C-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDVDControl;
#endif

EXTERN_C const CLSID CLSID_ltmmCameraControl;

#ifdef __cplusplus

class DECLSPEC_UUID("00161069-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmCameraControl;
#endif

EXTERN_C const CLSID CLSID_ltmmVideoProcAmp;

#ifdef __cplusplus

class DECLSPEC_UUID("00161081-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmVideoProcAmp;
#endif

EXTERN_C const CLSID CLSID_ltmmWMMutualExclusion;

#ifdef __cplusplus

class DECLSPEC_UUID("00161055-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmWMMutualExclusion;
#endif

EXTERN_C const CLSID CLSID_ltmmWMStreamConfig;

#ifdef __cplusplus

class DECLSPEC_UUID("00161053-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmWMStreamConfig;
#endif

EXTERN_C const CLSID CLSID_ltmmWMProfile;

#ifdef __cplusplus

class DECLSPEC_UUID("00161051-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmWMProfile;
#endif

EXTERN_C const CLSID CLSID_ltmmWMProfileManager;

#ifdef __cplusplus

class DECLSPEC_UUID("0016104F-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmWMProfileManager;
#endif

EXTERN_C const CLSID CLSID_ltmmDVDSubpictureStream;

#ifdef __cplusplus

class DECLSPEC_UUID("001610AD-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDVDSubpictureStream;
#endif

EXTERN_C const CLSID CLSID_ltmmDVDAudioStream;

#ifdef __cplusplus

class DECLSPEC_UUID("001610AB-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDVDAudioStream;
#endif

EXTERN_C const CLSID CLSID_ltmmDVDChapter;

#ifdef __cplusplus

class DECLSPEC_UUID("001610A9-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDVDChapter;
#endif

EXTERN_C const CLSID CLSID_ltmmDVDTitle;

#ifdef __cplusplus

class DECLSPEC_UUID("001610A7-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDVDTitle;
#endif

EXTERN_C const CLSID CLSID_ltmmDVDSource;

#ifdef __cplusplus

class DECLSPEC_UUID("001610A5-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDVDSource;
#endif

EXTERN_C const CLSID CLSID_ltmmDVDPlaylistParser;

#ifdef __cplusplus

class DECLSPEC_UUID("001610B3-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmDVDPlaylistParser;
#endif

EXTERN_C const CLSID CLSID_ltmmTVTuner;

#ifdef __cplusplus

class DECLSPEC_UUID("00161057-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmTVTuner;
#endif

EXTERN_C const CLSID CLSID_ltmmAnalogVideoDecoder;

#ifdef __cplusplus

class DECLSPEC_UUID("0016108B-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmAnalogVideoDecoder;
#endif

EXTERN_C const CLSID CLSID_ltmmStreamMoniker;

#ifdef __cplusplus

class DECLSPEC_UUID("00161059-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmStreamMoniker;
#endif

EXTERN_C const CLSID CLSID_ltmmMemory;

#ifdef __cplusplus

class DECLSPEC_UUID("0016105B-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmMemory;
#endif

EXTERN_C const CLSID CLSID_ltmmAudioInput;

#ifdef __cplusplus

class DECLSPEC_UUID("0016105E-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmAudioInput;
#endif

EXTERN_C const CLSID CLSID_ltmmAudioInputs;

#ifdef __cplusplus

class DECLSPEC_UUID("00161060-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmAudioInputs;
#endif

EXTERN_C const CLSID CLSID_ltmmMediaInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("0016106E-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmMediaInfo;
#endif

EXTERN_C const CLSID CLSID_ltmmSupportManager;

#ifdef __cplusplus

class DECLSPEC_UUID("001610A1-B1BA-11CE-ABC6-F5B2E79D9E3F")
ltmmSupportManager;
#endif
#endif /* __LTMMLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


